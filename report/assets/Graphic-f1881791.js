import{e as s,c as y}from"./subclass-f7409b1b.js";import{n as g}from"./geometry-31b45acd.js";import{P as h}from"./PopupTemplate-18f22683.js";import{a as m}from"./symbols-b3e075ad.js";import{i as c}from"./Clonable-b71fa929.js";import{h as u,g as b,y as a,f}from"./JSONSupport-acf2865c.js";import"./typedArrayUtil-2af43698.js";import"./Error-21d1d076.js";import{y as p}from"./jsonUtils-2c7f966c.js";var n;function d(e){if(!e)return null;const t={};for(const r in e){const o=p(e[r]);o&&(t[r]=o)}return Object.keys(t).length!==0?t:null}function v(e){if(e==null)return null;const t={};for(const r in e){const o=e[r];o&&(t[r]=o.toJSON())}return Object.keys(t).length!==0?t:null}let i=n=class extends c(f){constructor(...e){super(...e),this.isAggregate=!1,this.layer=null,this.origin=null,this.popupTemplate=null,this.sourceLayer=null,Object.defineProperty(this,"uid",{value:u(),configurable:!0})}normalizeCtorArgs(e,t,r,o){return e&&!e.declaredClass?e:{geometry:e,symbol:t,attributes:r,popupTemplate:o}}set aggregateGeometries(e){const t=this._get("aggregateGeometries");JSON.stringify(t)!==JSON.stringify(e)&&this._set("aggregateGeometries",e)}set attributes(e){const t=this._get("attributes");t!==e&&(this._set("attributes",e),this._notifyLayer("attributes",t,e))}set geometry(e){const t=this._get("geometry");t!==e&&(this._set("geometry",e),this._notifyLayer("geometry",t,e))}set symbol(e){const t=this._get("symbol");t!==e&&(this._set("symbol",e),this._notifyLayer("symbol",t,e))}set visible(e){const t=this._get("visible");t!==e&&(this._set("visible",e),this._notifyLayer("visible",t,e))}cloneShallow(){return new n({aggregateGeometries:this.aggregateGeometries,attributes:this.attributes,geometry:this.geometry,isAggregate:this.isAggregate,layer:this.layer,popupTemplate:this.popupTemplate,sourceLayer:this.sourceLayer,symbol:this.symbol,visible:this.visible,origin:this.origin})}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.origin&&"layer"in this.origin?this.origin.layer:null;for(const r of[t,this.sourceLayer,this.layer])if(r){if("popupTemplate"in r&&r.popupTemplate)return r.popupTemplate;if(e&&"defaultPopupTemplate"in r&&r.defaultPopupTemplate!=null)return r.defaultPopupTemplate}return null}getAttribute(e){var t;return(t=this.attributes)==null?void 0:t[e]}setAttribute(e,t){if(this.attributes){const r=this.getAttribute(e);this.attributes[e]=t,this._notifyLayer("attributes",r,t,e)}else this.attributes={[e]:t},this._notifyLayer("attributes",void 0,t,e)}getObjectId(){return this.sourceLayer&&"objectIdField"in this.sourceLayer&&this.sourceLayer.objectIdField?this.getAttribute(this.sourceLayer.objectIdField):null}toJSON(){var e;return{aggregateGeometries:v(this.aggregateGeometries),geometry:this.geometry!=null?this.geometry.toJSON():null,symbol:this.symbol!=null?this.symbol.toJSON():null,attributes:b(this.attributes)?this.attributes.toJSON():{...this.attributes},popupTemplate:((e=this.popupTemplate)==null?void 0:e.toJSON())??null}}notifyGeometryChanged(){this._notifyLayer("geometry",this.geometry,this.geometry)}notifyMeshTransformChanged(e={}){const{geometry:t}=this;if((t==null?void 0:t.type)==="mesh"){const r={origin:t.origin,transform:t.transform};this._notifyLayer("origin-transform",r,r,e.action)}}_notifyLayer(e,t,r,o){if(!this.layer||!("graphicChanged"in this.layer))return;const l={graphic:this,property:e,oldValue:t,newValue:r};e==="origin-transform"&&(l.action=o),e==="attributes"&&(l.attributeName=o),this.layer.graphicChanged(l)}};s([a({value:null,json:{read:d}})],i.prototype,"aggregateGeometries",null),s([a({value:null})],i.prototype,"attributes",null),s([a({value:null,types:g,json:{read:p}})],i.prototype,"geometry",null),s([a({type:Boolean})],i.prototype,"isAggregate",void 0),s([a({clonable:"reference"})],i.prototype,"layer",void 0),s([a({clonable:"reference"})],i.prototype,"origin",void 0),s([a({type:h})],i.prototype,"popupTemplate",void 0),s([a({clonable:"reference"})],i.prototype,"sourceLayer",void 0),s([a({value:null,types:m})],i.prototype,"symbol",null),s([a({type:Boolean,value:!0})],i.prototype,"visible",null),i=n=s([y("esri.Graphic")],i),function(e){e.generateUID=u}(i||(i={}));const J=i;export{J as c};
