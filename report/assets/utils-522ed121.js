import{g as c,E as r,j as m,x as d,I as u,i as s,k as y}from"./date-7940da18.js";import{a as g,F as h,l}from"./fieldUtils-fcb2a714.js";import"./geometry-31b45acd.js";import"./Error-21d1d076.js";import"./SpatialReference-428523ee.js";import"./Basemap-09ab572b.js";import"./Collection-aa6ef54b.js";import"./request-a10d6950.js";import"./typedArrayUtil-2af43698.js";import"./mat4f32-1b45b54f.js";import"./mat4-a6ac6b0f.js";import"./messages-2d262041.js";function z(t){return g(t)||h(t)||l(t)}function E(t,Z){const{format:o,timeZoneOptions:i,fieldType:a}=Z??{};let n,p;if(i&&({timeZone:n,timeZoneName:p}=c(i.layerTimeZone,i.datesInUnknownTimezone,i.viewTimeZone,r(o||"short-date-short-time"),a)),typeof t=="string"&&isNaN(Date.parse(a==="time-only"?`1970-01-01T${t}Z`:t)))return t;switch(a){case"date-only":{const e=r(o||"short-date");return typeof t=="string"?y(t,{...e}):m(t,{...e,timeZone:s})}case"time-only":{const e=r(o||"short-time");return typeof t=="string"?u(t,e):m(t,{...e,timeZone:s})}case"timestamp-offset":{if(!n&&typeof t=="string"&&new Date(t).toISOString()!==t)return t;const e=o||i?r(o||"short-date-short-time"):void 0,f=e?{...e,timeZone:n,timeZoneName:p}:void 0;return typeof t=="string"?d(t,f):m(t,f)}default:{const e=o||i?r(o||"short-date-short-time"):void 0;return m(typeof t=="string"?new Date(t):t,e?{...e,timeZone:n,timeZoneName:p}:void 0)}}}export{E as N,z as Z};
