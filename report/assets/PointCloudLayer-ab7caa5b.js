import{e as r,c as m,T as x}from"./subclass-f7409b1b.js";import{d as C,P as B}from"./PopupTemplate-18f22683.js";import{V,U as _}from"./request-a10d6950.js";import{b as u,o as L,a,s as P}from"./Error-21d1d076.js";import{m as N}from"./MultiOriginJSONSupport-9bd581c6.js";import{p as E}from"./promiseUtils-1d963c7c.js";import{y as o,f as O}from"./JSONSupport-acf2865c.js";import"./typedArrayUtil-2af43698.js";import{o as A}from"./Extent-2b4578b8.js";import{r as D}from"./SpatialReference-428523ee.js";import{b as K}from"./Layer-668dff8a.js";import{i as k}from"./APIKeyMixin-7c0d27b5.js";import{l as G}from"./ArcGISService-1a65aba0.js";import{e as M}from"./CustomParametersMixin-882f293c.js";import{u as U}from"./OperationalLayer-04352719.js";import{j as z}from"./PortalLayer-f8b97b56.js";import{t as Z}from"./ScaleRangeLayer-61383a56.js";import{L as H,P as T}from"./SceneService-912dd8ad.js";import{o as v}from"./enumeration-4a4e87c4.js";import{y as J,f as Q,c as W}from"./commonProperties-0c35c2c9.js";import{y as b}from"./Field-be948aef.js";import{s as X}from"./fieldProperties-663ad9a8.js";import{c as q,d as Y,b as ee,a as te}from"./PointCloudUniqueValueRenderer-78133231.js";import{I as F,x as re,Z as oe}from"./elevationInfoUtils-a8638c06.js";import{p as ie}from"./popupUtils-de5a8217.js";import"./Clonable-b71fa929.js";import"./Collection-aa6ef54b.js";import"./Evented-b5127116.js";import"./SimpleObservable-ae589a25.js";import"./cast-e7a2f9aa.js";import"./fieldUtils-fcb2a714.js";import"./intl-fe039018.js";import"./date-7940da18.js";import"./jsonMap-5ba4a9c2.js";import"./locale-bde6d0f6.js";import"./datetime-7e00d9ef.js";import"./messages-2d262041.js";import"./assets-6fd92e57.js";import"./mathUtils-19b6edfc.js";import"./geometry-31b45acd.js";import"./Polyline-013cde1f.js";import"./aaBoundingRect-aef00841.js";import"./Axis-30be7e73.js";import"./typeUtils-3056a943.js";import"./Color-e1a6dfab.js";import"./colorUtils-ac6863dc.js";import"./Identifiable-1430bdc2.js";import"./time-0817624a.js";import"./Loadable-8a1ead8b.js";import"./Promise-ec74e14b.js";import"./arcgisLayerUrl-0c479f71.js";import"./persistableUrlUtils-ca6bb38d.js";import"./layerUtils-c805b05c.js";import"./Portal-cb507469.js";import"./PortalItem-9d3416e3.js";import"./portalItemUtils-8aceb0b8.js";import"./projection-41da473c.js";import"./projectBuffer-af7b4ad9.js";import"./zscale-d7e12601.js";import"./originUtils-cfe4feaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./HeightModelInfo-46c4a968.js";import"./jsonContext-70ccb9b3.js";import"./resourceUtils-1b55d47f.js";import"./uuid-709b6c67.js";import"./resourceUtils-09076ff8.js";import"./saveAPIKeyUtils-7fbece8f.js";import"./saveUtils-534df74b.js";import"./TimeExtent-579f0e32.js";import"./timeUtils-24502426.js";import"./ElevationInfo-e9f55e40.js";import"./lengthUtils-1e9c410b.js";import"./opacityUtils-f0a081b4.js";import"./fieldType-4834e8bc.js";import"./FieldsIndex-9238b8b6.js";import"./UnknownTimeZone-8ede07af.js";import"./ColorStop-6cee3909.js";let c=class extends O{constructor(e){super(e),this.field=null,this.type=null}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}};r([o({type:String,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"field",void 0),r([o({readOnly:!0,nonNullable:!0,json:{read:!1}})],c.prototype,"type",void 0),c=r([m("esri.layers.pointCloudFilters.PointCloudFilter")],c);const g=c;var w;let l=w=class extends g{constructor(e){super(e),this.requiredClearBits=null,this.requiredSetBits=null,this.type="bitfield"}clone(){return new w({field:this.field,requiredClearBits:u(this.requiredClearBits),requiredSetBits:u(this.requiredSetBits)})}};r([o({type:[x],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredSetBits}}}}})],l.prototype,"requiredClearBits",void 0),r([o({type:[x],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredClearBits}}}}})],l.prototype,"requiredSetBits",void 0),r([v({pointCloudBitfieldFilter:"bitfield"})],l.prototype,"type",void 0),l=w=r([m("esri.layers.pointCloudFilters.PointCloudBitfieldFilter")],l);const se=l;var I;let f=I=class extends g{constructor(e){super(e),this.includedReturns=[],this.type="return"}clone(){return new I({field:this.field,includedReturns:u(this.includedReturns)})}};r([o({type:[["firstOfMany","last","lastOfMany","single"]],json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"includedReturns",void 0),r([v({pointCloudReturnFilter:"return"})],f.prototype,"type",void 0),f=I=r([m("esri.layers.pointCloudFilters.PointCloudReturnFilter")],f);const ne=f;var $;let d=$=class extends g{constructor(e){super(e),this.mode="exclude",this.type="value",this.values=[]}clone(){return new $({field:this.field,mode:this.mode,values:u(this.values)})}};r([o({type:["exclude","include"],json:{write:{enabled:!0,isRequired:!0}}})],d.prototype,"mode",void 0),r([v({pointCloudValueFilter:"value"})],d.prototype,"type",void 0),r([o({type:[Number],json:{write:{enabled:!0,isRequired:!0}}})],d.prototype,"values",void 0),d=$=r([m("esri.layers.pointCloudFilters.PointCloudValueFilter")],d);const pe=d,ae={key:"type",base:g,typeMap:{value:pe,bitfield:se,return:ne}};var S;let h=S=class extends q{constructor(e){super(e),this.type="point-cloud-rgb",this.field=null}clone(){return new S({...this.cloneProperties(),field:u(this.field)})}};r([v({pointCloudRGBRenderer:"point-cloud-rgb"})],h.prototype,"type",void 0),r([o({type:String,json:{write:!0}})],h.prototype,"field",void 0),h=S=r([m("esri.renderers.PointCloudRGBRenderer")],h);const le=h,R={key:"type",base:q,typeMap:{"point-cloud-class-breaks":Y,"point-cloud-rgb":le,"point-cloud-stretch":ee,"point-cloud-unique-value":te},errorContext:"renderer"},j=X();let i=class extends H(G(U(z(Z(N(M(k(K)))))))){constructor(...e){super(...e),this.operationalLayerType="PointCloudLayer",this.popupEnabled=!0,this.popupTemplate=null,this.opacity=1,this.filters=[],this.fields=null,this.fieldsIndex=null,this.outFields=null,this.path=null,this.legendEnabled=!0,this.renderer=null,this.type="point-cloud"}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}get defaultPopupTemplate(){return this.attributeStorageInfo?this.createPopupTemplate():null}getFieldDomain(e){const t=this.fieldsIndex.get(e);return t!=null&&t.domain?t.domain:null}readServiceFields(e,t,n){return Array.isArray(e)?e.map(s=>{const p=new b;return s.type==="FieldTypeInteger"&&((s=u(s)).type="esriFieldTypeInteger"),p.read(s,n),p}):Array.isArray(t.attributeStorageInfo)?t.attributeStorageInfo.map(s=>new b({name:s.name,type:s.name==="ELEVATION"?"double":"integer"})):null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}writeRenderer(e,t,n,s){L("layerDefinition.drawingInfo.renderer",e.write({},s),t)}load(e){const t=e!=null?e.signal:null,n=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(E).then(()=>this._fetchService(t));return this.addResolvingPromise(n),Promise.resolve(this)}createPopupTemplate(e){const t=ie(this,e);return t&&(this._formatPopupTemplateReturnsField(t),this._formatPopupTemplateRGBField(t)),t}_formatPopupTemplateReturnsField(e){var p;const t=this.fieldsIndex.get("RETURNS");if(!t)return;const n=(p=e.fieldInfos)==null?void 0:p.find(y=>y.fieldName===t.name);if(!n)return;const s=new C({name:"pcl-returns-decoded",title:t.alias||t.name,expression:`
        var returnValue = $feature.${t.name};
        return (returnValue % 16) + " / " + Floor(returnValue / 16);
      `});e.expressionInfos=[...e.expressionInfos||[],s],n.fieldName="expression/pcl-returns-decoded"}_formatPopupTemplateRGBField(e){var p;const t=this.fieldsIndex.get("RGB");if(!t)return;const n=(p=e.fieldInfos)==null?void 0:p.find(y=>y.fieldName===t.name);if(!n)return;const s=new C({name:"pcl-rgb-decoded",title:t.alias||t.name,expression:`
        var rgb = $feature.${t.name};
        var red = Floor(rgb / 65536, 0);
        var green = Floor((rgb - (red * 65536)) / 256,0);
        var blue = rgb - (red * 65536) - (green * 256);

        return "rgb(" + red + "," + green + "," + blue + ")";
      `});e.expressionInfos=[...e.expressionInfos||[],s],n.fieldName="expression/pcl-rgb-decoded"}async queryCachedStatistics(e,t){if(await this.load(t),!this.attributeStorageInfo)throw new a("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const n=this.fieldsIndex.get(e);if(!n)throw new a("pointcloudlayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const s of this.attributeStorageInfo)if(s.name===n.name){const p=V(this.parsedUrl.path,`./statistics/${s.key}`);return _(p,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(y=>y.data)}throw new a("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(T.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"};return this._debouncedSaveOperations(T.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="PointCloud")throw new a("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})}hasCachedStatistics(e){return this.attributeStorageInfo!=null&&this.attributeStorageInfo.some(t=>t.name===e)}_getTypeKeywords(){return["PointCloud"]}_validateElevationInfo(){const e=this.elevationInfo;F(P.getLogger(this),re("Point cloud layers","absolute-height",e)),F(P.getLogger(this),oe("Point cloud layers",e))}};r([o({type:["PointCloudLayer"]})],i.prototype,"operationalLayerType",void 0),r([o(J)],i.prototype,"popupEnabled",void 0),r([o({type:B,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),r([o({readOnly:!0,json:{read:!1}})],i.prototype,"defaultPopupTemplate",null),r([o({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],i.prototype,"opacity",void 0),r([o({type:["show","hide"]})],i.prototype,"listMode",void 0),r([o({types:[ae],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],i.prototype,"filters",void 0),r([o({type:[b]})],i.prototype,"fields",void 0),r([o(j.fieldsIndex)],i.prototype,"fieldsIndex",void 0),r([A("service","fields",["fields","attributeStorageInfo"])],i.prototype,"readServiceFields",null),r([o(j.outFields)],i.prototype,"outFields",void 0),r([o({readOnly:!0})],i.prototype,"attributeStorageInfo",void 0),r([o(Q)],i.prototype,"elevationInfo",null),r([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),r([o(W)],i.prototype,"legendEnabled",void 0),r([o({types:R,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:R},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],i.prototype,"renderer",void 0),r([D("renderer")],i.prototype,"writeRenderer",null),r([o({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),i=r([m("esri.layers.PointCloudLayer")],i);const Vt=i;export{Vt as default};
