import{e as o,c as u,s as O}from"./subclass-f7409b1b.js";import{b as x,a as d,s as S}from"./Error-21d1d076.js";import{m as L}from"./MultiOriginJSONSupport-9bd581c6.js";import{p as N}from"./promiseUtils-1d963c7c.js";import{v as b,C as R}from"./reactiveUtils-e7d9f86e.js";import{y as a,f as M,u as j}from"./JSONSupport-acf2865c.js";import"./typedArrayUtil-2af43698.js";import{o as A}from"./Extent-2b4578b8.js";import{j as f}from"./persistable-f801ac25.js";import{b as J}from"./Layer-668dff8a.js";import{i as P}from"./APIKeyMixin-7c0d27b5.js";import{l as $}from"./ArcGISService-1a65aba0.js";import{e as U}from"./CustomParametersMixin-882f293c.js";import{u as V}from"./OperationalLayer-04352719.js";import{j as D}from"./PortalLayer-f8b97b56.js";import{t as E}from"./ScaleRangeLayer-61383a56.js";import{L as K,P as w}from"./SceneService-912dd8ad.js";import{f as z}from"./commonProperties-0c35c2c9.js";import{s as C,l as G,u as H,m as k}from"./I3SLayerDefinitions-90d245ae.js";import{I as q,U as F}from"./request-a10d6950.js";import{V as Z}from"./Collection-aa6ef54b.js";import"./geometry-31b45acd.js";import{r as B}from"./SpatialReference-428523ee.js";import{H as Q,r as W}from"./projection-41da473c.js";import{j as _}from"./Polyline-013cde1f.js";import{I as T,x as X,Z as Y}from"./elevationInfoUtils-a8638c06.js";import{u as ee}from"./persistableUrlUtils-ca6bb38d.js";import"./Evented-b5127116.js";import"./time-0817624a.js";import"./cast-e7a2f9aa.js";import"./MD5-715f37cd.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./uuid-709b6c67.js";import"./resourceExtension-9d75347b.js";import"./Identifiable-1430bdc2.js";import"./Loadable-8a1ead8b.js";import"./Promise-ec74e14b.js";import"./arcgisLayerUrl-0c479f71.js";import"./layerUtils-c805b05c.js";import"./Portal-cb507469.js";import"./locale-bde6d0f6.js";import"./jsonMap-5ba4a9c2.js";import"./PortalItem-9d3416e3.js";import"./assets-6fd92e57.js";import"./portalItemUtils-8aceb0b8.js";import"./originUtils-cfe4feaf.js";import"./HeightModelInfo-46c4a968.js";import"./jsonContext-70ccb9b3.js";import"./resourceUtils-1b55d47f.js";import"./resourceUtils-09076ff8.js";import"./saveAPIKeyUtils-7fbece8f.js";import"./saveUtils-534df74b.js";import"./TimeExtent-579f0e32.js";import"./timeUtils-24502426.js";import"./date-7940da18.js";import"./datetime-7e00d9ef.js";import"./ElevationInfo-e9f55e40.js";import"./fieldUtils-fcb2a714.js";import"./intl-fe039018.js";import"./messages-2d262041.js";import"./mathUtils-19b6edfc.js";import"./lengthUtils-1e9c410b.js";import"./opacityUtils-f0a081b4.js";import"./enumeration-4a4e87c4.js";import"./SimpleObservable-ae589a25.js";import"./typeUtils-3056a943.js";import"./projectBuffer-af7b4ad9.js";import"./zscale-d7e12601.js";import"./aaBoundingRect-aef00841.js";import"./Axis-30be7e73.js";var h;let n=h=class extends M{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,i,r){var m;if((m=r.layer)!=null&&m.spatialReference&&!r.layer.spatialReference.equals(this.geometry.spatialReference)){if(!Q(e.spatialReference,r.layer.spatialReference))return void((r==null?void 0:r.messages)&&r.messages.push(new O("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:r.layer.spatialReference,context:r})));const l=new _;W(e,l,r.layer.spatialReference),t[i]=l.toJSON(r)}else t[i]=e.toJSON(r);delete t[i].spatialReference}clone(){return new h({geometry:x(this.geometry),type:this.type})}};o([a({type:_}),f()],n.prototype,"geometry",void 0),o([B(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),o([a({type:["clip","mask","replace"],nonNullable:!0}),f()],n.prototype,"type",void 0),n=h=o([u("esri.layers.support.SceneModification")],n);const c=n;var p;let y=p=class extends j(Z.ofType(c)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const i=new p;for(const r of e)i.add(c.fromJSON(r,t));return i}static async fromUrl(e,t,i){const r={url:q(e),origin:"service"},m=await F(e,{responseType:"json",signal:i==null?void 0:i.signal}),l=t.toJSON(),g=[];for(const v of m.data)g.push(c.fromJSON({...v,geometry:{...v.geometry,spatialReference:l}},r));return new p({url:e,items:g})}};o([a({type:String})],y.prototype,"url",void 0),y=p=o([u("esri.layers.support.SceneModifications")],y);const I=y;let s=class extends K($(V(D(E(L(U(P(J)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null}initialize(){this.addHandles(b(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,R))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,i){this._modificationsSource={url:ee(e,i),context:i}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(i){N(i)}if(await this._fetchService(t),this._modificationsSource!=null){const i=await I.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",i,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(w.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(w.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";T(S.getLogger(this),X(t,"absolute-height",e)),T(S.getLogger(this),Y(t,e))}};o([a({type:String,readOnly:!0})],s.prototype,"geometryType",void 0),o([a({type:["show","hide"]})],s.prototype,"listMode",void 0),o([a({type:["IntegratedMeshLayer"]})],s.prototype,"operationalLayerType",void 0),o([a({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),o([a({type:C,readOnly:!0})],s.prototype,"nodePages",void 0),o([a({type:[G],readOnly:!0})],s.prototype,"materialDefinitions",void 0),o([a({type:[H],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),o([a({type:[k],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),o([a({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),o([a({type:I}),f({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],s.prototype,"modifications",void 0),o([A(["web-scene","portal-item"],"modifications")],s.prototype,"readModifications",null),o([a(z)],s.prototype,"elevationInfo",null),o([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),s=o([u("esri.layers.IntegratedMeshLayer")],s);const gt=s;export{gt as default};
