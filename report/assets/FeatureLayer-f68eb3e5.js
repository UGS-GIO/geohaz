import{I as z,V as L,_ as P,U}from"./request-a10d6950.js";import{e as s,d as H,c as E}from"./subclass-f7409b1b.js";import{P as B}from"./PopupTemplate-18f22683.js";import"./ClassBreaksRenderer-aa69b6ca.js";import{o as K,m as X,u as Y}from"./jsonUtils-7ee1282d.js";import"./UniqueValueRenderer-983c9a3e.js";import"./SimpleRenderer-2c5d637a.js";import{a as ee}from"./symbols-b3e075ad.js";import{i as te}from"./Clonable-b71fa929.js";import{n as re,V as M}from"./Collection-aa6ef54b.js";import{a as f,s as T,o as I,b as $}from"./Error-21d1d076.js";import{m as ie}from"./MultiOriginJSONSupport-9bd581c6.js";import{k as oe,p as se,h as ae}from"./promiseUtils-1d963c7c.js";import{p as R,n as ne,g as le}from"./fieldUtils-fcb2a714.js";import{y as n,S as pe}from"./JSONSupport-acf2865c.js";import{s as ue}from"./cast-e7a2f9aa.js";import{M as de,o as y}from"./Extent-2b4578b8.js";import{f as ye,r as D}from"./SpatialReference-428523ee.js";import{I as ce,m as me,a as x,b as he,c as fe,C as ge,y as be,p as we}from"./commonProperties-0c35c2c9.js";import{y as ve}from"./FormTemplate-b1394f1a.js";import{b as _e}from"./Layer-668dff8a.js";import"./geometry-31b45acd.js";import{c as G}from"./Graphic-f1881791.js";import{h as Fe}from"./typedArrayUtil-2af43698.js";import{m as Se}from"./Loadable-8a1ead8b.js";import{n as Te}from"./Promise-ec74e14b.js";import{p as Ie}from"./workers-1be2b889.js";import{i as Ee}from"./editsZScale-c4af7049.js";import{t as A}from"./queryZScale-b694be92.js";import{d as k}from"./FeatureSet-32e85c3a.js";import{j as $e}from"./Polyline-013cde1f.js";import{i as N}from"./typeUtils-3056a943.js";import{i as De}from"./APIKeyMixin-7c0d27b5.js";import{l as Oe}from"./ArcGISService-1a65aba0.js";import{n as je}from"./BlendLayer-2e0705c7.js";import{e as Ce}from"./CustomParametersMixin-882f293c.js";import{F as Me}from"./EditBusLayer-7f92d599.js";import{p as qe}from"./FeatureEffectLayer-f145f4bc.js";import{D as Le}from"./FeatureLayerBase-5d10c7bd.js";import{c as Pe}from"./FeatureReductionLayer-b89875ed.js";import{u as Re}from"./OperationalLayer-04352719.js";import{c as xe}from"./OrderedLayer-69f0528e.js";import{j as Ge}from"./PortalLayer-f8b97b56.js";import{f as Ae}from"./RefreshableLayer-9477518b.js";import{t as Ne}from"./ScaleRangeLayer-61383a56.js";import{f as Je}from"./TemporalLayer-114f16ec.js";import{h as Ve,p as ke,m as Qe}from"./arcgisLayerUrl-0c479f71.js";import{Q as We,T as Ze,R as ze,M as Ue,D as He,m as Be,w as Ke,b as Xe,g as Ye,x as et,j as tt,I as rt,q as it,F as ot,A as st,O as at,P as nt,E as lt,S as pt,f as J}from"./featureLayerUtils-87358b6a.js";import{p as Q}from"./FeatureTemplate-231bfadc.js";import{n as W}from"./FeatureType-d0808bff.js";import{s as ut}from"./fieldProperties-663ad9a8.js";import{C as dt}from"./LabelClass-bca4dcea.js";import{i as O}from"./labelingInfo-f5739018.js";import{a as yt}from"./serviceCapabilitiesUtils-d90db62d.js";import{d as ct}from"./TimeInfo-c87ecbc7.js";import{e as mt}from"./versionUtils-28beeff3.js";import{K as ht}from"./DataLayerSource-62d0bfcf.js";import{t as ft}from"./styleUtils-f1a4091c.js";import{b as gt}from"./Query-aaf746b1.js";import{S as _}from"./TopFeaturesQuery-827caf55.js";import{p as bt}from"./popupUtils-de5a8217.js";import{A as F}from"./interfaces-f1f22245.js";import{n as wt}from"./opacityUtils-f0a081b4.js";import"./jsonMap-5ba4a9c2.js";import"./enumeration-4a4e87c4.js";import"./date-7940da18.js";import"./locale-bde6d0f6.js";import"./datetime-7e00d9ef.js";import"./Color-e1a6dfab.js";import"./colorUtils-ac6863dc.js";import"./mathUtils-19b6edfc.js";import"./Identifiable-1430bdc2.js";import"./ColorStop-6cee3909.js";import"./LRUCache-000d0e19.js";import"./Version-ef27dfc4.js";import"./FieldsIndex-9238b8b6.js";import"./UnknownTimeZone-8ede07af.js";import"./colorUtils-f660fd36.js";import"./vec42-a95eff2d.js";import"./vec4f64-430e4feb.js";import"./utils-064c64c4.js";import"./heatmapUtils-7a838493.js";import"./screenUtils-7afeb41c.js";import"./TextSymbol-53669eb2.js";import"./reactiveUtils-e7d9f86e.js";import"./Evented-b5127116.js";import"./diffUtils-d0e8b583.js";import"./Portal-cb507469.js";import"./colorRamps-bef5e122.js";import"./visualVariableUtils-79811b9c.js";import"./compilerUtils-7f5a3043.js";import"./lengthUtils-1e9c410b.js";import"./styleUtils-d9ef5ac0.js";import"./layerUtils-c805b05c.js";import"./persistableUrlUtils-ca6bb38d.js";import"./symbolLayerUtils3D-5b91ffd6.js";import"./aaBoundingBox-7242ce3e.js";import"./collectionUtils-b6e30316.js";import"./SimpleObservable-ae589a25.js";import"./intl-fe039018.js";import"./messages-2d262041.js";import"./assets-6fd92e57.js";import"./time-0817624a.js";import"./TimeExtent-579f0e32.js";import"./timeUtils-24502426.js";import"./ElevationInfo-e9f55e40.js";import"./Field-be948aef.js";import"./fieldType-4834e8bc.js";import"./jsonUtils-2c7f966c.js";import"./Connection-2d969448.js";import"./zscale-d7e12601.js";import"./aaBoundingRect-aef00841.js";import"./Axis-30be7e73.js";import"./mat4f32-1b45b54f.js";import"./mat4-a6ac6b0f.js";import"./uuid-709b6c67.js";import"./HeightModelInfo-46c4a968.js";import"./LayerFloorInfo-88589fec.js";import"./FeatureReductionSelection-d7d28c54.js";import"./MD5-715f37cd.js";import"./PortalItem-9d3416e3.js";import"./portalItemUtils-8aceb0b8.js";import"./projection-41da473c.js";import"./projectBuffer-af7b4ad9.js";import"./AttachmentQuery-36a8e4f4.js";import"./RelationshipQuery-722111d3.js";import"./defaults-473b7c21.js";import"./defaultsJSON-b087dd4d.js";let vt=0,g=class extends Se.LoadableMixin(Te(M)){constructor(e){super(e),this._idToClientGraphic=null,this.type="memory"}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null}get _workerGeometryType(){var t;const e=(t=this.layer)==null?void 0:t.geometryType;return e?this._geometryTypeRequiresClientGraphicMapping(e)?"polygon":e:null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);A(e,this.layer.spatialReference,r);const i=k.fromJSON(r);if(!this._requiresClientGraphicMapping())return i;const o=this.layer.objectIdField;for(const l of i.features){const p=l.attributes[o],c=this._idToClientGraphic.get(p);c&&(l.geometry=c.geometry)}return i.geometryType=this.layer.geometryType,i}async queryFeaturesJSON(e,t={}){if(this._requiresClientGraphicMapping())throw new f("query-features-json:unsupported","Cannot query in JSON format for client only geometry types (mesh and extent)");await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return A(e,this.layer.spatialReference,r),r}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(r=>({count:r.count,extent:de.fromJSON(r.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async _applyEdits(e){if(!this._connection)throw new f("feature-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField;let r=null;const i=[],o=[];await Promise.all([this._prepareClientMapping(e.addFeatures,null),this._prepareClientMapping(e.updateFeatures,null)]);const l=u=>"objectId"in u&&u.objectId!=null?u.objectId:"attributes"in u&&u.attributes[t]!=null?u.attributes[t]:null;if(e.addFeatures&&(r=this._prepareAddFeatures(e.addFeatures)),e.deleteFeatures)for(const u of e.deleteFeatures){const h=l(u);h!=null&&i.push(h)}const p=e.updateFeatures&&this._idToClientGraphic?new Map:null;if(e.updateFeatures){for(const u of e.updateFeatures)if(o.push(this._serializeFeature(u)),p){const h=l(u);h!=null&&p.set(h,u)}}Ee(r?r.features:null,o,this.layer.spatialReference);const{fullExtent:c,featureEditResults:d}=await this._connection.invoke("applyEdits",{adds:r?r.features:[],updates:o,deletes:i});return this.fullExtent=c,r&&r.finish(d.uidToObjectId),this._updateClientGraphicIds(p,d),this._createEditsResult(d)}async _prepareClientMapping(e,t){if(this._layerOrSourceGeometryType!=="mesh"||e==null)return;const r=[];for(const{geometry:i}of e)i==null||i.type!=="mesh"||i.hasExtent||i.loaded||r.push(i.load({signal:t}));r.length&&await Promise.all(r)}_updateClientGraphicIds(e,t){if(this._idToClientGraphic){if(e)for(const r of t.updateResults){if(!r.success)continue;const i=e.get(r.objectId);i!=null&&this._addIdToClientGraphic(i)}for(const r of t.deleteResults)r.success&&this._idToClientGraphic.delete(r.objectId)}}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new f("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}_prepareAddFeatures(e){const t=new Map,r=new Array(e.length);let i=null;for(let l=0;l<e.length;l++){const p=e[l],c=this._serializeFeature(p);i||p.geometry==null||(i=p.geometry.type),r[l]=c,t.set(`${c.uid}`,p)}const o=this;return{features:r,inferredGeometryType:i,finish(l){const p=o.sourceJSON.objectIdField;for(const c in l){const d=l[c],u=t.get(c);u&&(u.attributes||(u.attributes={}),d===-1?delete u.attributes[p]:u.attributes[p]=d,o._addIdToClientGraphic(u))}}}}_addIdToClientGraphic(e){var i;if(!this._idToClientGraphic)return;const t=this.sourceJSON.objectIdField,r=(i=e.attributes)==null?void 0:i[t];r!=null&&this._idToClientGraphic.set(r,e)}get _layerOrSourceGeometryType(){var e,t;return((e=this.layer)==null?void 0:e.geometryType)??((t=this.sourceJSON)==null?void 0:t.geometryType)}_requiresClientGraphicMapping(){return this._geometryTypeRequiresClientGraphicMapping(this._layerOrSourceGeometryType)}_geometryRequiresClientGraphicMapping(e){return this._geometryTypeRequiresClientGraphicMapping(e.type)}_geometryTypeRequiresClientGraphicMapping(e){return e==="mesh"||e==="multipatch"||e==="extent"}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e),i=(vt++).toString();return r?{uid:i,geometry:r.toJSON(),attributes:t}:{uid:i,attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:this._geometryRequiresClientGraphicMapping(t)?t.extent?$e.fromExtent(t.extent):null:t}async _startWorker(e){this._connection=await Ie("MemorySourceWorker",{strategy:Fe("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:r,objectIdField:i,hasM:o,hasZ:l,timeInfo:p,dateFieldsTimeZone:c}=this.layer,d=this.layer.originOf("spatialReference")==="defaults";await this._prepareClientMapping(this.items,e);const u=this._prepareAddFeatures(this.items);this.addHandles(this.on("before-changes",w=>{T.getLogger(this).error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"),w.preventDefault()}));const h={features:u.features,fields:t==null?void 0:t.map(w=>w.toJSON()),geometryType:N.toJSON(this._workerGeometryType),hasM:this._layerOrSourceGeometryType!=="mesh"&&o,hasZ:this._layerOrSourceGeometryType==="mesh"||l,objectIdField:i,spatialReference:d?null:r&&r.toJSON(),timeInfo:(p==null?void 0:p.toJSON())??null,dateFieldsTimeZone:c},b=await this._connection.invoke("load",h,{signal:e});for(const w of b.warnings)T.getLogger(this.layer).warn("#load()",`${w.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:w});b.featureErrors.length&&T.getLogger(this.layer).warn("#load()",`Encountered ${b.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:b.featureErrors});const q=b.layerDefinition;this._geometryTypeRequiresClientGraphicMapping(u.inferredGeometryType)&&(q.geometryType=N.toJSON(u.inferredGeometryType)),this.sourceJSON=q,this._requiresClientGraphicMapping()&&(this._idToClientGraphic=new Map),u.finish(b.assignedObjectIds)}};s([re({Type:G,ensureType:H(G)})],g.prototype,"itemType",void 0),s([n()],g.prototype,"type",void 0),s([n({constructOnly:!0})],g.prototype,"layer",void 0),s([n({readOnly:!0})],g.prototype,"_workerGeometryType",null),s([n()],g.prototype,"sourceJSON",void 0),g=s([E("esri.layers.graphics.sources.MemorySource")],g);let v=class extends pe{constructor(){super(...arguments),this.updating=!1,this.status="unknown"}};s([n()],v.prototype,"updating",void 0),s([n()],v.prototype,"status",void 0),v=s([E("esri.layers.support.PublishingInfo")],v);const _t=v,Z="esri.layers.mixins.PublishableLayer",Ft=Symbol(Z),St=e=>{var t;let r=class extends e{constructor(){super(...arguments),this[t]=!0}get publishingInfo(){if(this.destroyed)return null;const i=this._get("publishingInfo");if(i)return i;const o=new _t;return this._checkPublishingStatus(o),o}_checkPublishingStatus(i){let p=0;const c=async u=>{let h;i.updating=!0;try{h=await this.fetchPublishingStatus()}catch{h="unavailable"}h!=="published"&&h!=="unavailable"||(i.status==="publishing"&&this.refresh(),d.remove()),i.status=h,i.updating=!1,d.removed||(p=setTimeout(c,u,u+125))},d={removed:!1,remove(){this.removed=!0,clearTimeout(p)}};this.when().catch(()=>d.remove()),c(250),this.addHandles(d)}};return t=Ft,s([n({readOnly:!0,clonable:!1})],r.prototype,"publishingInfo",null),r=s([E(Z)],r),r},m="FeatureLayer";function S(e,t){return new f("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function V(e){return e&&e instanceof M}const j=ut();function C(e,t,r){const i=!!(r!=null&&r.writeLayerSchema);return{enabled:i,ignoreOrigin:i}}let a=class extends Le(Pe(qe(St(Me(je(xe(Je(Ne(Ae(Oe(Re(Ge(ie(Ce(De(te(_e))))))))))))))))){constructor(...e){super(...e),this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=ye.WGS84,this.subtypeCode=null,this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=oe(async(t,r,i)=>{const{save:o,saveAs:l}=await P(()=>import("./featureLayerUtils-210e5bbf.js"),["./featureLayerUtils-210e5bbf.js","./typedArrayUtil-2af43698.js","./Error-21d1d076.js","./originUtils-cfe4feaf.js","./multiOriginJSONSupportUtils-c978f4c3.js","./utils-df330680.js","./Portal-cb507469.js","./request-a10d6950.js","./JSONSupport-acf2865c.js","./subclass-f7409b1b.js","./promiseUtils-1d963c7c.js","./time-0817624a.js","./Loadable-8a1ead8b.js","./Promise-ec74e14b.js","./Extent-2b4578b8.js","./SpatialReference-428523ee.js","./jsonMap-5ba4a9c2.js","./assets-6fd92e57.js","./cast-e7a2f9aa.js","./locale-bde6d0f6.js","./PortalItem-9d3416e3.js","./persistableUrlUtils-ca6bb38d.js","./jsonContext-70ccb9b3.js","./portalItemUtils-8aceb0b8.js","./projection-41da473c.js","./SimpleObservable-ae589a25.js","./mathUtils-19b6edfc.js","./Polyline-013cde1f.js","./aaBoundingRect-aef00841.js","./Axis-30be7e73.js","./projectBuffer-af7b4ad9.js","./zscale-d7e12601.js","./saveAPIKeyUtils-7fbece8f.js","./saveUtils-534df74b.js","./arcgisLayerUrl-0c479f71.js","./fetchService-b7ffffb9.js","./requestPresets-cacb0d18.js","./layerUtils-c805b05c.js","./lazyLayerLoader-b21a171b.js"],import.meta.url);switch(t){case F.SAVE:return o(this,r);case F.SAVE_AS:return l(this,i,r)}})}destroy(){var e;(e=this.source)==null||e.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){var i;const t=e!=null?e.signal:null;if((i=this.portalItem)!=null&&i.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then(o=>this.initLayerProperties(o))),Promise.resolve(this);const r=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(se).then(async()=>{if(this.url&&this.layerId==null&&/FeatureServer|MapServer\/*$/i.test(this.url)){const o=await this._fetchFirstValidLayerId(t);o!=null&&(this.layerId=o)}if(!this.url&&!this._hasMemorySource())throw new f("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))}).then(()=>We(this,"load",e));return this.addResolvingPromise(r),Promise.resolve(this)}readCapabilities(e,t){return t=t.layerDefinition||t,yt(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){var e;return!(this.loaded&&!((e=this.capabilities)!=null&&e.operations.supportsEditing))&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,r){return this._readEditingEnabled(t,!0,r)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,r,i){this._writeEditingEnabled(e,t,!0,i)}get effectiveEditingEnabled(){return Ze(this)}readIsTable(e,t){return(t=(t==null?void 0:t.layerDefinition)??t).type==="Table"||!t.geometryType}writeIsTable(e,t,r,i){i!=null&&i.writeLayerSchema&&I(r,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return ze(t.layerDefinition||t)}readObjectIdField(e,t){return Ue(t.layerDefinition||t)}get parsedUrl(){const e=z(this.url);return e!=null&&(this.dynamicDataSource!=null?e.path=L(e.path,"dynamicLayer"):this.layerId!=null&&(e.path=L(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){R(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){var o;t=t.layerDefinition||t;const i=(o=t.drawingInfo)==null?void 0:o.renderer;if(i){const l=K(i,t,r)??void 0;return l||T.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),l}return He(t,r)}set source(e){const t=this._get("source");t!==e&&(V(t)&&this._resetMemorySource(t),V(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof M?new g({layer:this,items:e}):e:null}readSource(e,t){const r=k.fromJSON(t.featureSet);return new g({layer:this,items:(r==null?void 0:r.features)??[]})}readTemplates(e,t){const r=t.editFieldsInfo,i=r==null?void 0:r.creatorField,o=r==null?void 0:r.editorField;return e=e==null?void 0:e.map(l=>Q.fromJSON(l)),this._fixTemplates(e,i),this._fixTemplates(e,o),e}readTitle(e,t){var o,l,p;const r=((o=t.layerDefinition)==null?void 0:o.name)??t.name,i=t.title||((l=t.layerDefinition)==null?void 0:l.title);if(r){const c=(p=this.portalItem)==null?void 0:p.title;if(this.sublayerTitleMode==="item-title")return this.url?Ve(this.url,r):r;let d=r;if(!d&&this.url){const u=ke(this.url);u!=null&&(d=u.title)}return d?(this.sublayerTitleMode==="item-title-and-service-name"&&c&&c!==d&&(d=c+" - "+d),Qe(d)):void 0}if(this.sublayerTitleMode==="item-title"&&i)return i}readTitleFromWebMap(e,t){var r;return t.title||((r=t.layerDefinition)==null?void 0:r.name)}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find(o=>o.name.toLowerCase()===r);i&&(r=i.name)}return r}readTypes(e,t){e=(t=t.layerDefinition||t).types;const r=t.editFieldsInfo,i=r==null?void 0:r.creatorField,o=r==null?void 0:r.editorField;return e==null?void 0:e.map(l=>(l=W.fromJSON(l),this._fixTemplates(l.templates,i),this._fixTemplates(l.templates,o),l))}readVisible(e,t){var r;return((r=t.layerDefinition)==null?void 0:r.defaultVisibility)!=null?!!t.layerDefinition.defaultVisibility:t.visibility!=null?!!t.visibility:void 0}async addAttachment(e,t){return Be(this,e,t,m)}async updateAttachment(e,t,r){return Ke(this,e,t,r,m)}async applyEdits(e,t){return Xe(this,e,t)}async uploadAssets(e,t){return Ye(this,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return bt(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:t}=await ae(P(()=>import("./FeatureLayerSource-8e442e15.js"),["./FeatureLayerSource-8e442e15.js","./request-a10d6950.js","./Error-21d1d076.js","./typedArrayUtil-2af43698.js","./JSONSupport-acf2865c.js","./subclass-f7409b1b.js","./promiseUtils-1d963c7c.js","./time-0817624a.js","./geometry-31b45acd.js","./Extent-2b4578b8.js","./SpatialReference-428523ee.js","./jsonMap-5ba4a9c2.js","./assets-6fd92e57.js","./cast-e7a2f9aa.js","./Polyline-013cde1f.js","./aaBoundingRect-aef00841.js","./Axis-30be7e73.js","./mathUtils-19b6edfc.js","./typeUtils-3056a943.js","./TimeExtent-579f0e32.js","./timeUtils-24502426.js","./date-7940da18.js","./locale-bde6d0f6.js","./datetime-7e00d9ef.js","./Loadable-8a1ead8b.js","./Promise-ec74e14b.js","./uuid-709b6c67.js","./meshVertexSpaceUtils-a98cf1bd.js","./MeshLocalVertexSpace-48f1035e.js","./Clonable-b71fa929.js","./enumeration-4a4e87c4.js","./vec3-10e9217f.js","./External-e1bc87f6.js","./infoFor3D-24efd44a.js","./Graphic-f1881791.js","./PopupTemplate-18f22683.js","./Collection-aa6ef54b.js","./Evented-b5127116.js","./SimpleObservable-ae589a25.js","./fieldUtils-fcb2a714.js","./intl-fe039018.js","./messages-2d262041.js","./Color-e1a6dfab.js","./colorUtils-ac6863dc.js","./Identifiable-1430bdc2.js","./symbols-b3e075ad.js","./TextSymbol-53669eb2.js","./screenUtils-7afeb41c.js","./opacityUtils-f0a081b4.js","./symbolLayerUtils3D-5b91ffd6.js","./aaBoundingBox-7242ce3e.js","./persistableUrlUtils-ca6bb38d.js","./collectionUtils-b6e30316.js","./Portal-cb507469.js","./reactiveUtils-e7d9f86e.js","./jsonUtils-2c7f966c.js","./projection-41da473c.js","./projectBuffer-af7b4ad9.js","./zscale-d7e12601.js","./editingSupport-20f0f2ff.js","./normalizeUtils-059b11cb.js","./normalizeUtilsCommon-c4e9ddb1.js","./utils-3234cfff.js","./utils-ed91a700.js","./EditBusLayer-7f92d599.js","./layerUtils-c805b05c.js","./clientSideDefaults-1b55d85f.js","./QueryEngineCapabilities-85c4f1d0.js","./defaultsJSON-b087dd4d.js","./QueryTask-46d1eeb8.js","./DataLayerSource-62d0bfcf.js","./Field-be948aef.js","./fieldType-4834e8bc.js","./executeForIds-6ac7b389.js","./query-21390169.js","./urlUtils-6a004888.js","./pbfQueryUtils-06460449.js","./pbf-1d598563.js","./OptimizedGeometry-5ad221bf.js","./OptimizedFeature-0af09c7a.js","./OptimizedFeatureSet-1d1ac4b9.js","./queryZScale-b694be92.js","./Query-aaf746b1.js","./executeQueryJSON-7d8733f5.js","./FeatureSet-32e85c3a.js","./executeQueryPBF-9bfb856e.js","./featureConversionUtils-e62978d0.js","./arcgisLayerUrl-0c479f71.js","./featureLayerUtils-87358b6a.js","./SimpleRenderer-2c5d637a.js","./UniqueValueRenderer-983c9a3e.js","./diffUtils-d0e8b583.js","./colorRamps-bef5e122.js","./ColorStop-6cee3909.js","./visualVariableUtils-79811b9c.js","./compilerUtils-7f5a3043.js","./lengthUtils-1e9c410b.js","./styleUtils-d9ef5ac0.js","./AttachmentQuery-36a8e4f4.js","./RelationshipQuery-722111d3.js","./editsZScale-c4af7049.js"],import.meta.url),e);return new t({layer:this}).load({signal:e})}createQuery(){const e=et(this);e.dynamicDataSource=this.dynamicDataSource;const t=this.subtypeCode!=null?`${this.subtypeField} = ${this.subtypeCode}`:null,r=ne(this.definitionExpression,t);return e.where=r||"1=1",e}async deleteAttachments(e,t){return tt(this,e,t,m)}async fetchRecomputedExtents(e){return rt(this,e,m)}getFeatureType(e){const{typeIdField:t,types:r}=this;if(!t||!e)return null;const i=e.attributes?e.attributes[t]:void 0;if(i==null)return null;let o=null;return r==null||r.some(l=>{const{id:p}=l;return p!=null&&(p.toString()===i.toString()&&(o=l),!!o)}),o}getFieldDomain(e,t){const r=t==null?void 0:t.feature,i=this.getFeatureType(r);if(i){const o=i.domains&&i.domains[e];if(o&&o.type!=="inherited")return o}return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}async queryAttachments(e,t){return it(this,e,t,m)}async queryFeatures(e,t){const r=await this.load(),i=await r.source.queryFeatures(gt.from(e)??r.createQuery(),t);if(i!=null&&i.features)for(const o of i.features)o.layer=o.sourceLayer=r;return i}async queryObjectIds(e,t){return ot(this,e,t,m)}async queryFeatureCount(e,t){return st(this,e,t,m)}async queryExtent(e,t){return at(this,e,t,m)}async queryRelatedFeatures(e,t){return nt(this,e,t,m)}async queryRelatedFeaturesCount(e,t){return lt(this,e,t,m)}async queryTopFeatures(e,t){var l;const{source:r,capabilities:i}=await this.load();if(!r.queryTopFeatures||!((l=i==null?void 0:i.query)!=null&&l.supportsTopFeaturesQuery))throw new f(m,"Layer source does not support queryTopFeatures capability");const o=await r.queryTopFeatures(_.from(e),t);if(o!=null&&o.features)for(const p of o.features)p.layer=p.sourceLayer=this;return o}async queryTopObjectIds(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopObjectIds||!(i!=null&&i.query.supportsTopFeaturesQuery))throw new f(m,"Layer source does not support queryTopObjectIds capability");return r.queryTopObjectIds(_.from(e),t)}async queryTopFeaturesExtent(e,t){var o;const{source:r,capabilities:i}=await this.load();if(!r.queryTopExtents||!((o=i==null?void 0:i.query)!=null&&o.supportsTopFeaturesQuery))throw new f(m,"Layer source does not support queryTopExtents capability");return r.queryTopExtents(_.from(e),t)}async queryTopFeatureCount(e,t){var o;const{source:r,capabilities:i}=await this.load();if(!r.queryTopCount||!((o=i==null?void 0:i.query)!=null&&o.supportsTopFeaturesQuery))throw new f(m,"Layer source does not support queryFeatureCount capability");return r.queryTopCount(_.from(e),t)}read(e,t){const r=e.featureCollection;if((r||e.type==="Feature Collection")&&(this.resourceInfo=e),r){const i=r.layers;i&&i.length===1&&(super.read(i[0],t),r.showLegend!=null&&super.read({showLegend:r.showLegend},t))}super.read(e,t),t&&t.origin==="service"&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:(t==null?void 0:t.origin)??void 0,writeLayerSchema:(t==null?void 0:t.writeLayerSchema)??this._hasMemorySource()};const{origin:r,layerContainerType:i,messages:o}=t;if(this.dynamicDataSource)return o==null||o.push(S(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if((r==="web-map"||r==="web-scene")&&i!=="tables")return o==null||o.push(S(this,`a table source can only be written to tables, not ${i}`)),null;if(this._hasMemorySource())return o==null||o.push(S(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&(r==="web-map"||r==="web-scene")&&i==="tables")return o==null||o.push(S(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new f(m,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){var t;return!!this.loaded&&(((t=this.source)==null?void 0:t.type)==="memory"||mt(this,e))}async save(e){return this._debouncedSaveOperations(F.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(F.SAVE_AS,t,e)}_readEditingEnabled(e,t,r){var o;let i=(o=e.layerDefinition)==null?void 0:o.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,t&&(r==null?void 0:r.origin)==="web-map"&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map(t=>t.trim()).includes("editing")}_writeEditingEnabled(e,t,r,i){var o,l;if(!e){const p=(l=(o=this.capabilities)==null?void 0:o.operations)!=null&&l.supportsSync?"Query,Sync":"Query";I("layerDefinition.capabilities",p,t),r&&!(i!=null&&i.writeLayerSchema)&&(t.capabilities=p)}}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}_fetchFirstValidLayerId(e){return U(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t=>{const r=t.data;if(r)return this.findFirstValidLayerId(r)})}async initLayerProperties(e){var t;return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(t=this.portalItem)==null?void 0:t.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),R(this.renderer,this.fieldsIndex),le(this.timeInfo,this.fieldsIndex),ft(this,{origin:"service"})}async hasDataChanged(){return pt(this)}async fetchPublishingStatus(){const e=this.source;return e!=null&&e.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){var t,r;const e=((t=this.parsedUrl)==null?void 0:t.path)??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||e.search(/\/FeatureServer\//i)!==-1||(r=this.fields)!=null&&r.some(i=>i.type==="geometry")||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach(r=>{var o;const i=(o=r.prototype)==null?void 0:o.attributes;i&&t&&delete i[t]})}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new f("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new f("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach(t=>{t.layer=this,t.sourceLayer=this}),this.addHandles([e.on("after-add",t=>{t.item.layer=this,t.item.sourceLayer=this}),e.on("after-remove",t=>{t.item.layer=null,t.item.sourceLayer=null})],"fl-source")}_resetMemorySource(e){e.forEach(t=>{t.layer=null,t.sourceLayer=null}),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};s([y("service","capabilities")],a.prototype,"readCapabilities",null),s([n({json:{origins:{"web-scene":{write:!1}},write:!0}})],a.prototype,"charts",void 0),s([n({readOnly:!0})],a.prototype,"createQueryVersion",null),s([n({json:{read:{source:"layerDefinition.copyrightText"}}})],a.prototype,"copyright",void 0),s([n({json:{read:{source:"layerDefinition.displayField"}}})],a.prototype,"displayField",void 0),s([n({types:ee,readOnly:!0})],a.prototype,"defaultSymbol",void 0),s([n({type:ht})],a.prototype,"dynamicDataSource",void 0),s([n({type:Boolean})],a.prototype,"editingEnabled",null),s([y(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],a.prototype,"readEditingEnabled",null),s([y("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],a.prototype,"readEditingEnabledFromWebMap",null),s([D(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],a.prototype,"writeEditingEnabled",null),s([D("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],a.prototype,"writeEditingEnabledToWebMap",null),s([n({readOnly:!0})],a.prototype,"effectiveEditingEnabled",null),s([n({...j.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:C}}}}})],a.prototype,"fields",void 0),s([n(j.fieldsIndex)],a.prototype,"fieldsIndex",void 0),s([n({type:ve,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],a.prototype,"formTemplate",void 0),s([n({json:{read:{source:"layerDefinition.extent"}}})],a.prototype,"fullExtent",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:C,writer(e,t,r){const i=e?J.toJSON(e):null;i&&I(r,i,t)}}}},read:{source:"layerDefinition.geometryType",reader:J.read}}})],a.prototype,"geometryType",void 0),s([n({json:{read:{source:"layerDefinition.hasM"}}})],a.prototype,"hasM",void 0),s([n({json:{read:{source:"layerDefinition.hasZ"}}})],a.prototype,"hasZ",void 0),s([n(ce)],a.prototype,"id",void 0),s([n({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],a.prototype,"infoFor3D",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],a.prototype,"isTable",void 0),s([y("service","isTable",["type","geometryType"]),y("isTable",["layerDefinition.type","layerDefinition.geometryType"])],a.prototype,"readIsTable",null),s([D("web-map","isTable")],a.prototype,"writeIsTable",null),s([n(me)],a.prototype,"labelsVisible",void 0),s([n({type:[dt],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:O,write:!1},"web-scene":{name:"layerDefinition.drawingInfo.labelingInfo",read:O,write:{enabled:!0,layerContainerTypes:x}}},name:"layerDefinition.drawingInfo.labelingInfo",read:O,write:!0}})],a.prototype,"labelingInfo",void 0),s([n((()=>{const e=$(he);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(t,r,i){I(i,wt(t),r)}}},e})())],a.prototype,"opacity",void 0),s([n(fe)],a.prototype,"legendEnabled",void 0),s([n({type:["show","hide"],json:(()=>{const e=$(ge.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],a.prototype,"listMode",void 0),s([y("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],a.prototype,"readGlobalIdField",null),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:C}}}}})],a.prototype,"objectIdField",void 0),s([y("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],a.prototype,"readObjectIdField",null),s([n({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],a.prototype,"operationalLayerType",void 0),s([n(j.outFields)],a.prototype,"outFields",void 0),s([n({readOnly:!0})],a.prototype,"parsedUrl",null),s([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),s([n(be)],a.prototype,"popupEnabled",void 0),s([n({type:B,json:{name:"popupInfo",write:!0}})],a.prototype,"popupTemplate",void 0),s([n({readOnly:!0})],a.prototype,"defaultPopupTemplate",null),s([n({types:X,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:Y,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:x,overridePolicy:(e,t,r)=>({ignoreOrigin:r==null?void 0:r.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,r)=>({ignoreOrigin:r==null?void 0:r.writeLayerSchema})}}})],a.prototype,"renderer",null),s([y("service","renderer",["drawingInfo.renderer","defaultSymbol"]),y("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],a.prototype,"readRenderer",null),s([n()],a.prototype,"resourceInfo",void 0),s([n((()=>{const e=$(we);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],a.prototype,"screenSizePerspectiveEnabled",void 0),s([n({clonable:!1})],a.prototype,"source",null),s([ue("source")],a.prototype,"castSource",null),s([y("portal-item","source",["featureSet"]),y("web-map","source",["featureSet"])],a.prototype,"readSource",null),s([n({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],a.prototype,"spatialReference",void 0),s([n({type:Number})],a.prototype,"subtypeCode",void 0),s([n({type:[Q]})],a.prototype,"templates",void 0),s([y("templates",["editFieldsInfo","creatorField","editorField","templates"])],a.prototype,"readTemplates",null),s([n({type:ct})],a.prototype,"timeInfo",void 0),s([n()],a.prototype,"title",void 0),s([y("service","title",["name"]),y("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],a.prototype,"readTitle",null),s([y("web-map","title",["layerDefinition.name","title"])],a.prototype,"readTitleFromWebMap",null),s([n({type:String})],a.prototype,"sublayerTitleMode",void 0),s([n({json:{read:!1}})],a.prototype,"type",void 0),s([n({type:String})],a.prototype,"typeIdField",void 0),s([y("service","typeIdField"),y("typeIdField",["layerDefinition.typeIdField"])],a.prototype,"readTypeIdField",null),s([n({type:[W]})],a.prototype,"types",void 0),s([y("service","types",["types"]),y("types",["layerDefinition.types"])],a.prototype,"readTypes",null),s([n({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],a.prototype,"visible",void 0),s([y("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],a.prototype,"readVisible",null),a=s([E("esri.layers.FeatureLayer")],a);const Qi=a;export{Qi as default};
