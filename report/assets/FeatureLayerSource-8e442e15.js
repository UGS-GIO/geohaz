import{f as G,U as y,V as k,_ as V,b as H}from"./request-a10d6950.js";import{e as _,c as W}from"./subclass-f7409b1b.js";import"./geometry-31b45acd.js";import{c as X}from"./TimeExtent-579f0e32.js";import{h as C,q as T}from"./typedArrayUtil-2af43698.js";import{s as $,a as A,o as Y}from"./Error-21d1d076.js";import{s as Q}from"./jsonMap-5ba4a9c2.js";import{m as Z}from"./Loadable-8a1ead8b.js";import{k as z,A as B,p as K}from"./promiseUtils-1d963c7c.js";import{r as tt}from"./uuid-709b6c67.js";import{y as M}from"./JSONSupport-acf2865c.js";import{M as et}from"./Extent-2b4578b8.js";import{g as at,a as st}from"./meshVertexSpaceUtils-a98cf1bd.js";import{v as rt}from"./External-e1bc87f6.js";import{c as it}from"./Graphic-f1881791.js";import{G as ot,C as L,w as nt,F as P,f as ut}from"./SpatialReference-428523ee.js";import{J as lt}from"./projection-41da473c.js";import{y as dt}from"./jsonUtils-2c7f966c.js";import{isFeatureIdentifierArrayWithGlobalId as ct,isFeatureIdentifierArrayWithObjectId as pt}from"./editingSupport-20f0f2ff.js";import{o as mt}from"./clientSideDefaults-1b55d85f.js";import{x as ht}from"./QueryTask-46d1eeb8.js";import{w as yt}from"./arcgisLayerUrl-0c479f71.js";import{Q as x}from"./featureLayerUtils-87358b6a.js";import{F as ft}from"./infoFor3D-24efd44a.js";import{s as gt}from"./executeQueryJSON-7d8733f5.js";import{i as wt}from"./editsZScale-c4af7049.js";import{b as bt}from"./Query-aaf746b1.js";import{i as Rt,c as qt,b as St,t as It}from"./EditBusLayer-7f92d599.js";import"./Polyline-013cde1f.js";import"./aaBoundingRect-aef00841.js";import"./Axis-30be7e73.js";import"./mathUtils-19b6edfc.js";import"./typeUtils-3056a943.js";import"./timeUtils-24502426.js";import"./date-7940da18.js";import"./locale-bde6d0f6.js";import"./datetime-7e00d9ef.js";import"./Promise-ec74e14b.js";import"./time-0817624a.js";import"./cast-e7a2f9aa.js";import"./MeshLocalVertexSpace-48f1035e.js";import"./Clonable-b71fa929.js";import"./enumeration-4a4e87c4.js";import"./vec3-10e9217f.js";import"./PopupTemplate-18f22683.js";import"./Collection-aa6ef54b.js";import"./Evented-b5127116.js";import"./SimpleObservable-ae589a25.js";import"./fieldUtils-fcb2a714.js";import"./intl-fe039018.js";import"./messages-2d262041.js";import"./assets-6fd92e57.js";import"./Color-e1a6dfab.js";import"./colorUtils-ac6863dc.js";import"./Identifiable-1430bdc2.js";import"./symbols-b3e075ad.js";import"./TextSymbol-53669eb2.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-f0a081b4.js";import"./symbolLayerUtils3D-5b91ffd6.js";import"./aaBoundingBox-7242ce3e.js";import"./persistableUrlUtils-ca6bb38d.js";import"./collectionUtils-b6e30316.js";import"./Portal-cb507469.js";import"./reactiveUtils-e7d9f86e.js";import"./projectBuffer-af7b4ad9.js";import"./zscale-d7e12601.js";import"./normalizeUtils-059b11cb.js";import"./normalizeUtilsCommon-c4e9ddb1.js";import"./utils-3234cfff.js";import"./utils-ed91a700.js";import"./layerUtils-c805b05c.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./defaultsJSON-b087dd4d.js";import"./DataLayerSource-62d0bfcf.js";import"./Field-be948aef.js";import"./fieldType-4834e8bc.js";import"./executeForIds-6ac7b389.js";import"./query-21390169.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-06460449.js";import"./pbf-1d598563.js";import"./OptimizedGeometry-5ad221bf.js";import"./OptimizedFeature-0af09c7a.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-b694be92.js";import"./executeQueryPBF-9bfb856e.js";import"./featureConversionUtils-e62978d0.js";import"./FeatureSet-32e85c3a.js";import"./SimpleRenderer-2c5d637a.js";import"./UniqueValueRenderer-983c9a3e.js";import"./diffUtils-d0e8b583.js";import"./colorRamps-bef5e122.js";import"./ColorStop-6cee3909.js";import"./visualVariableUtils-79811b9c.js";import"./compilerUtils-7f5a3043.js";import"./lengthUtils-1e9c410b.js";import"./styleUtils-d9ef5ac0.js";import"./AttachmentQuery-36a8e4f4.js";import"./RelationshipQuery-722111d3.js";async function j(e,t,a){const{geometry:s}=t,r={...t.attributes};if(a!=null&&(s==null?void 0:s.type)==="mesh"){const{transformFieldRoles:i}=a,{origin:n,spatialReference:o,transform:u,vertexSpace:l}=s,c=l.type==="local",p=e.spatialReference,f=p.isGeographic,S=ot(p,o),b=S||L(p)&&(L(o)||nt(o));if(!(c&&f&&b||!c&&!f&&S))return null;const d=lt(n,o,p);if(d==null)return null;if(r[i.originX]=d.x,r[i.originY]=d.y,r[i.originZ]=d.z??0,u!=null){const{translation:I,scale:m,rotation:h}=u,R=c?1:P(o)/P(p);r[i.translationX]=I[0]*R,r[i.translationY]=I[2]*R,r[i.translationZ]=-I[1]*R,r[i.scaleX]=m[0],r[i.scaleY]=m[2],r[i.scaleZ]=m[1],r[i.rotationX]=h[0],r[i.rotationY]=h[2],r[i.rotationZ]=-h[1],r[i.rotationDeg]=h[3]}return{attributes:r}}return s==null?{attributes:r}:s.type==="mesh"||s.type==="extent"?null:{geometry:s.toJSON(),attributes:r}}async function Ft(e,t){const a=await Promise.all((t.addAttachments??[]).map(i=>D(e,i))),s=await Promise.all((t.updateAttachments??[]).map(i=>D(e,i))),r=t.deleteAttachments??[];return a.length||s.length||r.length?{adds:a,updates:s,deletes:[...r]}:null}async function D(e,t){var c;const{feature:a,attachment:s}=t,{globalId:r,name:i,contentType:n,data:o,uploadId:u}=s,l={globalId:r};if(a&&("attributes"in a?l.parentGlobalId=(c=a.attributes)==null?void 0:c[e.globalIdField]:a.globalId&&(l.parentGlobalId=a.globalId)),u)l.uploadId=u;else if(o){const p=await G(o);p&&(l.contentType=p.mediaType,l.data=p.data),o instanceof File&&(l.name=o.name)}return i&&(l.name=i),n&&(l.contentType=n),l}function At(e,t,a){if(!t||t.length===0)return[];if(a&&ct(t))return t.map(r=>r.globalId);if(pt(t))return t.map(r=>r.objectId);const s=a?e.globalIdField:e.objectIdField;return s?t.map(r=>r.getAttribute(s)):[]}function Ot(e){var r,i,n;const t=e==null?void 0:e.assetMaps;if(t){for(const o of t.addResults)o.success||$.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${o.globalId}.`);for(const o of t.updateResults)o.success||$.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${o.globalId}.`)}const a=e==null?void 0:e.attachments,s={addFeatureResults:((r=e==null?void 0:e.addResults)==null?void 0:r.map(q))??[],updateFeatureResults:((i=e==null?void 0:e.updateResults)==null?void 0:i.map(q))??[],deleteFeatureResults:((n=e==null?void 0:e.deleteResults)==null?void 0:n.map(q))??[],addAttachmentResults:a!=null&&a.addResults?a.addResults.map(q):[],updateAttachmentResults:a!=null&&a.updateResults?a.updateResults.map(q):[],deleteAttachmentResults:a!=null&&a.deleteResults?a.deleteResults.map(q):[]};return e!=null&&e.editMoment&&(s.editMoment=e.editMoment),s}function q(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new A("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}function v(e,t){return new it({attributes:e.attributes,geometry:dt({...e.geometry,spatialReference:t})})}function Et(e,t){var a,s,r;return{adds:((a=e==null?void 0:e.adds)==null?void 0:a.map(i=>v(i,t)))||[],updates:((s=e==null?void 0:e.updates)==null?void 0:s.map(i=>({original:v(i[0],t),current:v(i[1],t)})))||[],deletes:((r=e==null?void 0:e.deletes)==null?void 0:r.map(i=>v(i,t)))||[],spatialReference:t}}function _t(e){const t=e.details.raw,a=+t.code,s=+t.extendedCode;return a===500&&(s===-2147217144||s===-2147467261)}const xt=new Q({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),vt=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),$t=new Q({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let O=class extends Z{constructor(){super(...arguments),this.type="feature-layer",this.refresh=z(async()=>{var a,s;await this.load();const e=(a=this.sourceJSON.editingInfo)==null?void 0:a.lastEditDate;if(e==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const t=e!==((s=this.sourceJSON.editingInfo)==null?void 0:s.lastEditDate);return{dataChanged:t,updates:t?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(e){const t=this.layer.sourceJSON,a=this._fetchService(t,{...e}).then(()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,e)).then(()=>this._ensureLatestMetadata(e));return this.addResolvingPromise(a),Promise.resolve(this)}get queryTask(){var l;const{capabilities:e,parsedUrl:t,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:i,fieldsIndex:n}=this.layer,o=C("featurelayer-pbf")&&(e==null?void 0:e.query.supportsFormatPBF)&&s==null,u=((l=e==null?void 0:e.operations)==null?void 0:l.supportsQueryAttachments)??!1;return new ht({url:t.path,pbfSupported:o,fieldsIndex:n,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:i,queryAttachmentsSupported:u})}async addAttachment(e,t){await this.load();const{layer:a}=this;await x(a,"editing");const s=e.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/addAttachment",i=this._getLayerRequestOptions(),n=this._getFormDataForAttachment(t,i.query);try{const o=await y(r,{body:n});return q(o.data.addAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(s,o)}}async updateAttachment(e,t,a){await this.load();const{layer:s}=this;await x(s,"editing");const r=e.attributes[s.objectIdField],i=s.parsedUrl.path+"/"+r+"/updateAttachment",n=this._getLayerRequestOptions({query:{attachmentId:t}}),o=this._getFormDataForAttachment(a,n.query);try{const u=await y(i,{body:o});return q(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(r,u)}}async applyEdits(e,t){var g,F,E,N,J,U;await this.load();const{layer:a}=this;await x(a,"editing");const s=a.infoFor3D,r=s!=null,i=r||((t==null?void 0:t.globalIdUsed)??!1),n=r?await this._uploadMeshesAndGetAssetMapEditsJSON(e):null,o=((g=e.addFeatures)==null?void 0:g.map(w=>j(this.layer,w,s)))??[],u=(await Promise.all(o)).filter(T),l=((F=e.updateFeatures)==null?void 0:F.map(w=>j(this.layer,w,s)))??[],c=(await Promise.all(l)).filter(T),p=At(this.layer,e.deleteFeatures,i);wt(u,c,a.spatialReference);const f=await Ft(this.layer,e),S=a.capabilities.editing.supportsAsyncApplyEdits&&r,b=(t==null?void 0:t.gdbVersion)||a.gdbVersion,d={gdbVersion:b,rollbackOnFailure:t==null?void 0:t.rollbackOnFailureEnabled,useGlobalIds:i,returnEditMoment:t==null?void 0:t.returnEditMoment,usePreviousEditMoment:t==null?void 0:t.usePreviousEditMoment,async:S};await Rt(this.layer.url,b,!0);const I=qt(this.layer.url,b||null);if(await St(a.url,b,a.historicMoment))throw new A("feature-layer-source:historic-version","Editing a historic version is not allowed");t!=null&&t.returnServiceEditsOption?(d.edits=JSON.stringify([{id:a.layerId,adds:u,updates:c,deletes:p,attachments:f,assetMaps:n}]),d.returnServiceEditsOption=xt.toJSON(t==null?void 0:t.returnServiceEditsOption),d.returnServiceEditsInSourceSR=t==null?void 0:t.returnServiceEditsInSourceSR):(d.adds=u.length?JSON.stringify(u):null,d.updates=c.length?JSON.stringify(c):null,d.deletes=p.length?i?JSON.stringify(p):p.join(","):null,d.attachments=f&&JSON.stringify(f),d.assetMaps=n!=null?JSON.stringify(n):void 0);const m=this._getLayerRequestOptions({method:"post",query:d});I&&(m.authMode="immediate",m.query.returnEditMoment=!0,m.query.sessionId=It);const h=t!=null&&t.returnServiceEditsOption?a.url:a.parsedUrl.path;let R;try{R=S?await this._asyncApplyEdits(h+"/applyEdits",m):await y(h+"/applyEdits",m)}catch(w){if(!_t(w))throw w;m.authMode="immediate",R=S?await this._asyncApplyEdits(h+"/applyEdits",m):await y(h+"/applyEdits",m)}if(!((E=a.capabilities.operations)!=null&&E.supportsEditing)&&((J=(N=a.effectiveCapabilities)==null?void 0:N.operations)!=null&&J.supportsEditing)){const w=(U=H)==null?void 0:U.findCredential(a.url);await(w==null?void 0:w.refreshToken())}return this._createEditsResult(R)}async deleteAttachments(e,t){await this.load();const{layer:a}=this;await x(a,"editing");const s=e.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await y(r,this._getLayerRequestOptions({query:{attachmentIds:t.join(",")},method:"post"}))).data.deleteAttachmentResults.map(q)}catch(i){throw this._createAttachmentErrorResult(s,i)}}fetchRecomputedExtents(e={}){const t=e.signal;return this.load({signal:t}).then(async()=>{const a=this._getLayerRequestOptions({...e,query:{returnUpdates:!0}}),{layerId:s,url:r}=this.layer,{data:i}=await y(`${r}/${s}`,a),{id:n,extent:o,fullExtent:u,timeExtent:l}=i,c=o||u;return{id:n,fullExtent:c&&et.fromJSON(c),timeExtent:l&&X.fromJSON({start:l[0],end:l[1]})}})}async queryAttachments(e,t={}){await this.load();const a=this._getLayerRequestOptions(t);return this.queryTask.executeAttachmentQuery(e,a)}async queryFeatures(e,t){var s;await this.load();const a=await this.queryTask.execute(e,{...t,query:this._createRequestQueryOptions(t)});return(s=e.outStatistics)!=null&&s.length&&a.features.length&&a.features.forEach(r=>{var n;const i=r.attributes;(n=e.outStatistics)==null||n.forEach(({outStatisticFieldName:o})=>{if(o){const u=o.toLowerCase();u&&u in i&&o!==u&&(i[o]=i[u],delete i[u])}})}),a}async queryFeaturesJSON(e,t){return await this.load(),this.queryTask.executeJSON(e,{...t,query:this._createRequestQueryOptions(t)})}async queryObjectIds(e,t){return await this.load(),this.queryTask.executeForIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryFeatureCount(e,t){return await this.load(),this.queryTask.executeForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryExtent(e,t){return await this.load(),this.queryTask.executeForExtent(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeatures(e,t){return await this.load(),this.queryTask.executeRelationshipQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeaturesCount(e,t){return await this.load(),this.queryTask.executeRelationshipQueryForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopFeatures(e,t){return await this.load(),this.queryTask.executeTopFeaturesQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopObjectIds(e,t){return await this.load(),this.queryTask.executeForTopIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopExtents(e,t){return await this.load(),this.queryTask.executeForTopExtents(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopCount(e,t){return await this.load(),this.queryTask.executeForTopCount(e,{...t,query:this._createRequestQueryOptions(t)})}async fetchPublishingStatus(){if(!yt(this.layer.url))return"unavailable";const e=k(this.layer.url,"status"),t=await y(e,{query:{f:"json"}});return $t.fromJSON(t.data.status)}async uploadAssets(e,t){const{uploadAssets:a}=await V(()=>import("./uploadAssets-66ccf9b8.js"),["./uploadAssets-66ccf9b8.js","./request-a10d6950.js","./Error-21d1d076.js","./typedArrayUtil-2af43698.js","./JSONSupport-acf2865c.js","./subclass-f7409b1b.js","./promiseUtils-1d963c7c.js","./time-0817624a.js","./uuid-709b6c67.js","./External-e1bc87f6.js","./infoFor3D-24efd44a.js","./uploadAssetErrors-a7aebc49.js","./arcgisLayerUrl-0c479f71.js","./persistableUrlUtils-ca6bb38d.js"],import.meta.url);return a(e,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},t)}async _asyncApplyEdits(e,t){const a=(await y(e,t)).data.statusUrl;for(;;){const s=(await y(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return y(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new A("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new A("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await B(Tt)}}_createRequestQueryOptions(e){const t={...this.layer.customParameters,token:this.layer.apiKey,...e==null?void 0:e.query};return this.layer.datesInUnknownTimezone&&(t.timeReferenceUnknownClient=!0),t}async _fetchService(e,t){if(!e){const s={};C("featurelayer-advanced-symbols")&&(s.returnAdvancedSymbols=!0),t!=null&&t.cacheBust&&(s._ts=Date.now());const{data:r}=await y(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:s,signal:t==null?void 0:t.signal}));e=r}this.sourceJSON=await this._patchServiceJSON(e,t==null?void 0:t.signal);const a=e.type;if(!vt.has(a))throw new A("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(e,t){var a;if(e.type!=="Table"&&e.geometryType&&!((a=e==null?void 0:e.drawingInfo)!=null&&a.renderer)&&!e.defaultSymbol){const s=mt(e.geometryType).renderer;Y("drawingInfo.renderer",s,e)}if(e.geometryType==="esriGeometryMultiPatch"&&e.infoFor3D&&(e.geometryType="mesh"),e.extent==null)try{const{data:s}=await y(this.layer.url,this._getLayerRequestOptions({signal:t}));s.spatialReference&&(e.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:s.spatialReference})}catch(s){K(s)}return e}async _ensureLatestMetadata(e){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...e,cacheBust:!0})}async _uploadMeshesAndGetAssetMapEditsJSON(e){const{addAssetFeatures:t}=e;if(!(t!=null&&t.length))return null;const a=await this._filterRedundantAssetMaps(t);if(!(t!=null&&t.length))return null;const s=new Array,r=new Map;for(const i of a){const{geometry:n}=i,{vertexSpace:o}=n;if(at(o))s.push(n);else{const u=st(n);r.set(u,n),i.geometry=u,s.push(u)}}await this.uploadAssets(s);for(const[i,n]of r)n.addExternalSources(i.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(e){const t=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of e){const i=r.geometry,{metadata:n}=i,o=n.getExternalSourcesOnService(s),u=r.getAttribute(a);if(o.length===0){$.getLogger(this).error(`Skipping feature ${u}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:l}=o.find(rt)??o[0];for(const c of l)c.parts.length===1?t.push({globalId:tt(),parentGlobalId:u,assetName:c.assetName,assetHash:c.parts[0].partHash,flags:[]}):$.getLogger(this).error(`Skipping asset ${c.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return t}_createEditsResult(e){const t=e.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(t))for(const n of t)s.push({id:n.id,editedFeatures:n.editedFeatures}),n.id===a&&(r={addResults:n.addResults??[],updateResults:n.updateResults??[],deleteResults:n.deleteResults??[],attachments:n.attachments,editMoment:n.editMoment});else r=t;const i=Ot(r);if(s.length>0){i.editedFeatureResults=[];for(const n of s){const{editedFeatures:o}=n,u=o!=null&&o.spatialReference?new ut(o.spatialReference):null;i.editedFeatureResults.push({layerId:n.id,editedFeatures:Et(o,u)})}}return i}_createAttachmentErrorResult(e,t){var r;const a=((r=t.details.messages)==null?void 0:r[0])||t.message,s=t.details.httpStatus||t.details.messageCode;return{objectId:e,globalId:null,error:new A("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(e,t){const a=e instanceof FormData?e:e&&e.elements?new FormData(e):null;if(a)for(const s in t){const r=t[s];r!=null&&(a.set?a.set(s,r):a.append(s,r))}return a}_getLayerRequestOptions(e={}){const{parsedUrl:t,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...e,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...t.query,f:"json",...this._createRequestQueryOptions(e)},responseType:"json"}}async _filterRedundantAssetMaps(e){const{layer:t}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=t;if(s==null||a==null)return e;const i=ft(s);if(i==null)return e;const n=k(r.path,`../${i.id}`),o=new Array,u=new Array;for(const d of e)d.geometry.metadata.getExternalSourcesOnService(r).length>0?u.push(d):o.push(d);const l=u.map(d=>d.getAttribute(a)).filter(T);if(l.length===0)return e;const{assetMapFieldRoles:{parentGlobalId:c,assetHash:p}}=s,f=new bt;f.where=`${c} IN (${l.map(d=>`'${d}'`)})`,f.outFields=[p,c],f.returnGeometry=!1;const S=await gt(n,f),{features:b}=S;return b.length===0?e:[...o,...u.filter(d=>{const I=d.getAttribute(a);if(!I)return!0;const{metadata:m}=d.geometry,h=b.filter(g=>g.getAttribute(c)===I);if(h.length===0)return!0;const R=h.map(g=>g.getAttribute(p));return m.getExternalSourcesOnService(r).flatMap(({source:g})=>g.flatMap(F=>F.parts.map(E=>E.partHash))).some(g=>R.every(F=>g!==F))})]}};_([M()],O.prototype,"type",void 0),_([M({constructOnly:!0})],O.prototype,"layer",void 0),_([M({readOnly:!0})],O.prototype,"queryTask",null),O=_([W("esri.layers.graphics.sources.FeatureLayerSource")],O);const Tt=1e3,Aa=O;export{Aa as default};
