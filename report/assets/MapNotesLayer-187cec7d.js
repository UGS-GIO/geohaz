import{e as i,c as C,s as L}from"./subclass-f7409b1b.js";import"./geometry-31b45acd.js";import{c as P}from"./Graphic-f1881791.js";import"./symbols-b3e075ad.js";import{V as w}from"./Collection-aa6ef54b.js";import{b as N,a as B,o as F}from"./Error-21d1d076.js";import{m as k}from"./MultiOriginJSONSupport-9bd581c6.js";import{y as p}from"./JSONSupport-acf2865c.js";import"./typedArrayUtil-2af43698.js";import{o as c,M as z}from"./Extent-2b4578b8.js";import{f as h,G as W,r as A}from"./SpatialReference-428523ee.js";import{K as S,H,E as K,B as U,U as q}from"./projection-41da473c.js";import{D as M,k as J,I,j as $,K as E}from"./aaBoundingRect-aef00841.js";import{R as V}from"./normalizeUtils-059b11cb.js";import Q from"./FeatureLayer-f68eb3e5.js";import{h as X}from"./GraphicsLayer-b9db49bf.js";import{b as Y}from"./Layer-668dff8a.js";import{n as Z}from"./objectIdUtils-789e911a.js";import{n as ee}from"./BlendLayer-2e0705c7.js";import{u as te}from"./OperationalLayer-04352719.js";import{j as re}from"./PortalLayer-f8b97b56.js";import{t as oe}from"./ScaleRangeLayer-61383a56.js";import{y as R}from"./Field-be948aef.js";import{S as ie,f as le,y as T,g as ne}from"./TextSymbol-53669eb2.js";import"./promiseUtils-1d963c7c.js";import"./Polyline-013cde1f.js";import"./typeUtils-3056a943.js";import"./jsonMap-5ba4a9c2.js";import"./PopupTemplate-18f22683.js";import"./Clonable-b71fa929.js";import"./cast-e7a2f9aa.js";import"./fieldUtils-fcb2a714.js";import"./request-a10d6950.js";import"./intl-fe039018.js";import"./date-7940da18.js";import"./locale-bde6d0f6.js";import"./datetime-7e00d9ef.js";import"./messages-2d262041.js";import"./assets-6fd92e57.js";import"./mathUtils-19b6edfc.js";import"./enumeration-4a4e87c4.js";import"./Color-e1a6dfab.js";import"./colorUtils-ac6863dc.js";import"./Identifiable-1430bdc2.js";import"./jsonUtils-2c7f966c.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-f0a081b4.js";import"./symbolLayerUtils3D-5b91ffd6.js";import"./aaBoundingBox-7242ce3e.js";import"./persistableUrlUtils-ca6bb38d.js";import"./collectionUtils-b6e30316.js";import"./Portal-cb507469.js";import"./Loadable-8a1ead8b.js";import"./Promise-ec74e14b.js";import"./reactiveUtils-e7d9f86e.js";import"./Evented-b5127116.js";import"./SimpleObservable-ae589a25.js";import"./time-0817624a.js";import"./projectBuffer-af7b4ad9.js";import"./zscale-d7e12601.js";import"./Axis-30be7e73.js";import"./normalizeUtilsCommon-c4e9ddb1.js";import"./utils-3234cfff.js";import"./utils-ed91a700.js";import"./ClassBreaksRenderer-aa69b6ca.js";import"./UniqueValueRenderer-983c9a3e.js";import"./diffUtils-d0e8b583.js";import"./colorRamps-bef5e122.js";import"./ColorStop-6cee3909.js";import"./visualVariableUtils-79811b9c.js";import"./compilerUtils-7f5a3043.js";import"./lengthUtils-1e9c410b.js";import"./styleUtils-d9ef5ac0.js";import"./layerUtils-c805b05c.js";import"./jsonUtils-7ee1282d.js";import"./LRUCache-000d0e19.js";import"./Version-ef27dfc4.js";import"./FieldsIndex-9238b8b6.js";import"./UnknownTimeZone-8ede07af.js";import"./colorUtils-f660fd36.js";import"./vec42-a95eff2d.js";import"./vec4f64-430e4feb.js";import"./utils-064c64c4.js";import"./heatmapUtils-7a838493.js";import"./SimpleRenderer-2c5d637a.js";import"./commonProperties-0c35c2c9.js";import"./TimeExtent-579f0e32.js";import"./timeUtils-24502426.js";import"./ElevationInfo-e9f55e40.js";import"./FormTemplate-b1394f1a.js";import"./workers-1be2b889.js";import"./Connection-2d969448.js";import"./editsZScale-c4af7049.js";import"./queryZScale-b694be92.js";import"./FeatureSet-32e85c3a.js";import"./APIKeyMixin-7c0d27b5.js";import"./ArcGISService-1a65aba0.js";import"./arcgisLayerUrl-0c479f71.js";import"./CustomParametersMixin-882f293c.js";import"./EditBusLayer-7f92d599.js";import"./uuid-709b6c67.js";import"./FeatureEffectLayer-f145f4bc.js";import"./Query-aaf746b1.js";import"./DataLayerSource-62d0bfcf.js";import"./FeatureLayerBase-5d10c7bd.js";import"./HeightModelInfo-46c4a968.js";import"./featureLayerUtils-87358b6a.js";import"./AttachmentQuery-36a8e4f4.js";import"./RelationshipQuery-722111d3.js";import"./fieldType-4834e8bc.js";import"./LayerFloorInfo-88589fec.js";import"./serviceCapabilitiesUtils-d90db62d.js";import"./FeatureReductionLayer-b89875ed.js";import"./FeatureReductionSelection-d7d28c54.js";import"./LabelClass-bca4dcea.js";import"./defaults-473b7c21.js";import"./defaultsJSON-b087dd4d.js";import"./MD5-715f37cd.js";import"./OrderedLayer-69f0528e.js";import"./RefreshableLayer-9477518b.js";import"./TemporalLayer-114f16ec.js";import"./TimeInfo-c87ecbc7.js";import"./FeatureTemplate-231bfadc.js";import"./FeatureType-d0808bff.js";import"./fieldProperties-663ad9a8.js";import"./labelingInfo-f5739018.js";import"./versionUtils-28beeff3.js";import"./styleUtils-f1a4091c.js";import"./TopFeaturesQuery-827caf55.js";import"./popupUtils-de5a8217.js";import"./interfaces-f1f22245.js";import"./mat4f32-1b45b54f.js";import"./mat4-a6ac6b0f.js";import"./PortalItem-9d3416e3.js";import"./portalItemUtils-8aceb0b8.js";import"./GraphicsCollection-393d5158.js";function b(t){return t.featureCollectionType==="markup"||t.layers.some(e=>e.layerDefinition.visibilityField!=null||!D(e))}function D({layerDefinition:t,featureSet:e}){const r=t.geometryType??e.geometryType;return v.find(o=>{var l,a,s;return r===o.geometryTypeJSON&&((s=(a=(l=t.drawingInfo)==null?void 0:l.renderer)==null?void 0:a.symbol)==null?void 0:s.type)===o.identifyingSymbol.type})}function j(){return new z({xmin:-180,ymin:-90,xmax:180,ymax:90})}const x=new R({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),ae=new R({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255});let y=class extends X{constructor(t){super(t),this.visibilityMode="inherited"}initialize(){for(const t of this.graphics)t.sourceLayer=this.layer;this.graphics.on("after-add",t=>{t.item.sourceLayer=this.layer}),this.graphics.on("after-remove",t=>{t.item.sourceLayer=null})}get fullExtent(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference,e=this.fullBounds;return t?e==null?S(j(),t).geometry:$(e,t):null}get fullBounds(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference;if(!t)return null;const e=M();return this.graphics.forEach(o=>{const l=o.geometry!=null?S(o.geometry,t).geometry:null;l!=null&&J(e,l.type==="point"?l:l.extent,e)}),I(e,E)?null:e}get sublayers(){return this.graphics}};i([p({readOnly:!0})],y.prototype,"fullExtent",null),i([p({readOnly:!0})],y.prototype,"fullBounds",null),i([p({readOnly:!0})],y.prototype,"sublayers",null),i([p()],y.prototype,"layer",void 0),i([p()],y.prototype,"layerId",void 0),i([p({readOnly:!0})],y.prototype,"visibilityMode",void 0),y=i([C("esri.layers.MapNotesLayer.MapNotesSublayer")],y);const v=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new ie().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new le().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new T().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new T().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new ne().toJSON()}];let n=class extends ee(oe(te(re(k(Y))))){constructor(t){super(t),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=h.WGS84,this.sublayers=new w(v.map(e=>new y({id:e.id,layerId:e.layerId,title:e.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(t,e,r){return{operations:{supportsMapNotesEditing:!b(e)&&(r==null?void 0:r.origin)!=="portal-item"}}}readFeatureCollections(t,e,r){if(!b(e))return null;const o=e.layers.map(l=>{const a=new Q;return a.read(l,r),a});return new w({items:o})}readLegacyfeatureCollectionJSON(t,e){return b(e)?N(e.featureCollection):null}get fullExtent(){var r;const t=this.spatialReference,e=M();return this.sublayers!=null?this.sublayers.forEach(({fullBounds:o})=>o!=null?J(e,o,e):e,e):(r=this.featureCollectionJSON)!=null&&r.layers.some(o=>o.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(o=>{const l=S(o.layerDefinition.extent,t).geometry;l!=null&&J(e,l,e)}),I(e,E)?S(j(),t).geometry:$(e,t)}readMinScale(t,e){for(const r of e.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(t,e){for(const r of e.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(t,e){return e.layers.length?h.fromJSON(e.layers[0].layerDefinition.spatialReference):h.WGS84}readSublayers(t,e,r){if(b(e))return null;const o=[];let l=e.layers.reduce((a,s)=>Math.max(a,s.layerDefinition.id??-1),-1)+1;for(const a of e.layers){const{layerDefinition:s,featureSet:m}=a,u=s.id??l++,f=D(a);if(f!=null){const d=new y({id:f.id,title:s.name,layerId:u,layer:this,graphics:m.features.map(({geometry:g,symbol:O,attributes:_,popupInfo:G})=>P.fromJSON({attributes:_,geometry:g,symbol:O,popupTemplate:G}))});o.push(d)}}return new w(o)}writeSublayers(t,e,r,o){var f;const{minScale:l,maxScale:a}=this;if(t==null)return;const s=t.some(d=>d.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(s&&((f=o==null?void 0:o.messages)==null?void 0:f.push(new B("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const m=[];let u=this.spatialReference.toJSON();e:for(const d of t)for(const g of d.graphics)if(g.geometry!=null){u=g.geometry.spatialReference.toJSON();break e}for(const d of v){const g=t.find(O=>d.id===O.id);this._writeMapNoteSublayer(m,g,d,l,a,u,o)}F("featureCollection.layers",m,e)}get textLayer(){return this._findSublayer("textLayer")}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),Promise.resolve(this)}read(t,e){"featureCollection"in t&&(t=N(t),Object.assign(t,t.featureCollection)),super.read(t,e)}async beforeSave(){if(this.sublayers==null)return;let t=null;const e=[];for(const o of this.sublayers)for(const l of o.graphics)if(l.geometry!=null){const a=l.geometry;t?W(a.spatialReference,t)||(H(a.spatialReference,t)||K()||await U(),l.geometry=q(a,t)):t=a.spatialReference,e.push(l)}const r=await V(e.map(o=>o.geometry));e.forEach((o,l)=>o.geometry=r[l])}_findSublayer(t){var e;return this.sublayers==null?null:((e=this.sublayers)==null?void 0:e.find(r=>r.id===t))??null}_writeMapNoteSublayer(t,e,r,o,l,a,s){const m=[];if(e!=null){for(const u of e.graphics)this._writeMapNote(m,u,r.geometryType,s);this._normalizeObjectIds(m,x),t.push({layerDefinition:{name:e.title,drawingInfo:{renderer:{type:"simple",symbol:N(r.identifyingSymbol)}},id:e.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:l,objectIdField:"OBJECTID",fields:[x.toJSON(),ae.toJSON()],spatialReference:a},featureSet:{features:m,geometryType:r.geometryTypeJSON}})}}_writeMapNote(t,e,r,o){var u,f;if(e==null)return;const{geometry:l,symbol:a,popupTemplate:s}=e;if(l==null)return;if(l.type!==r)return void((u=o==null?void 0:o.messages)==null?void 0:u.push(new L("map-notes-layer:invalid-geometry-type",`Geometry "${l.type}" cannot be saved in "${r}" layer`,{graphic:e})));if(a==null)return void((f=o==null?void 0:o.messages)==null?void 0:f.push(new L("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:e})));const m={attributes:{...e.attributes},geometry:l.toJSON(),symbol:a.toJSON()};s!=null&&(m.popupInfo=s.toJSON()),t.push(m)}_normalizeObjectIds(t,e){const r=e.name;let o=Z(r,t)+1;const l=new Set;for(const a of t){a.attributes||(a.attributes={});const{attributes:s}=a;(s[r]==null||l.has(s[r]))&&(s[r]=o++),l.add(s[r])}}};i([p({readOnly:!0})],n.prototype,"capabilities",void 0),i([c(["portal-item","web-map"],"capabilities",["layers"])],n.prototype,"readCapabilities",null),i([p({readOnly:!0})],n.prototype,"featureCollections",void 0),i([c(["web-map","portal-item"],"featureCollections",["layers"])],n.prototype,"readFeatureCollections",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],n.prototype,"featureCollectionJSON",void 0),i([c(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],n.prototype,"readLegacyfeatureCollectionJSON",null),i([p({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],n.prototype,"featureCollectionType",void 0),i([p({readOnly:!0})],n.prototype,"fullExtent",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],n.prototype,"legendEnabled",void 0),i([p({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),i([p({type:Number,nonNullable:!0,json:{write:!1}})],n.prototype,"minScale",void 0),i([c(["web-map","portal-item"],"minScale",["layers"])],n.prototype,"readMinScale",null),i([p({type:Number,nonNullable:!0,json:{write:!1}})],n.prototype,"maxScale",void 0),i([c(["web-map","portal-item"],"maxScale",["layers"])],n.prototype,"readMaxScale",null),i([p({readOnly:!0})],n.prototype,"multipointLayer",null),i([p({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],n.prototype,"operationalLayerType",void 0),i([p({readOnly:!0})],n.prototype,"pointLayer",null),i([p({readOnly:!0})],n.prototype,"polygonLayer",null),i([p({readOnly:!0})],n.prototype,"polylineLayer",null),i([p({type:h})],n.prototype,"spatialReference",void 0),i([c(["web-map","portal-item"],"spatialReference",["layers"])],n.prototype,"readSpatialReference",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],n.prototype,"sublayers",void 0),i([c("web-map","sublayers",["layers"])],n.prototype,"readSublayers",null),i([A("web-map","sublayers")],n.prototype,"writeSublayers",null),i([p({readOnly:!0})],n.prototype,"textLayer",null),i([p()],n.prototype,"title",void 0),i([p({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),n=i([C("esri.layers.MapNotesLayer")],n);const _r=n;export{_r as default};
