import{V as h,U as f,f as X}from"./request-a10d6950.js";import{h as I}from"./typedArrayUtil-2af43698.js";import{s as Y}from"./Error-21d1d076.js";import{e as Z,s as p,A as ss,p as es}from"./promiseUtils-1d963c7c.js";import{r as _,n as A,t as E}from"./time-0817624a.js";import{r as ts}from"./uuid-709b6c67.js";import{h as os,N as rs,i as S,o as U,A as ns}from"./External-e1bc87f6.js";import{r as as,n as is,a as cs,d as ls,c as x,l as ps,t as us,u as ms,p as fs}from"./uploadAssetErrors-a7aebc49.js";import{w as ds}from"./arcgisLayerUrl-0c479f71.js";import{r as hs}from"./subclass-f7409b1b.js";import{s as gs,u as k,i as ws}from"./infoFor3D-24efd44a.js";import"./JSONSupport-acf2865c.js";import"./persistableUrlUtils-ca6bb38d.js";const $={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};function g(t,e=o=>{},s){return new ys(t,e,s)}let ys=class{constructor(e,s=r=>{},o){if(this.onProgress=s,this.taskName=o,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,typeof e=="number"){this._weights={};for(let r=0;r<e;r++){const n=r,a=1/e;this._weights[n]=a,this._progressMap.set(n,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[s,o]of this._progressMap.entries())e+=o*this._weights[s];if(e===1&&I("enable-feature:esri-3dofl-upload-timings")){const s=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${s} sec`);for(const[o,r]of this._timingsMap){const n=Math.round(r.end-r.start)/1e3,a=Math.round(n/s*100);console.log(this.taskName??"Task",{stepKey:o,stepTime:n,relativeTime:a})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),I("enable-feature:esri-3dofl-upload-timings")){const o=performance.now();this._startTime??(this._startTime=o);const r=hs(this._timingsMap,e,()=>({start:o,end:0}));s===1&&(r.end=o)}this.emitProgress()}simulate(e,s){return D(o=>this.setProgress(e,o),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}};function D(t=s=>{},e=Ms){const s=performance.now();t(0);const o=setInterval(()=>{const r=performance.now()-s,n=1-Math.exp(-r/e);t(n)},$s);return Z(()=>{clearInterval(o),t(1)})}function Ps(t,e=bs){return _(E(t*B/e))}function Ts(t,e=As){return _(E(t*B/e))}const bs=10,As=10,B=8e-6,$s=A(50),Ms=A(1e3),O=1e6,N=20*O,Fs=2e9,js=3;async function vs({data:t,name:e,description:s},o,r){let n=null;try{const a=h(o,"uploads"),i=h(a,"info"),{data:c}=await f(i,{query:{f:"json"},responseType:"json"});p(r);const u=ds(o),l=c.maxUploadFileSize*O,d=u?Fs:l,b=u?Math.min(N,l):N;if(t.size>d)throw new Error("Data too large");const L=h(a,"register"),{data:M}=await f(L,{query:{f:"json",itemName:Is(e),description:s},responseType:"json",method:"post"});if(p(r),!M.success)throw new Error("Registration failed");const{itemID:H}=M.item;n=h(a,H);const G=h(n,"uploadPart"),F=Math.ceil(t.size/b),w=new Array;for(let m=0;m<F;++m)w.push(t.slice(m*b,Math.min((m+1)*b,t.size)));const y=w.slice().reverse(),j=new Array,J=g(F,r==null?void 0:r.onProgress,"uploadItem"),V=async()=>{for(;y.length!==0;){const m=w.length-y.length,P=y.pop(),T=new FormData,K=J.simulate(m,Ps(P.size));try{T.append("f","json"),T.append("file",P),T.append("partId",`${m}`);const{data:Q}=await f(G,{timeout:0,body:T,responseType:"json",method:"post"});if(p(r),!Q.success)throw new Error("Part upload failed")}finally{K.remove()}}};for(let m=0;m<js&&y.length!==0;++m)j.push(V());await Promise.all(j);const W=h(n,"commit"),{data:v}=await f(W,{query:{f:"json",parts:w.map((m,P)=>P).join(",")},responseType:"json",method:"post"});if(p(r),!v.success)throw new Error("Commit failed");return v.item}catch(a){if(n!=null){const i=h(n,"delete");await f(i,{query:{f:"json"},responseType:"json",method:"post"})}throw a}}function Is(t){return t.replaceAll("/","_").replaceAll("\\","_")}async function le(t,e,s){var n;const o=t.length;if(!o)return(n=s==null?void 0:s.onProgress)==null||n.call(s,1),[];const r=g(o,s==null?void 0:s.onProgress,"uploadAssets");return Promise.all(t.map((a,i)=>Ns(a,e,{...s,onProgress:r.makeOnProgress(i)})))}async function Ns(t,{layer:e,ongoingUploads:s},o){var a;const r=s.get(t);if(r)return r;if(!Js(e))throw new as;if(_s(t,e))return(a=o==null?void 0:o.onProgress)==null||a.call(o,1),t;const n=Es(t,e,o);s.set(t,n);try{await n}finally{s.delete(t)}return t}function _s(t,e){const{parsedUrl:s}=e;return s!=null&&t.metadata.externalSources.some(o=>os(o,s))}async function Es(t,e,s){const{metadata:o}=t,{displaySource:r}=o,n=C(r==null?void 0:r.source,e),a=!!n,i=o.externalSources.length>0,c=a?Ss(n,e,s):i?Us(t,e,s):xs(t,e,s),u=await c;return p(s),t.addExternalSources([u]),t}async function Ss(t,e,s){return{source:await q(t,e,s),original:!0}}async function Us(t,e,s){const o=z(e),{externalSources:r}=t.metadata,n=Ds(r,e);if(!n)throw new is;const a=g($.uploadConvertibleSource,s==null?void 0:s.onProgress,"uploadConvertibleSource"),i=await q(n,e,{onProgress:a.makeOnProgress("uploadEditSource")});t.addExternalSources([{source:i,original:!0}]);const c=n.reduce((l,{asset:d})=>d instanceof File?l+d.size:l,0),u=a.simulate("serviceAssetsToGlb",Ts(c));try{return{source:await Ls(i,e,o)}}finally{u.remove()}}async function xs(t,e,s){const o=g($.uploadLocalMesh,s==null?void 0:s.onProgress,"uploadLocalMesh"),r=ks(t,e,{...s,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await R([r],e,{...s,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:t.extent.clone(),original:!0}}async function ks(t,e,s){const o=z(e),r=await t.load(s),n=await r.toBinaryGLTF({ignoreLocalTransform:!0});p(s);const a=await n.buffer();return p(s),{blob:new Blob([a.data],{type:a.type}),assetName:`${ts()}.glb`,assetType:o}}function Ds(t,e){for(const s of t){const o=C(s.source,e);if(o)return o}return null}function C(t,e){if(!t)return null;const{infoFor3D:{supportedFormats:s,editFormats:o}}=e,r=ns(t),n=new Array;let a=!1;for(let i=0;i<r.length;++i){const c=Bs(r[i],s);if(!c)return null;o.includes(c.assetType)&&(a=!0),n.push(c)}return a?n:null}function Bs(t,e){const s=rs(t,e);return s?{asset:t,assetType:s}:null}async function q(t,e,s){return R(t.map(o=>Os(o,s)),e,s)}async function R(t,e,s){const o=g($.uploadAssetBlobs,s==null?void 0:s.onProgress,"uploadAssetBlobs"),r=await qs(t,e,{...s,onProgress:o.makeOnProgress("prepareAssetItems")});p(s);const n=r.map(({item:i})=>i),{uploadResults:a}=await Rs(n,e,{...s,onProgress:o.makeOnProgress("uploadAssetItems")});return p(s),t.map((i,c)=>zs(r[c],a[c],e))}async function Os(t,e){const{asset:s,assetType:o}=t;if(s instanceof File)return{blob:s,assetName:s.name,assetType:o};const r=await s.toBlob(e);return p(e),{blob:r,assetName:s.assetName,assetType:o}}async function Cs(t,e,s){const{blob:o,assetType:r,assetName:n}=t;let a=null;try{const i=await vs({data:o,name:n},e.url,s);p(s),a={assetType:r,assetUploadId:i.itemID}}catch(i){es(i),Vs().warnOnce(`Service ${e.url} does not support the REST Uploads API.`)}if(!a){const i=await X(o);if(p(s),!i.isBase64)throw new ms;a={assetType:r,assetData:i.data}}if(!a)throw new fs;return{item:a,assetName:n}}function qs(t,e,s){const o=g(t.length,s==null?void 0:s.onProgress,"prepareAssetItems");return Promise.all(t.map(async(r,n)=>{const a=Cs(await r,e,{...s,onProgress:o.makeOnProgress(n)});return p(s),a}))}async function Rs(t,e,s){const o=D(s==null?void 0:s.onProgress);try{const r=await f(h(e.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(t)},method:"post",responseType:"json"});if(p(s),r.data.uploadResults.length!==t.length)throw new cs(t.length,r.data.uploadResults.length);return r.data}finally{o.remove()}}function zs(t,e,s){const{success:o}=e;if(!o){const{error:u}=e;throw new ls(t.assetName,u)}const{assetHash:r}=e,{assetName:n,item:{assetType:a}}=t,{infoFor3D:{supportedFormats:i}}=s,c=gs(a,i);if(!c)throw new x(a);return new S(n,c,[new U(`${s.parsedUrl.path}/assets/${r}`,r)])}async function Ls(t,e,s){var u;const o=t.map(({assetName:l,parts:d})=>({assetName:l,assetHash:d[0].partHash})),r=(u=e.capabilities)==null?void 0:u.operations.supportsAsyncConvert3D,n={f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:s,async:r},a=h(e.parsedUrl.path,"convert3D");let i;try{i=(await(r?Gs:Hs)(a,{query:n,responseType:"json",timeout:0})).data}catch{throw new ps}const{supportedFormats:c}=e.infoFor3D;return i.assets.map(l=>{const d=k(l.contentType,c);if(!d)throw new x(d);return new S(l.assetName,l.contentType,[new U(l.assetURL,l.assetHash)])})}function Hs(t,e){return f(t,e)}async function Gs(t,e){const s=(await f(t,e)).data.statusUrl;for(;;){const o=(await f(s,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return f(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await ss(Ws)}}function Js(t){return!!t.infoFor3D&&!!t.url}function z(t){const{infoFor3D:e}=t,s=k("model/gltf-binary",e.supportedFormats)??ws("glb",e.supportedFormats);if(!s)throw new us;return s}function Vs(){return Y.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const Ws=A(1e3);export{le as uploadAssets};
