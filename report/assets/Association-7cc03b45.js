import{e as t,c as s}from"./subclass-f7409b1b.js";import"./geometry-31b45acd.js";import{y as l,f as a}from"./JSONSupport-acf2865c.js";import"./typedArrayUtil-2af43698.js";import"./Error-21d1d076.js";import{o as p}from"./Extent-2b4578b8.js";import{r as d}from"./SpatialReference-428523ee.js";import{i,m}from"./index-a172df4f.js";import{m as w}from"./Polyline-013cde1f.js";let o=class extends a{constructor(r){super(r),this.globalId=null,this.associationType=null,this.fromNetworkElement=null,this.toNetworkElement=null,this.geometry=null,this.errorMessage=null,this.percentAlong=null,this.errorCode=null,this.isContentVisible=null,this.status=null}readFromNetworkElement(r,e){const n=new m;return n.globalId=e.fromGlobalId,n.networkSourceId=e.fromNetworkSourceId,n.terminalId=e.fromTerminalId,n}writeFromNetworkElement(r,e){r&&(e.fromGlobalId=r.globalId,e.fromNetworkSourceId=r.networkSourceId,e.fromTerminalId=r.terminalId)}readToNetworkElement(r,e){const n=new m;return n.globalId=e.toGlobalId,n.networkSourceId=e.toNetworkSourceId,n.terminalId=e.toTerminalId,n}writeToNetworkElement(r,e){r&&(e.toGlobalId=r.globalId,e.toNetworkSourceId=r.networkSourceId,e.toTerminalId=r.terminalId)}};t([l({type:String,json:{write:!0}})],o.prototype,"globalId",void 0),t([l({type:i.apiValues,json:{type:i.jsonValues,read:i.read,write:i.write}})],o.prototype,"associationType",void 0),t([l({type:m,json:{write:{target:{fromGlobalId:{type:String},fromNetworkSourceId:{type:Number},fromTerminalId:{type:Number}}},read:{source:["fromGlobalId","fromNetworkSourceId","fromTerminalId"]}}})],o.prototype,"fromNetworkElement",void 0),t([p("fromNetworkElement")],o.prototype,"readFromNetworkElement",null),t([d("fromNetworkElement")],o.prototype,"writeFromNetworkElement",null),t([l({type:m,json:{write:{target:{toGlobalId:{type:String},toNetworkSourceId:{type:Number},toTerminalId:{type:Number}}},read:{source:["toGlobalId","toNetworkSourceId","toTerminalId"]}}})],o.prototype,"toNetworkElement",void 0),t([p("toNetworkElement")],o.prototype,"readToNetworkElement",null),t([d("toNetworkElement")],o.prototype,"writeToNetworkElement",null),t([l({type:w,json:{write:!0}})],o.prototype,"geometry",void 0),t([l({type:String,json:{write:!0}})],o.prototype,"errorMessage",void 0),t([l({type:Number,json:{write:!0}})],o.prototype,"percentAlong",void 0),t([l({type:Number,json:{write:!0}})],o.prototype,"errorCode",void 0),t([l({type:Boolean,json:{write:!0}})],o.prototype,"isContentVisible",void 0),t([l({type:Number,json:{write:!0}})],o.prototype,"status",void 0),o=t([s("esri.rest.networks.support.Association")],o);const E=o;export{E as d};
