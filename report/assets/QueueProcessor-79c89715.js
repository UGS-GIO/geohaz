import{l as a,m as g,w as d,L as f,a as _,S as b}from"./promiseUtils-1d963c7c.js";import{s as v}from"./Connection-2d969448.js";import{f as h}from"./subclass-f7409b1b.js";import{s as y}from"./SimpleObservable-ae589a25.js";import{v as q}from"./JSONSupport-acf2865c.js";import{r as I}from"./signal-b060d75f.js";class l{constructor(e){this._observable=new y,this._map=new Map(e)}get size(){return h(this._observable),this._map.size}clear(){this._map.size>0&&(this._map.clear(),this._observable.notify())}delete(e){const s=this._map.delete(e);return s&&this._observable.notify(),s}entries(){return h(this._observable),this._map.entries()}forEach(e,s){h(this._observable),this._map.forEach((r,t)=>e.call(s,r,t,this),s)}get(e){return h(this._observable),this._map.get(e)}has(e){return h(this._observable),this._map.has(e)}keys(){return h(this._observable),this._map.keys()}set(e,s){return this._map.set(e,s),this._observable.notify(),this}values(){return h(this._observable),this._map.values()}[Symbol.iterator](){return h(this._observable),this._map[Symbol.iterator]()}get[Symbol.toStringTag](){return this._map[Symbol.toStringTag]}}class k{constructor(e,s){this.item=e,this.controller=s,this.promise=null}}class ${constructor(e){this._schedule=null,this._task=null,this._deferreds=new l,this._controllers=new l,this._processingItems=new l,this._pausedSignal=I(!1),this.concurrency=1,e.concurrency&&(this.concurrency=e.concurrency),this._queue=new v(e.peeker),this.process=e.process;const s=e.scheduler;e.priority&&s&&(this._task=s.registerTask(e.priority,this))}destroy(){this.clear(),this._schedule=a(this._schedule),this._task=a(this._task)}get updating(){var e;return!!((e=this._task)!=null&&e.updating)||this.running}get length(){return this._processingItems.size+this._queue.length}abort(e){const s=this._controllers.get(e);s&&s.abort()}clear(){this._queue.clear();const e=[];this._controllers.forEach(s=>e.push(s)),this._controllers.clear(),e.forEach(s=>s.abort()),this._processingItems.clear(),this._cancelNext()}forEach(e){this._deferreds.forEach((s,r)=>e(r))}get(e){const s=this._deferreds.get(e);return s?s.promise:void 0}isOngoing(e){return this._processingItems.has(e)}has(e){return this._deferreds.has(e)}pause(){this._pausedSignal.value||(this._pausedSignal.value=!0,this._cancelNext())}push(e,s){const r=this.get(e);if(r)return r;const t=new AbortController;let i=null;s&&(i=g(s,()=>t.abort()));const p=()=>{const c=this._processingItems.get(e);c&&c.controller.abort(),n(),o.reject(_())},n=()=>{m.remove(),i!=null&&i.remove(),this._removeItem(e),this._queue.remove(e),this._scheduleNext()},m=d(t.signal,p),o=f();return this._deferreds.set(e,o),this._controllers.set(e,t),o.promise.then(n,n),this._queue.push(e),this._scheduleNext(),o.promise}last(){return this._queue.last()}lastPromise(){const e=this.last();return e?this.get(e):null}peek(){return this._queue.peek()}popLast(){var s;const e=this._queue.popLast();return e&&((s=this._deferreds.get(e))==null||s.reject(_("Removed from queue")),this._removeItem(e)),e}reset(){const e=[];this._processingItems.forEach(s=>e.push(s)),this._processingItems.clear();for(const s of e)this._queue.push(s.item),s.controller.abort();this._scheduleNext()}resume(){this._pausedSignal.value&&(this._pausedSignal.value=!1,this._scheduleNext())}takeAll(){const e=[];for(;this._queue.length;)e.push(this._queue.pop());return this.clear(),e}get running(){return!this._pausedSignal.value&&this._queue.length>0&&this._processingItems.size<this.concurrency}runTask(e){for(;!e.done&&this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop()),e.madeProgress()}_removeItem(e){this._deferreds.delete(e),this._controllers.delete(e),this._processingItems.delete(e)}_scheduleNext(){this._task||this._pausedSignal.value||this._schedule||(this._schedule=q(()=>{this._schedule=null,this._next()}))}_next(){for(;this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop())}_cancelNext(){this._schedule&&(this._schedule.remove(),this._schedule=null)}_processResult(e,s){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).resolve(s))}_processError(e,s){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).reject(s))}_canProcessFulfillment(e){return!!this._deferreds.get(e.item)&&this._processingItems.get(e.item)===e}_process(e){if(e==null)return;let s;const r=new AbortController,t=new k(e,r);this._processingItems.set(e,t);try{s=this.process(e,r.signal)}catch(i){this._processError(t,i)}b(s)?(t.promise=s,s.then(i=>this._processResult(t,i),i=>this._processError(t,i))):this._processResult(t,s)}get test(){return{update:e=>this.runTask(e)}}}export{$ as _,l as s};
