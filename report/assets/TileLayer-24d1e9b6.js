import{e as s,c as _}from"./subclass-f7409b1b.js";import{I as S,U as c,v as T,a as b}from"./request-a10d6950.js";import{a as u}from"./Error-21d1d076.js";import{t as w}from"./loadAll-19f96669.js";import{m as O}from"./MultiOriginJSONSupport-9bd581c6.js";import{p as $}from"./promiseUtils-1d963c7c.js";import{y as p}from"./JSONSupport-acf2865c.js";import{s as R}from"./cast-e7a2f9aa.js";import"./typedArrayUtil-2af43698.js";import{o as U}from"./Extent-2b4578b8.js";import{f as v,r as W}from"./SpatialReference-428523ee.js";import{b as P}from"./Layer-668dff8a.js";import{i as j}from"./APIKeyMixin-7c0d27b5.js";import{p as I}from"./ArcGISCachedService-be50ac44.js";import{m as L,f as A,X as B}from"./SublayersOwner-11219337.js";import{l as M}from"./ArcGISService-1a65aba0.js";import{n as N}from"./BlendLayer-2e0705c7.js";import{e as C}from"./CustomParametersMixin-882f293c.js";import{u as k}from"./OperationalLayer-04352719.js";import{j as D}from"./PortalLayer-f8b97b56.js";import{f as J}from"./RefreshableLayer-9477518b.js";import{t as q}from"./ScaleRangeLayer-61383a56.js";import{p as G,w as V,v as E}from"./arcgisLayerUrl-0c479f71.js";import{d as x}from"./commonProperties-0c35c2c9.js";import{o as y}from"./imageBitmapUtils-a0aff7ad.js";import"./Evented-b5127116.js";import"./Collection-aa6ef54b.js";import"./SimpleObservable-ae589a25.js";import"./Loadable-8a1ead8b.js";import"./Promise-ec74e14b.js";import"./time-0817624a.js";import"./jsonMap-5ba4a9c2.js";import"./assets-6fd92e57.js";import"./geometry-31b45acd.js";import"./Polyline-013cde1f.js";import"./aaBoundingRect-aef00841.js";import"./Axis-30be7e73.js";import"./mathUtils-19b6edfc.js";import"./typeUtils-3056a943.js";import"./Identifiable-1430bdc2.js";import"./TileInfo-d188b444.js";import"./TileInfoTilemapCache-f6b6c6df.js";import"./TilemapCache-a4744968.js";import"./ByteSizeUnit-d4757d40.js";import"./LRUCache-000d0e19.js";import"./reactiveUtils-e7d9f86e.js";import"./Version-ef27dfc4.js";import"./portalItemUtils-8aceb0b8.js";import"./projection-41da473c.js";import"./projectBuffer-af7b4ad9.js";import"./zscale-d7e12601.js";import"./CollectionFlattener-1d70a253.js";import"./PopupTemplate-18f22683.js";import"./Clonable-b71fa929.js";import"./fieldUtils-fcb2a714.js";import"./intl-fe039018.js";import"./date-7940da18.js";import"./locale-bde6d0f6.js";import"./datetime-7e00d9ef.js";import"./messages-2d262041.js";import"./enumeration-4a4e87c4.js";import"./Color-e1a6dfab.js";import"./colorUtils-ac6863dc.js";import"./ClassBreaksRenderer-aa69b6ca.js";import"./symbols-b3e075ad.js";import"./TextSymbol-53669eb2.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-f0a081b4.js";import"./symbolLayerUtils3D-5b91ffd6.js";import"./aaBoundingBox-7242ce3e.js";import"./persistableUrlUtils-ca6bb38d.js";import"./collectionUtils-b6e30316.js";import"./Portal-cb507469.js";import"./UniqueValueRenderer-983c9a3e.js";import"./diffUtils-d0e8b583.js";import"./colorRamps-bef5e122.js";import"./ColorStop-6cee3909.js";import"./visualVariableUtils-79811b9c.js";import"./Graphic-f1881791.js";import"./jsonUtils-2c7f966c.js";import"./compilerUtils-7f5a3043.js";import"./lengthUtils-1e9c410b.js";import"./styleUtils-d9ef5ac0.js";import"./layerUtils-c805b05c.js";import"./jsonUtils-7ee1282d.js";import"./FieldsIndex-9238b8b6.js";import"./UnknownTimeZone-8ede07af.js";import"./colorUtils-f660fd36.js";import"./vec42-a95eff2d.js";import"./vec4f64-430e4feb.js";import"./utils-064c64c4.js";import"./heatmapUtils-7a838493.js";import"./SimpleRenderer-2c5d637a.js";import"./QueryTask-46d1eeb8.js";import"./infoFor3D-24efd44a.js";import"./DataLayerSource-62d0bfcf.js";import"./Field-be948aef.js";import"./fieldType-4834e8bc.js";import"./utils-3234cfff.js";import"./executeForIds-6ac7b389.js";import"./query-21390169.js";import"./normalizeUtils-059b11cb.js";import"./normalizeUtilsCommon-c4e9ddb1.js";import"./utils-ed91a700.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-06460449.js";import"./pbf-1d598563.js";import"./OptimizedGeometry-5ad221bf.js";import"./OptimizedFeature-0af09c7a.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-b694be92.js";import"./Query-aaf746b1.js";import"./TimeExtent-579f0e32.js";import"./timeUtils-24502426.js";import"./executeQueryJSON-7d8733f5.js";import"./FeatureSet-32e85c3a.js";import"./executeQueryPBF-9bfb856e.js";import"./featureConversionUtils-e62978d0.js";import"./FeatureType-d0808bff.js";import"./FeatureTemplate-231bfadc.js";import"./LabelClass-bca4dcea.js";import"./defaults-473b7c21.js";import"./defaultsJSON-b087dd4d.js";import"./labelingInfo-f5739018.js";import"./LayerFloorInfo-88589fec.js";import"./serviceCapabilitiesUtils-d90db62d.js";import"./AttachmentQuery-36a8e4f4.js";import"./popupUtils-de5a8217.js";import"./sublayerUtils-e406d910.js";import"./mat4f32-1b45b54f.js";import"./mat4-a6ac6b0f.js";import"./PortalItem-9d3416e3.js";import"./ElevationInfo-e9f55e40.js";var d;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=d=class extends N(q(L(I(A(k(D(M(O(J(j(C(P)))))))))))){constructor(...r){super(...r),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}load(r){const e=r!=null?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch($).then(()=>this._fetchService(e))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=(e=this.parsedUrl)==null?void 0:e.path.toLowerCase();return r?this._getDefaultAttribution(this._getMapName(r)):null}readSpatialReference(r,e){var t;return(r=r||((t=e.tileInfo)==null?void 0:t.spatialReference))&&v.fromJSON(r)}writeSublayers(r,e,t,o){if(!this.loaded||!r)return;const n=r.slice().reverse().flatten(({sublayers:a})=>a&&a.toArray().reverse()).toArray(),l=[],m={writeSublayerStructure:!1,...o};n.forEach(a=>{const h=a.write({},m);l.push(h)}),l.some(a=>Object.keys(a).length>1)&&(e.layers=l)}get tileServers(){var r;return this._getDefaultTileServers((r=this.parsedUrl)==null?void 0:r.path)}castTileServers(r){return Array.isArray(r)?r.map(e=>S(e).path):null}fetchTile(r,e,t,o={}){const{signal:n}=o,l=this.getTileUrl(r,e,t),m={responseType:"image",signal:n,query:{...this.refreshParameters}};return c(l,m).then(a=>a.data)}async fetchImageBitmapTile(r,e,t,o={}){const{signal:n}=o;if(this.fetchTile!==d.prototype.fetchTile){const h=await this.fetchTile(r,e,t,o);return y(h,r,e,t,n)}const l=this.getTileUrl(r,e,t),m={responseType:"blob",signal:n,query:{...this.refreshParameters}},{data:a}=await c(l,m);return y(a,r,e,t,n)}getTileUrl(r,e,t){var m,a;const o=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,n=T({...(m=this.parsedUrl)==null?void 0:m.query,blankTile:!o&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[e%l.length]:(a=this.parsedUrl)==null?void 0:a.path}/tile/${r}/${e}/${t}${n?"?"+n:""}`}loadAll(){return w(this,r=>{r(this.allSublayers)})}_fetchService(r){return new Promise((e,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void e({data:this.sourceJSON})}if(!this.parsedUrl)throw new u("tile-layer:undefined-url","layer's url is not defined");const o=G(this.parsedUrl.path);if(o!=null&&o.serverType==="ImageServer")throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(e,t)}).then(e=>{let t=this.url;if(e.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=e.data,this.read(e.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!V(t))return this._fetchServerVersion(t,r).then(o=>{this.read({currentVersion:o})}).catch(()=>{})})}_fetchServerVersion(r,e){if(!E(r))return Promise.reject();const t=r.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(o=>{if(o.data&&o.data.currentVersion)return o.data.currentVersion;throw new u("tile-layer:version-not-available")})}_getMapName(r){const e=r.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return e?e[2]:void 0}_getDefaultAttribution(r){if(r==null)return null;let e;r=r.toLowerCase();for(let t=0,o=f.length;t<o;t++)if(e=f[t],e.toLowerCase().includes(r))return b("//static.arcgis.com/attribution/"+e);return null}_getDefaultTileServers(r){if(r==null)return[];const e=r.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=r.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return e||t?[r,r.replace(e?/server\.arcgisonline/i:/services\.arcgisonline/i,e?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};s([p({readOnly:!0})],i.prototype,"attributionDataUrl",null),s([p({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([p({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),s([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([p({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([p({type:Boolean})],i.prototype,"resampling",void 0),s([p()],i.prototype,"sourceJSON",void 0),s([p({type:v})],i.prototype,"spatialReference",void 0),s([U("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),s([p({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([p({readOnly:!0})],i.prototype,"sublayers",void 0),s([W("sublayers",{layers:{type:[B]}})],i.prototype,"writeSublayers",null),s([p({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([p()],i.prototype,"tileServers",null),s([R("tileServers")],i.prototype,"castTileServers",null),s([p({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([p(x)],i.prototype,"url",void 0),i=d=s([_("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const vt=i;export{vt as default};
