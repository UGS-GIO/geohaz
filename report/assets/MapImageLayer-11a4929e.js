import{e as o,c as I,T as $}from"./subclass-f7409b1b.js";import{U as g}from"./request-a10d6950.js";import{c as T}from"./TimeExtent-579f0e32.js";import{a as b}from"./Error-21d1d076.js";import{t as O}from"./loadAll-19f96669.js";import{m as E}from"./MultiOriginJSONSupport-9bd581c6.js";import{p as M,b as R}from"./promiseUtils-1d963c7c.js";import{n as x,k as v,y as m}from"./JSONSupport-acf2865c.js";import"./typedArrayUtil-2af43698.js";import{M as F,o as L}from"./Extent-2b4578b8.js";import{g as P,r as U}from"./SpatialReference-428523ee.js";import{i as j}from"./scaleUtils-6415ec85.js";import{b as J}from"./Layer-668dff8a.js";import{i as N}from"./APIKeyMixin-7c0d27b5.js";import{m as q,f as A,X as _}from"./SublayersOwner-11219337.js";import{l as k}from"./ArcGISService-1a65aba0.js";import{n as V}from"./BlendLayer-2e0705c7.js";import{e as z}from"./CustomParametersMixin-882f293c.js";import{u as Z}from"./OperationalLayer-04352719.js";import{j as B}from"./PortalLayer-f8b97b56.js";import{f as C}from"./RefreshableLayer-9477518b.js";import{t as D}from"./ScaleRangeLayer-61383a56.js";import{f as G}from"./TemporalLayer-114f16ec.js";import{d as H}from"./commonProperties-0c35c2c9.js";import{m as K}from"./ExportImageParameters-4913e685.js";import{t as W}from"./imageBitmapUtils-a0aff7ad.js";import{e as S}from"./sublayerUtils-e406d910.js";import{e as X}from"./versionUtils-28beeff3.js";import{c as w}from"./date-7940da18.js";import"./timeUtils-24502426.js";import"./datetime-7e00d9ef.js";import"./Evented-b5127116.js";import"./Collection-aa6ef54b.js";import"./SimpleObservable-ae589a25.js";import"./Loadable-8a1ead8b.js";import"./Promise-ec74e14b.js";import"./time-0817624a.js";import"./cast-e7a2f9aa.js";import"./jsonMap-5ba4a9c2.js";import"./assets-6fd92e57.js";import"./mathUtils-19b6edfc.js";import"./geometry-31b45acd.js";import"./Polyline-013cde1f.js";import"./aaBoundingRect-aef00841.js";import"./Axis-30be7e73.js";import"./typeUtils-3056a943.js";import"./Identifiable-1430bdc2.js";import"./Version-ef27dfc4.js";import"./arcgisLayerUrl-0c479f71.js";import"./persistableUrlUtils-ca6bb38d.js";import"./portalItemUtils-8aceb0b8.js";import"./projection-41da473c.js";import"./projectBuffer-af7b4ad9.js";import"./zscale-d7e12601.js";import"./CollectionFlattener-1d70a253.js";import"./reactiveUtils-e7d9f86e.js";import"./PopupTemplate-18f22683.js";import"./Clonable-b71fa929.js";import"./fieldUtils-fcb2a714.js";import"./intl-fe039018.js";import"./locale-bde6d0f6.js";import"./messages-2d262041.js";import"./enumeration-4a4e87c4.js";import"./Color-e1a6dfab.js";import"./colorUtils-ac6863dc.js";import"./ClassBreaksRenderer-aa69b6ca.js";import"./symbols-b3e075ad.js";import"./TextSymbol-53669eb2.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-f0a081b4.js";import"./symbolLayerUtils3D-5b91ffd6.js";import"./aaBoundingBox-7242ce3e.js";import"./collectionUtils-b6e30316.js";import"./Portal-cb507469.js";import"./UniqueValueRenderer-983c9a3e.js";import"./diffUtils-d0e8b583.js";import"./colorRamps-bef5e122.js";import"./ColorStop-6cee3909.js";import"./visualVariableUtils-79811b9c.js";import"./Graphic-f1881791.js";import"./jsonUtils-2c7f966c.js";import"./compilerUtils-7f5a3043.js";import"./lengthUtils-1e9c410b.js";import"./styleUtils-d9ef5ac0.js";import"./layerUtils-c805b05c.js";import"./jsonUtils-7ee1282d.js";import"./LRUCache-000d0e19.js";import"./FieldsIndex-9238b8b6.js";import"./UnknownTimeZone-8ede07af.js";import"./colorUtils-f660fd36.js";import"./vec42-a95eff2d.js";import"./vec4f64-430e4feb.js";import"./utils-064c64c4.js";import"./heatmapUtils-7a838493.js";import"./SimpleRenderer-2c5d637a.js";import"./QueryTask-46d1eeb8.js";import"./infoFor3D-24efd44a.js";import"./DataLayerSource-62d0bfcf.js";import"./Field-be948aef.js";import"./fieldType-4834e8bc.js";import"./utils-3234cfff.js";import"./executeForIds-6ac7b389.js";import"./query-21390169.js";import"./normalizeUtils-059b11cb.js";import"./normalizeUtilsCommon-c4e9ddb1.js";import"./utils-ed91a700.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-06460449.js";import"./pbf-1d598563.js";import"./OptimizedGeometry-5ad221bf.js";import"./OptimizedFeature-0af09c7a.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-b694be92.js";import"./Query-aaf746b1.js";import"./executeQueryJSON-7d8733f5.js";import"./FeatureSet-32e85c3a.js";import"./executeQueryPBF-9bfb856e.js";import"./featureConversionUtils-e62978d0.js";import"./FeatureType-d0808bff.js";import"./FeatureTemplate-231bfadc.js";import"./LabelClass-bca4dcea.js";import"./defaults-473b7c21.js";import"./defaultsJSON-b087dd4d.js";import"./labelingInfo-f5739018.js";import"./LayerFloorInfo-88589fec.js";import"./serviceCapabilitiesUtils-d90db62d.js";import"./AttachmentQuery-36a8e4f4.js";import"./popupUtils-de5a8217.js";import"./mat4f32-1b45b54f.js";import"./mat4-a6ac6b0f.js";import"./PortalItem-9d3416e3.js";import"./TimeInfo-c87ecbc7.js";import"./ElevationInfo-e9f55e40.js";import"./floorFilterUtils-080a7cd2.js";let i=class extends V(G(D(q(A(k(Z(B(E(C(N(z(J)))))))))))){constructor(...t){super(...t),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},t).catch(M).then(()=>this._fetchService(e))),Promise.resolve(this)}readImageFormat(t,e){const n=e.supportedImageFormatTypes;return n&&n.includes("PNG32")?"png32":"png24"}writeSublayers(t,e,n,r){var h,c,y;if(!this.loaded||!t)return;const p=t.slice().reverse().flatten(({sublayers:s})=>s&&s.toArray().reverse()).toArray();let a=!1;if((h=this.capabilities)!=null&&h.operations.supportsExportMap&&((y=(c=this.capabilities)==null?void 0:c.exportMap)!=null&&y.supportsDynamicLayers)){const s=x(r.origin);if(s===v.PORTAL_ITEM){const f=this.createSublayersForOrigin("service").sublayers;a=S(p,f,v.SERVICE)}else if(s>v.PORTAL_ITEM){const f=this.createSublayersForOrigin("portal-item");a=S(p,f.sublayers,x(f.origin))}}const l=[],u={writeSublayerStructure:a,...r};let d=a;p.forEach(s=>{const f=s.write({},u);l.push(f),d=d||s.originOf("visible")==="user"}),l.some(s=>Object.keys(s).length>1)&&(e.layers=l),d&&(e.visibleLayers=p.filter(s=>s.visible).map(s=>s.id))}createExportImageParameters(t,e,n,r){const p=(r==null?void 0:r.pixelRatio)||1;t&&this.version>=10&&(t=t.clone().shiftCentralMeridian());const a=new K({layer:this,floors:r==null?void 0:r.floors,scale:j({extent:t,width:e})*p}),l=a.toJSON();a.destroy();const u=!(r!=null&&r.rotation)||this.version<10.3?{}:{rotation:-r.rotation},d=t==null?void 0:t.spatialReference,h=P(d);l.dpi*=p;const c={};if(r!=null&&r.timeExtent){const{start:y,end:s}=r.timeExtent.toJSON();c.time=y&&s&&y===s?""+y:`${y??"null"},${s??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(c.time="null,null");return{bbox:t&&t.xmin+","+t.ymin+","+t.xmax+","+t.ymax,bboxSR:h,imageSR:h,size:e+","+n,...l,...u,...c}}async fetchImage(t,e,n,r){const{data:p}=await this._fetchImage("image",t,e,n,r);return p}async fetchImageBitmap(t,e,n,r){const{data:p,url:a}=await this._fetchImage("blob",t,e,n,r);return W(p,a,r==null?void 0:r.signal)}async fetchRecomputedExtents(t={}){const e={...t,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:n}=await g(this.url,e),{extent:r,fullExtent:p,timeExtent:a}=n,l=r||p;return{fullExtent:l&&F.fromJSON(l),timeExtent:a&&T.fromJSON({start:a[0],end:a[1]})}}loadAll(){return O(this,t=>{t(this.allSublayers)})}serviceSupportsSpatialReference(t){return X(this,t)}async _fetchImage(t,e,n,r,p){var u,d,h;const a={responseType:t,signal:(p==null?void 0:p.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,n,r,p),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(((u=a.query)==null?void 0:u.dynamicLayers)!=null&&!((h=(d=this.capabilities)==null?void 0:d.exportMap)!=null&&h.supportsDynamicLayers))throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:a.query});try{const{data:c}=await g(l,a);return{data:c,url:l}}catch(c){throw R(c)?c:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:c})}}async _fetchService(t){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:e,ssl:n}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:t});n&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=e,this.read(e,{origin:"service",url:this.parsedUrl})}};o([m(w("dateFieldsTimeReference"))],i.prototype,"dateFieldsTimeZone",void 0),o([m({type:Boolean})],i.prototype,"datesInUnknownTimezone",void 0),o([m()],i.prototype,"dpi",void 0),o([m()],i.prototype,"gdbVersion",void 0),o([m()],i.prototype,"imageFormat",void 0),o([L("imageFormat",["supportedImageFormatTypes"])],i.prototype,"readImageFormat",null),o([m({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],i.prototype,"imageMaxHeight",void 0),o([m({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],i.prototype,"imageMaxWidth",void 0),o([m()],i.prototype,"imageTransparency",void 0),o([m({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),o([m({json:{read:!1,write:!1}})],i.prototype,"labelsVisible",void 0),o([m({type:["ArcGISMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),o([m({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),o([m(w("preferredTimeReference"))],i.prototype,"preferredTimeZone",void 0),o([m()],i.prototype,"sourceJSON",void 0),o([m({json:{write:{ignoreOrigin:!0}}})],i.prototype,"sublayers",void 0),o([U("sublayers",{layers:{type:[_]},visibleLayers:{type:[$]}})],i.prototype,"writeSublayers",null),o([m({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),o([m({json:{read:!1},readOnly:!0,value:"map-image"})],i.prototype,"type",void 0),o([m(H)],i.prototype,"url",void 0),i=o([I("esri.layers.MapImageLayer")],i);const $i=i;export{$i as default};
