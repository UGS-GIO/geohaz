import{a as j}from"./Error-21d1d076.js";function G(n,t){if(n==null)throw new Error(t??"value is None")}function H(n){return n==null||n.destroy(),null}function I(n){return n==null||n.dispose(),null}function P(n){return n==null||n.remove(),null}function J(n){return n==null||n.abort(),null}function K(n){return n==null||n.release(),null}function M(n,t,e){return n!=null&&t!=null?e!=null?e(n,t):n.equals(t):n===t}function Q(n,t){let e;return n.some((r,o)=>(e=t(r,o),e!=null)),e??void 0}const L={remove:()=>{}};function c(n){return n?{remove(){n&&(n(),n=void 0)}}:L}function S(n){n.forEach(t=>t==null?void 0:t.remove())}function R(n){return c(()=>S(n))}function C(n){return{setTimeout:(t,e)=>{const r=n.setTimeout(t,e);return c(()=>n.clearTimeout(r))}}}const k=C(globalThis);function $(n){return q(n)||T(n)}function q(n){return n!=null&&typeof n=="object"&&"on"in n&&typeof n.on=="function"}function T(n){return n!=null&&typeof n=="object"&&"addEventListener"in n&&typeof n.addEventListener=="function"}function x(n,t,e){if(!$(n))throw new TypeError("target is not a Evented or EventTarget object");return T(n)?z(n,t,e):n.on(t,e)}function z(n,t,e,r){if(Array.isArray(t)){const o=t.slice();for(const i of o)n.addEventListener(i,e,r);return c(()=>{for(const i of o)n.removeEventListener(i,e,r)})}return n.addEventListener(t,e,r),c(()=>n.removeEventListener(t,e,r))}function A(n,t,e){if(!$(n))throw new TypeError("target is not a Evented or EventTarget object");if("once"in n)return n.once(t,e);const r=x(n,t,o=>{r.remove(),e.call(n,o)});return r}function l(n="Aborted"){return new j("AbortError",n)}function g(n,t="Aborted"){if(B(n))throw l(t)}function m(n){return n instanceof AbortSignal?n:n==null?void 0:n.signal}function B(n){const t=m(n);return t!=null&&t.aborted}function U(n){if(w(n))throw n}function V(n){if(!w(n))throw n}function f(n,t){const e=m(n);if(e!=null){if(!e.aborted)return A(e,"abort",()=>t());t()}}function W(n,t){const e=m(n);if(e!=null)return g(e),A(e,"abort",()=>t(l()))}function X(n,t){return m(t)==null?n:new Promise((e,r)=>{let o=f(t,()=>r(l()));const i=()=>{o=P(o)};n.then(i,i),n.then(e,r)})}function w(n){return(n==null?void 0:n.name)==="AbortError"}async function Y(n){try{return await n}catch(t){if(!w(t))throw t;return}}async function D(n){if(!n)return;if(typeof n.forEach!="function"){const e=Object.keys(n),r=e.map(u=>n[u]),o=await D(r),i={};return e.map((u,a)=>i[u]=o[a]),i}const t=n;return Promise.allSettled(t).then(e=>Array.from(t,(r,o)=>{const i=e[o];return i.status==="fulfilled"?{promise:r,value:i.value}:{promise:r,error:i.reason}}))}async function Z(n){return(await Promise.allSettled(n)).filter(t=>t.status==="fulfilled").map(t=>t.value)}async function _(n){return(await Promise.allSettled(n)).filter(t=>t.status==="rejected").map(t=>t.reason)}function F(n,t=void 0,e){const r=new AbortController;return f(e,()=>r.abort()),new Promise((o,i)=>{let u=setTimeout(()=>{u=0,o(t)},n);f(r,()=>{u&&(clearTimeout(u),i(l()))})})}function nn(n,t){const e=new AbortController,r=setTimeout(()=>e.abort(),t);return f(n,()=>{e.abort(),clearTimeout(r)}),{...n,signal:e.signal}}function N(n){return n&&typeof n.then=="function"}function h(n){return N(n)?n:Promise.resolve(n)}function tn(n,t=-1){let e,r,o,i,u=null;const a=(...v)=>{if(e){r=v,i&&i.reject(l()),i=E();const s=i.promise;if(u){const b=u;u=null,b.abort()}return s}if(o=i||E(),i=null,t>0){const s=new AbortController;e=h(n(...v,s.signal));const b=e;F(t).then(()=>{e===b&&(i?s.abort():u=s)})}else e=1,e=h(n(...v));const p=()=>{const s=r;r=o=e=u=null,s!=null&&a(...s)},y=e,d=o;return y.then(p,p),y.then(d.resolve,d.reject),d.promise};return a}function E(){let n,t;const e=new Promise((o,i)=>{n=o,t=i}),r=o=>{n(o)};return r.resolve=o=>n(o),r.reject=o=>t(o),r.timeout=(o,i)=>k.setTimeout(()=>r.reject(i),o),r.promise=e,r}async function en(n){await Promise.resolve(),g(n)}export{F as A,m as B,h as C,en as D,nn as E,A as F,E as L,_ as P,N as S,l as a,w as b,k as c,J as d,c as e,B as f,Z as g,X as h,Y as i,$ as j,tn as k,P as l,f as m,G as n,x as o,U as p,V as q,R as r,g as s,Q as t,H as u,D as v,W as w,M as x,I as y,K as z};
