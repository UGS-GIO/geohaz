import{e as t,c as o}from"./subclass-f7409b1b.js";import"./geometry-31b45acd.js";import{y as e,f as h,S as G}from"./JSONSupport-acf2865c.js";import"./typedArrayUtil-2af43698.js";import"./Error-21d1d076.js";import{x as w}from"./Extent-2b4578b8.js";import{m as g}from"./Polyline-013cde1f.js";let a=class extends h{constructor(s){super(s),this.properties=null}};t([e({json:{write:!0}})],a.prototype,"properties",void 0),a=t([o("esri.rest.knowledgeGraph.GraphObject")],a);const y=a;let n=class extends y{constructor(s){super(s),this.typeName=null,this.id=null}};t([e({type:String,json:{write:!0}})],n.prototype,"typeName",void 0),t([e({type:String,json:{write:!0}})],n.prototype,"id",void 0),n=t([o("esri.rest.knowledgeGraph.GraphNamedObject")],n);const m=n;let l=class extends m{constructor(s){super(s),this.layoutGeometry=null}};t([e({type:w,json:{write:!0}})],l.prototype,"layoutGeometry",void 0),l=t([o("esri.rest.knowledgeGraph.Entity")],l);const I=l;let i=class extends m{constructor(r){super(r),this.originId=null,this.destinationId=null,this.layoutGeometry=null}};t([e({type:String,json:{write:!0}})],i.prototype,"originId",void 0),t([e({type:String,json:{write:!0}})],i.prototype,"destinationId",void 0),t([e({type:g,json:{write:!0}})],i.prototype,"layoutGeometry",void 0),i=t([o("esri.rest.Relationship.Relationship")],i);const R=i;let c=class extends y{constructor(r){super(r)}};c=t([o("esri.rest.knowledgeGraph.ObjectValue")],c);const N=c;let u=class extends h{constructor(s){super(s),this.path=null}};t([e({type:[y],json:{write:!0}})],u.prototype,"path",void 0),u=t([o("esri.rest.knowledgeGraph.Path")],u);const C=u;let d=class extends G{constructor(r){super(r),this.openCypherQuery=""}};t([e()],d.prototype,"openCypherQuery",void 0),d=t([o("esri.rest.knowledgeGraph.GraphQuery")],d);const v=d;let p=class extends v{constructor(r){super(r),this.bindParameters=null,this.bindGeometryQuantizationParameters=null,this.outputQuantizationParameters=null,this.outputSpatialReference=null}};t([e()],p.prototype,"bindParameters",void 0),t([e()],p.prototype,"bindGeometryQuantizationParameters",void 0),t([e()],p.prototype,"outputQuantizationParameters",void 0),t([e()],p.prototype,"outputSpatialReference",void 0),p=t([o("esri.rest.knowledgeGraph.GraphQueryStreaming")],p);const E=p;export{E as a,C as c,I as m,R as p,N as t};
