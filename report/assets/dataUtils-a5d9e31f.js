import{s as Dt}from"./jsonMap-5ba4a9c2.js";import{e as W,c as Rt}from"./subclass-f7409b1b.js";import{a as Lt,b as Nt,s as Z}from"./Error-21d1d076.js";import{y as z,f as Et}from"./JSONSupport-acf2865c.js";import{s as jt}from"./cast-e7a2f9aa.js";import"./geometry-31b45acd.js";import{h as nt,t as Ut}from"./typedArrayUtil-2af43698.js";import{h as Ot}from"./mathUtils-19b6edfc.js";import{s as Gt}from"./promiseUtils-1d963c7c.js";import{s as qt}from"./SpatialReference-428523ee.js";import{M as Wt}from"./Extent-2b4578b8.js";let gt=class{constructor(e=null,n=null,r=null){this.minValue=e,this.maxValue=n,this.noDataValue=r}};const Xt=9999999e31,zt=2e-7,Jt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function ht(t){return Jt[t]??[-34028234663852886e22,34028234663852886e22]}function $e(t,e){return t==null||e==null?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function Te(t){return((t==null?void 0:t.startsWith("s"))||(t==null?void 0:t.startsWith("u")))??!1}function Ie(t,e,n){var p,u;if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:a,pixelType:i}=t,o=r[0].length,f=t.bandMasks??[],h=t.mask??new Uint8Array(o).fill(255),s=i==="f32"||i==="f64",l=ht(i);let c=!1;for(let d=0;d<r.length;d++){const m=typeof e=="number"?e:e[d];if(m==null)continue;const x=((p=a==null?void 0:a[d])==null?void 0:p.minValue)??l[0],w=((u=a==null?void 0:a[d])==null?void 0:u.maxValue)??l[1];if(x>m+Number.EPSILON||w<m-Number.EPSILON)continue;const A=f[d]||h.slice(),k=r[d],M=n==null?void 0:n.customFloatTolerance;if(s&&M!==0){let g=M;g||(g=Math.abs(m)>=Xt?zt*Math.abs(m):i==="f32"?2**-23:Number.EPSILON);for(let y=0;y<k.length;y++)A[y]&&Math.abs(k[y]-m)<g&&(k[y]=0,A[y]=0,h[y]=0,c=!0)}else for(let g=0;g<k.length;g++)A[g]&&k[g]===m&&(k[g]=0,A[g]=0,h[g]=0,c=!0);f[d]=A}c&&(t.bandMasks=t.bandMasks||t.pixels.length>1?f:null,t.mask=h),c&&"updateStatistics"in t&&t.updateStatistics()}var K;let O=K=class extends Et{static createEmptyBand(t,e){return new(K.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let r=0;r<t.length;r++){const a=t[r];for(let i=0;i<e;i++)a[i]||(n[i]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return(t=this.pixels)==null?void 0:t.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Lt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new gt)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>this._calculateBandStatistics(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=ht(t),r=this.pixels,a=this.width*this.height,i=r.length;let o,f,h;const s=[];for(let l=0;l<i;l++){h=K.createEmptyBand(t,a),o=r[l];for(let c=0;c<a;c++)f=o[c],h[c]=f>n?n:f<e?e:f;s.push(h)}this.pixels=s,this.pixelType=t}extractBands(t){var c;const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const r=e.length,a=t.some(p=>p>=e.length),i=r===t.length&&!t.some((p,u)=>p!==u);if(a||i)return this;const o=((c=this.bandMasks)==null?void 0:c.length)===r?t.map(p=>this.bandMasks[p]):void 0;let{mask:f,validPixelCount:h}=this;const{width:s,height:l}=this;return o!=null&&o.length&&(f=K.combineBandMasks(o),h=f.filter(p=>!!p).length),new K({pixelType:this.pixelType,width:s,height:l,mask:f,bandMasks:o,validPixelCount:h,maskIsAlpha:this.maskIsAlpha,pixels:t.map(p=>e[p]),statistics:n&&t.map(p=>n[p])})}clone(){const t=new K({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(r=>new Uint8Array(r)));const n=K.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const r=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=r?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Nt(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:r,pixels:a}=this;if(!t||!(a!=null&&a.length))return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let i,o,f,h;i=o=f=a[0],a.length>=3?(o=a[1],f=a[2]):a.length===2&&(o=a[1]);const s=new Uint32Array(t),l=this.width*this.height;if(i.length===l)if(e!=null&&e.length===l)if(n)for(h=0;h<l;h++){const c=e[h];if(c){const p=c/255;s[h]=r?c<<24|f[h]*p<<16|o[h]*p<<8|i[h]*p:c<<24|f[h]<<16|o[h]<<8|i[h]}}else for(h=0;h<l;h++)e[h]&&(s[h]=255<<24|f[h]<<16|o[h]<<8|i[h]);else for(h=0;h<l;h++)s[h]=255<<24|f[h]<<16|o[h]<<8|i[h];else Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:r}=this;if(!t||!(e!=null&&e.length))return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const a=this.pixelType;let i=1,o=0,f=1;if(r&&r.length>0){for(const m of r)if(m.minValue!=null&&(o=Math.min(o,m.minValue)),m.maxValue!=null&&m.minValue!=null){const x=m.maxValue-m.minValue;f=Math.max(f,x)}i=255/f}else{let m=255;a==="s8"?(o=-128,m=127):a==="u16"?m=65535:a==="s16"?(o=-32768,m=32767):a==="u32"?m=4294967295:a==="s32"?(o=-2147483648,m=2147483647):a==="f32"?(o=-34e38,m=34e38):a==="f64"&&(o=-Number.MAX_VALUE,m=Number.MAX_VALUE),i=255/(m-o)}const h=new Uint32Array(t),s=this.width*this.height;let l,c,p,u,d;if(l=c=p=e[0],l.length!==s)return Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(c=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===s)for(u=0;u<s;u++)n[u]&&(h[u]=255<<24|(p[u]-o)*i<<16|(c[u]-o)*i<<8|(l[u]-o)*i);else for(u=0;u<s;u++)h[u]=255<<24|(p[u]-o)*i<<16|(c[u]-o)*i<<8|(l[u]-o)*i;else if(n!=null&&n.length===s)for(u=0;u<s;u++)d=(l[u]-o)*i,n[u]&&(h[u]=255<<24|d<<16|d<<8|d);else for(u=0;u<s;u++)d=(l[u]-o)*i,h[u]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!(e!=null&&e.length))return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let r,a,i,o;r=a=i=e[0],e.length>=3?(a=e[1],i=e[2]):e.length===2&&(a=e[1]);const f=this.width*this.height;if(r.length!==f)return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(n!=null&&n.length===f)for(o=0;o<f;o++)t[h++]=r[o],t[h++]=a[o],t[h++]=i[o],t[h++]=1&n[o];else for(o=0;o<f;o++)t[h++]=r[o],t[h++]=a[o],t[h++]=i[o],t[h++]=1}_calculateBandStatistics(t,e){let n=1/0,r=-1/0;const a=t.length;let i,o=0;if(e!=null)for(i=0;i<a;i++)e[i]&&(o=t[i],n=o<n?o:n,r=o>r?o:r);else for(i=0;i<a;i++)o=t[i],n=o<n?o:n,r=o>r?o:r;return new gt(n,r)}};W([z({json:{write:!0}})],O.prototype,"width",void 0),W([z({json:{write:!0}})],O.prototype,"height",void 0),W([z({json:{write:!0}})],O.prototype,"pixelType",void 0),W([jt("pixelType")],O.prototype,"castPixelType",null),W([z({json:{write:!0}})],O.prototype,"validPixelCount",void 0),W([z({json:{write:!0}})],O.prototype,"mask",void 0),W([z({json:{write:!0}})],O.prototype,"maskIsAlpha",void 0),W([z({json:{write:!0}})],O.prototype,"pixels",void 0),W([z()],O.prototype,"premultiplyAlpha",void 0),W([z({json:{write:!0}})],O.prototype,"statistics",void 0),W([z({json:{write:!0}})],O.prototype,"depthCount",void 0),W([z({json:{write:!0}})],O.prototype,"noDataValues",void 0),W([z({json:{write:!0}})],O.prototype,"bandMasks",void 0),O=K=W([Rt("esri.layers.support.PixelBlock")],O);const _=O;var xt,wt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(xt||(xt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(wt||(wt={}));const Be=6;function R(t){return t!=null&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function Se(t){var l;if(!(t!=null&&t.length)||t.some(c=>!R(c)))return null;if(t.length===1)return((l=t[0])==null?void 0:l.clone())??null;const e=t,{width:n,height:r,pixelType:a}=e[0];if(e.some(c=>c.width!==n||c.height!==r))return null;const i=e.map(({mask:c})=>c).filter(c=>c!=null);let o=null;i.length&&(o=new Uint8Array(n*r),o.set(i[0]),i.length>1&&$t(i.slice(1),o));const f=[];e.forEach(({pixels:c})=>f.push(...c));const h=e.map(({statistics:c})=>c).filter(c=>c==null?void 0:c.length),s=[];return h.forEach(c=>s.push(...c)),new _({pixelType:a,width:n,height:r,mask:o,pixels:f,statistics:s.length?s:null})}function Ce(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((c,p)=>c[0]-p[0]);let r=0;n[0][0]<0&&(r=n[0][0]);const a=Math.max(256,n[n.length-1][0]-r+1),i=new Uint8Array(4*a),o=[];let f,h=0,s=0;const l=n[0].length===5;if(a>65536)return n.forEach(c=>{o[c[0]-r]=l?c.slice(1):c.slice(1).concat([255])}),{indexed2DColormap:o,offset:r,alphaSpecified:l};if(t.fillUnspecified)for(f=n[s],h=f[0]-r;h<a;h++)i[4*h]=f[1],i[4*h+1]=f[2],i[4*h+2]=f[3],i[4*h+3]=l?f[4]:255,h===f[0]-r&&(f=s===n.length-1?f:n[++s]);else for(h=0;h<n.length;h++)f=n[h],s=4*(f[0]-r),i[s]=f[1],i[s+1]=f[2],i[s+2]=f[3],i[s+3]=l?f[4]:255;return{indexedColormap:i,offset:r,alphaSpecified:l}}function Fe(t,e){if(!R(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),r=n.pixels;let a=n.mask;const i=n.width*n.height;if(r.length!==1)return t;const{indexedColormap:o,indexed2DColormap:f,offset:h,alphaSpecified:s}=e;let l=0;const c=r[0],p=new Uint8Array(c.length),u=new Uint8Array(c.length),d=new Uint8Array(c.length);let m,x=0;if(o){const w=o.length-1;if(a!=null)for(l=0;l<i;l++)a[l]&&(x=4*(c[l]-h),x<h||x>w?a[l]=0:(p[l]=o[x],u[l]=o[x+1],d[l]=o[x+2],a[l]=o[x+3]));else{for(a=new Uint8Array(i),l=0;l<i;l++)x=4*(c[l]-h),x<h||x>w?a[l]=0:(p[l]=o[x],u[l]=o[x+1],d[l]=o[x+2],a[l]=o[x+3]);n.mask=a}}else if(f)if(a!=null)for(l=0;l<i;l++)a[l]&&(m=f[c[l]],p[l]=m[0],u[l]=m[1],d[l]=m[2],a[l]=m[3]);else{for(a=new Uint8Array(i),l=0;l<i;l++)m=f[c[l]],p[l]=m[0],u[l]=m[1],d[l]=m[2],a[l]=m[3];n.mask=a}return n.pixels=[p,u,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=s,n}function Ve(t,e){if(!R(t))return null;const{pixels:n,mask:r}=t,a=n.length;let i=e.lut;const{offset:o}=e;i&&i[0].length===1&&(i=n.map(()=>i));const f=[],h=e.outputPixelType||"u8";for(let l=0;l<a;l++){const c=Pt(n[l],r,i[l],o||0,h);f.push(c)}const s=new _({width:t.width,height:t.height,pixels:f,mask:r,pixelType:h});return s.updateStatistics(),s}function Pt(t,e,n,r,a){const i=t.length,o=_.createEmptyBand(a,i);if(e)for(let f=0;f<i;f++)e[f]&&(o[f]=n[t[f]-r]);else for(let f=0;f<i;f++)o[f]=n[t[f]-r];return o}function _e(t,e){if(!R(t))return null;const n=t.clone(),{pixels:r}=n,a=n.width*n.height,i=e.length,o=Math.floor(i/2),f=e[Math.floor(o)],h=r[0];let s,l,c,p,u,d,m=!1;const x=new Uint8Array(a),w=new Uint8Array(a),A=new Uint8Array(a);let k=n.mask;const M=e[0].mappedColor.length===4;for(k||(k=new Uint8Array(a),k.fill(M?255:1),n.mask=k),u=0;u<a;u++)if(k[u]){for(s=h[u],m=!1,d=o,l=f,c=0,p=i-1;p-c>1;){if(s===l.value){m=!0;break}s>l.value?c=d:p=d,d=Math.floor((c+p)/2),l=e[Math.floor(d)]}m||(s===e[c].value?(l=e[c],m=!0):s===e[p].value?(l=e[p],m=!0):s<e[c].value?(m=!1,l=null):s>e[c].value&&(s<e[p].value?(l=e[c],m=!0):p===i-1?(m=!1,l=null):(l=e[p],m=!0))),m?(x[u]=l.mappedColor[0],w[u]=l.mappedColor[1],A[u]=l.mappedColor[2],k[u]=l.mappedColor[3]):x[u]=w[u]=A[u]=k[u]=0}return n.pixels=[x,w,A],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function De(t,e){if(!R(t))return null;const{width:n,height:r}=t,{inputRanges:a,outputValues:i,outputPixelType:o,noDataRanges:f,allowUnmatched:h,isLastInputRangeInclusive:s}=e,l=t.pixels[0],c=_.createEmptyBand(o,l.length),p=t.mask,u=new Uint8Array(n*r);p?u.set(p):u.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,m=a.map(M=>M-d);m[0]=a[0],m[m.length-1]=a[a.length-1]+(s?1e-6:0);const x=a.length/2,[w,A]=ht(o);for(let M=0;M<r;M++)for(let g=0;g<n;g++){const y=M*n+g;if(u[y]){const v=l[y];let b=!1;for(let $=x-1;$>=0;$--)if(v===m[2*$]||v>m[2*$]&&v<m[2*$+1]){c[y]=i[$],b=!0;break}b||(h?c[y]=v>A?A:v<w?w:v:u[y]=0)}}const k=f==null?void 0:f.length;if(k)for(let M=0;M<r;M++)for(let g=0;g<n;g++){const y=M*n+g;if(!p||p[y]){const v=l[y];for(let b=0;b<k;b+=2)if(v>=f[b]&&v<=f[b+1]){c[y]=0,u[y]=0;break}}}return new _({width:n,height:r,pixelType:o,pixels:[c],mask:u})}function yt(t,e,n,r){const a=n!=null&&n.length>=2?new Set(n):null,i=(n==null?void 0:n.length)===1?n[0]:null,o=!!(e!=null&&e.length);for(let f=0;f<t.length;f++)if(r[f]){const h=t[f];if(o){let s=!1;for(let l=0;l<e.length;l+=2)if(h>=e[l]&&h<=e[l+1]){s=!0;break}s||(r[f]=0)}r[f]&&(h===i||a!=null&&a.has(h))&&(r[f]=0)}}function kt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let a=!1;for(let i=0;i<t.length;i++)if(t[i][r]){a=!0;break}a||(e[r]=0)}}function $t(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let a=!1;for(let i=0;i<t.length;i++)if(t[i][r]===0){a=!0;break}a&&(e[r]=0)}}function Re(t,e){if(!R(t))return null;const{width:n,height:r,pixels:a}=t,i=n*r,o=new Uint8Array(i);t.mask?o.set(t.mask):o.fill(255);const f=a.length,{includedRanges:h,noDataValues:s,outputPixelType:l,matchAll:c,lookups:p}=e;if(p){const u=[];for(let d=0;d<f;d++){const m=p[d],x=Pt(a[d],o,m.lut,m.offset||0,"u8");u.push(x)}u.length===1?o.set(u[0]):c?kt(u,o):$t(u,o)}else if(c){const u=[];for(let d=0;d<f;d++){const m=new Uint8Array(i);m.set(o),yt(a[d],h==null?void 0:h.slice(2*d,2*d+2),s==null?void 0:s[d],m),u.push(m)}u.length===1?o.set(u[0]):kt(u,o)}else for(let u=0;u<f;u++)yt(a[u],h==null?void 0:h.slice(2*u,2*u+2),s==null?void 0:s[u],o);return new _({width:n,height:r,pixelType:l,pixels:a,mask:o})}function Le(t){const{srcPixelType:e,inputRanges:n,outputValues:r,allowUnmatched:a,noDataRanges:i,isLastInputRangeInclusive:o,outputPixelType:f}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const h=e.includes("16")?65536:256,s=e.includes("s")?-h/2:0,l=_.createEmptyBand(f,h),c=new Uint8Array(h);a&&c.fill(255);const[p,u]=ht(f);if(n!=null&&n.length&&(r!=null&&r.length)){const m=n.map(x=>x-1e-6);m[0]=n[0],o&&(m[m.length-1]=n[n.length-1]);for(let x=0;x<m.length;x++){const w=r[x]>u?u:r[x]<p?p:r[x],A=Math.ceil(m[2*x]-s),k=Math.floor(m[2*x+1]-s);for(let M=A;M<=k;M++)l[M]=w,c[M]=255}}if(i!=null&&i.length)for(let d=0;d<i.length;d++){const m=Math.ceil(i[2*d]-s),x=Math.floor(i[2*d+1]-s);for(let w=m;w<=x;w++)c[w]=0}return{lut:l,offset:s,mask:c}}function Ne(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const r=t.includes("16")?65536:256,a=t.includes("s")?-r/2:0,i=new Uint8Array(r);if(e)for(let o=0;o<e.length;o++){const f=Math.ceil(e[2*o]-a),h=Math.floor(e[2*o+1]-a);for(let s=f;s<=h;s++)i[s]=255}else i.fill(255);if(n)for(let o=0;o<n.length;o++)i[n[o]-a]=0;return{lut:i,offset:a}}function Ht(t,e,n,r,a,i,o,f){return{xmin:a<=n*t?0:a<n*t+t?a-n*t:t,ymin:i<=r*e?0:i<r*e+e?i-r*e:e,xmax:a+o<=n*t?0:a+o<n*t+t?a+o-n*t:t,ymax:i+f<=r*e?0:i+f<r*e+e?i+f-r*e:e}}function Ee(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if((n==null?void 0:n.pixelBlock)==null)return null;const r=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,a=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,i=.01*Math.min(r,a),o=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>i?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>i?d.extent.xmin-m.extent.xmin:0),f=Math.min.apply(null,o.map(d=>d.extent.xmin)),h=Math.min.apply(null,o.map(d=>d.extent.ymin)),s=Math.max.apply(null,o.map(d=>d.extent.xmax)),l=Math.max.apply(null,o.map(d=>d.extent.ymax)),c={x:Math.round((e.xmin-f)/r),y:Math.round((l-e.ymax)/a)},p={width:Math.round((s-f)/r),height:Math.round((l-h)/a)},u={width:Math.round((e.xmax-e.xmin)/r),height:Math.round((e.ymax-e.ymin)/a)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==o.length||c.x<0||c.y<0||p.width<u.width||p.height<u.height?null:{extent:e,pixelBlock:Kt(o.map(d=>d.pixelBlock),p,{clipOffset:c,clipSize:u})}}function ft(t,e,n,r,a,i){const{width:o,height:f}=n.block,{x:h,y:s}=n.offset,{width:l,height:c}=n.mosaic,p=Ht(o,f,r,a,h,s,l,c);let u=0,d=0;if(i){const m=i.hasGCSSShiftTransform?360:i.halfWorldWidth??0,x=o*i.resolutionX,w=i.startX+r*x;w<m&&w+x>m?d=i.rightPadding:w>=m&&(u=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let m=p.ymin;m<p.ymax;m++){const x=(a*f+m-s)*l+(r*o-h)+u,w=m*o;for(let A=p.xmin;A<p.xmax;A++)t[x+A]=e[w+A]}else for(let m=p.ymin;m<p.ymax;m++){const x=(a*f+m-s)*l+(r*o-h)+u;for(let w=p.xmin;w<p.xmax;w++)t[x+w]=e}}function Kt(t,e,n={}){var T;const{clipOffset:r,clipSize:a,alignmentInfo:i,blockWidths:o}=n;if(o)return Qt(t,e,{blockWidths:o});const f=t.find(P=>R(P));if(f==null)return null;const h=a?a.width:e.width,s=a?a.height:e.height,l=f.width,c=f.height,p=e.width/l,u=e.height/c,d={offset:r||{x:0,y:0},mosaic:a||e,block:{width:l,height:c}},m=f.pixelType,x=_.getPixelArrayConstructor(m),w=f.pixels.length,A=[];let k,M;for(let P=0;P<w;P++){M=new x(h*s);for(let U=0;U<u;U++)for(let I=0;I<p;I++){const C=t[U*p+I];R(C)&&(k=C.pixels[P],ft(M,k,d,I,U,i))}A.push(M)}const g=t.some(P=>P==null||P.mask!=null&&P.mask.length>0),y=t.some(P=>(P==null?void 0:P.bandMasks)&&P.bandMasks.length>1),v=g?new Uint8Array(h*s):void 0,b=y?[]:void 0;if(v){for(let P=0;P<u;P++)for(let U=0;U<p;U++){const I=t[P*p+U],C=I!=null?I.mask:null;ft(v,C??(I?255:0),d,U,P,i)}if(b)for(let P=0;P<w;P++){const U=new Uint8Array(h*s);for(let I=0;I<u;I++)for(let C=0;C<p;C++){const S=t[I*p+C],B=((T=S==null?void 0:S.bandMasks)==null?void 0:T[P])??(S==null?void 0:S.mask);ft(U,B??(S?255:0),d,C,I,i)}b.push(U)}}const $=new _({width:h,height:s,pixels:A,pixelType:m,bandMasks:b,mask:v});return $.updateStatistics(),$}function Qt(t,e,n){var x;const r=t.find(w=>w!=null);if(r==null)return null;const a=t.some(w=>w==null||!!w.mask),{width:i,height:o}=e,f=a?new Uint8Array(i*o):null,{blockWidths:h}=n,s=[],l=r.getPlaneCount(),c=_.getPixelArrayConstructor(r.pixelType);if(a)for(let w=0,A=0;w<t.length;A+=h[w],w++){const k=t[w];if(!R(k))continue;const M=k.mask;for(let g=0;g<o;g++)for(let y=0;y<h[w];y++)f[g*i+y+A]=M==null?255:M[g*k.width+y]}const p=t.some(w=>(w==null?void 0:w.bandMasks)&&w.bandMasks.length>1),u=p?[]:void 0,d=i*o;for(let w=0;w<l;w++){const A=new c(d),k=p?new Uint8Array(d):void 0;for(let M=0,g=0;M<t.length;g+=h[M],M++){const y=t[M];if(!R(y))continue;const v=y.pixels[w];if(v!=null){for(let b=0;b<o;b++)for(let $=0;$<h[M];$++)A[b*i+$+g]=v[b*y.width+$];if(k){const b=((x=y.bandMasks)==null?void 0:x[w])??y.mask;for(let $=0;$<o;$++)for(let T=0;T<h[M];T++)k[$*i+T+g]=b?b[$*y.width+T]:255}}}s.push(A),u&&k&&u.push(k)}const m=new _({width:i,height:o,mask:f,bandMasks:u,pixels:s,pixelType:r.pixelType});return m.updateStatistics(),m}function je(t,e,n){if(!R(t))return null;const{width:r,height:a}=t,i=e.x,o=e.y,f=n.width+i,h=n.height+o;if(i<0||o<0||f>r||h>a||i===0&&o===0&&f===r&&h===a)return t;t.mask||(t.mask=new Uint8Array(r*a));const s=t.mask;for(let l=0;l<a;l++){const c=l*r;for(let p=0;p<r;p++)s[c+p]=l<o||l>=h||p<i||p>=f?0:1}return t.updateStatistics(),t}function Yt(t){if(!R(t))return null;const e=t.clone(),{width:n,height:r,pixels:a}=t,i=a[0],o=e.pixels[0],f=t.mask;for(let h=2;h<r-1;h++){const s=new Map;for(let c=h-2;c<h+2;c++)for(let p=0;p<4;p++){const u=c*n+p;lt(s,i[u],f?f[u]:1)}o[h*n]=Mt(s),o[h*n+1]=o[h*n+2]=o[h*n];let l=3;for(;l<n-1;l++){let c=(h-2)*n+l+1;lt(s,i[c],f?f[c]:1),c=(h-1)*n+l+1,lt(s,i[c],f?f[c]:1),c=h*n+l+1,lt(s,i[c],f?f[c]:1),c=(h+1)*n+l+1,lt(s,i[c],f?f[c]:1),c=(h-2)*n+l-3,rt(s,i[c],f?f[c]:1),c=(h-1)*n+l-3,rt(s,i[c],f?f[c]:1),c=h*n+l-3,rt(s,i[c],f?f[c]:1),c=(h+1)*n+l-3,rt(s,i[c],f?f[c]:1),o[h*n+l]=Mt(s)}o[h*n+l+1]=o[h*n+l]}for(let h=0;h<n;h++)o[h]=o[n+h]=o[2*n+h],o[(r-1)*n+h]=o[(r-2)*n+h];return e.updateStatistics(),e}function Mt(t){if(t.size===0)return 0;let e=0,n=-1,r=0;const a=t.keys();let i=a.next();for(;!i.done;)r=t.get(i.value),r>e&&(n=i.value,e=r),i=a.next();return n}function rt(t,e,n){if(n===0)return;const r=t.get(e);r===1?t.delete(e):t.set(e,r-1)}function lt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function Tt(t,e,n){let{x:r,y:a}=e;const{width:i,height:o}=n;if(r===0&&a===0&&o===t.height&&i===t.width)return t;const{width:f,height:h}=t,s=Math.max(0,a),l=Math.max(0,r),c=Math.min(r+i,f),p=Math.min(a+o,h);if(c<0||p<0||!R(t))return null;r=Math.max(0,-r),a=Math.max(0,-a);const{pixels:u}=t,d=i*o,m=u.length,x=[];for(let M=0;M<m;M++){const g=u[M],y=_.createEmptyBand(t.pixelType,d);for(let v=s;v<p;v++){const b=v*f;let $=(v+a-s)*i+r;for(let T=l;T<c;T++)y[$++]=g[b+T]}x.push(y)}const w=new Uint8Array(d),A=t.mask;for(let M=s;M<p;M++){const g=M*f;let y=(M+a-s)*i+r;for(let v=l;v<c;v++)w[y++]=A?A[g+v]:1}const k=new _({width:n.width,height:n.height,pixelType:t.pixelType,pixels:x,mask:w});return k.updateStatistics(),k}function It(t,e=!0){if(!R(t))return null;const{pixels:n,width:r,height:a,mask:i,pixelType:o}=t,f=[],h=Math.round(r/2),s=Math.round(a/2),l=a-1,c=r-1;for(let u=0;u<n.length;u++){const d=n[u],m=_.createEmptyBand(o,h*s);let x=0;for(let w=0;w<a;w+=2)for(let A=0;A<r;A+=2){const k=d[w*r+A];if(e){const M=A===c?k:d[w*r+A+1],g=w===l?k:d[w*r+A+r],y=A===c?g:w===l?M:d[w*r+A+r+1];m[x++]=(k+M+g+y)/4}else m[x++]=k}f.push(m)}let p=null;if(i!=null){p=new Uint8Array(h*s);let u=0;for(let d=0;d<a;d+=2)for(let m=0;m<r;m+=2){const x=i[d*r+m];if(e){const w=m===c?x:i[d*r+m+1],A=d===l?x:i[d*r+m+r],k=m===c?A:d===l?w:i[d*r+m+r+1];p[u++]=x*w*A*k?1:0}else p[u++]=x}}return new _({width:h,height:s,pixelType:o,pixels:f,mask:p})}function Oe(t,e,n=0,r=!0){if(!R(t))return null;const{width:a,height:i}=e;let{width:o,height:f}=t;const h=new Map,s={x:0,y:0},l=1+n;let c=t;for(let p=0;p<l;p++){const u=Math.ceil(o/a),d=Math.ceil(f/i);for(let m=0;m<d;m++){s.y=m*i;for(let x=0;x<u;x++){s.x=x*a;const w=Tt(c,s,e);h.set(`${p}/${m}/${x}`,w)}}p<l-1&&(c=It(c,r)),o=Math.round(o/2),f=Math.round(f/2)}return h}function Ge(t){const{pixelBlock:e,tileSize:n,level:r,row:a,col:i,useBilinear:o}=t;if(!R(e))return null;const{width:f,height:h}=n,s=2**r,l=s*f,c=s*h;let p=Tt(e,{y:a*c,x:i*l},{width:l,height:c});if(!p)return null;for(let u=r;u>0;u--)p=It(p,o);return p}function Bt(t,e,n,r,a=0){const{width:i,height:o}=t,{width:f,height:h}=e,s=r.cols,l=r.rows,c=Math.ceil(f/s-.1/s),p=Math.ceil(h/l-.1/l);let u,d,m,x,w,A,k;const M=c*s,g=M*p*l,y=new Float32Array(g),v=new Float32Array(g),b=new Uint32Array(g),$=new Uint32Array(g);let T,P,U=0;for(let I=0;I<p;I++)for(let C=0;C<c;C++){u=12*(I*c+C),d=n[u],m=n[u+1],x=n[u+2],w=n[u+3],A=n[u+4],k=n[u+5];for(let S=0;S<l;S++){U=(I*l+S)*M+C*s,P=(S+.5)/l;for(let B=0;B<S;B++)T=(B+.5)/s,y[U+B]=(d*T+m*P+x)*i+a,v[U+B]=(w*T+A*P+k)*o+a,b[U+B]=Math.floor(y[U+B]),$[U+B]=Math.floor(v[U+B])}u+=6,d=n[u],m=n[u+1],x=n[u+2],w=n[u+3],A=n[u+4],k=n[u+5];for(let S=0;S<l;S++){U=(I*l+S)*M+C*s,P=(S+.5)/l;for(let B=S;B<s;B++)T=(B+.5)/s,y[U+B]=(d*T+m*P+x)*i+a,v[U+B]=(w*T+A*P+k)*o+a,b[U+B]=Math.floor(y[U+B]),$[U+B]=Math.floor(v[U+B])}}return{offsets_x:y,offsets_y:v,offsets_xi:b,offsets_yi:$,gridWidth:M}}function qe(t,e){const{coefficients:n,spacing:r}=e,{offsets_x:a,offsets_y:i,gridWidth:o}=Bt(t,t,n,{rows:r[0],cols:r[1]}),{width:f,height:h}=t,s=new Float32Array(f*h),l=180/Math.PI;for(let c=0;c<h;c++)for(let p=0;p<f;p++){const u=c*o+p,d=c===0?u:u-o,m=c===h-1?u:u+o,x=a[d]-a[m],w=i[m]-i[d];if(isNaN(x)||isNaN(w))s[c*f+p]=90;else{let A=Math.atan2(w,x)*l;A=(360+A)%360,s[c*f+p]=A}}return s}function We(t,e,n,r,a="nearest"){if(!R(t))return null;a==="majority"&&(t=Yt(t));const{pixels:i,mask:o,bandMasks:f,pixelType:h}=t,s=t.width,l=t.height,c=_.getPixelArrayConstructor(h),p=i.length,{width:u,height:d}=e;let m=!1;for(let U=0;U<n.length;U+=3)n[U]===-1&&n[U+1]===-1&&n[U+2]===-1&&(m=!0);const{offsets_x:x,offsets_y:w,offsets_xi:A,offsets_yi:k,gridWidth:M}=Bt({width:s,height:l},e,n,r,a==="majority"?.5:0);let g;const y=(U,I,C,S)=>{const B=U instanceof Float32Array||U instanceof Float64Array?0:.5;for(let F=0;F<d;F++){g=F*M;for(let V=0;V<u;V++){if(x[g]<0||w[g]<0)U[F*u+V]=0;else if(S)U[F*u+V]=I[A[g]+k[g]*s];else{const E=Math.floor(x[g]),q=Math.floor(w[g]),L=Math.ceil(x[g]),G=Math.ceil(w[g]),X=x[g]-E,H=w[g]-q;if(!C||C[E+q*s]&&C[L+q*s]&&C[E+G*s]&&C[L+G*s]){const et=(1-X)*I[E+q*s]+X*I[L+q*s],Q=(1-X)*I[E+G*s]+X*I[L+G*s];U[F*u+V]=(1-H)*et+H*Q+B}else U[F*u+V]=I[A[g]+k[g]*s]}g++}}},v=[];let b;const $=(f==null?void 0:f.length)===p,T=[];for(let U=0;U<p;U++){if($){const I=new Uint8Array(u*d);y(I,f[U],f[U],!0),T.push(I)}b=new c(u*d),y(b,i[U],$?f[U]:o,a==="nearest"||a==="majority"),v.push(b)}const P=new _({width:u,height:d,pixelType:h,pixels:v,bandMasks:$?T:void 0});if(o!=null)P.mask=new Uint8Array(u*d),y(P.mask,o,o,!0);else if(m){P.mask=new Uint8Array(u*d);for(let U=0;U<u*d;U++)P.mask[U]=x[U]<0||w[U]<0?0:1}return P.updateStatistics(),P}const tt=new Map;tt.set("meter-per-second",1),tt.set("kilometer-per-hour",.277778),tt.set("knots",.514444),tt.set("feet-per-second",.3048),tt.set("mile-per-hour",.44704);const pt=180/Math.PI,dt=5,at=new Dt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function mt(t,e){return tt.get(t)/tt.get(e)||1}function St(t){return(450-t)%360}function Ct(t,e="geographic"){const[n,r]=t,a=Math.sqrt(n*n+r*r);let i=Math.atan2(r,n)*pt;return i=(360+i)%360,e==="geographic"&&(i=St(i)),[a,i]}function Ft(t,e="geographic"){let n=t[1];e==="geographic"&&(n=St(n)),n%=360;const r=t[0];return[r*Math.cos(n/pt),r*Math.sin(n/pt)]}function Xe(t,e,n,r="geographic"){if(!R(t)||n==null)return t;const a=e==="vector-magdir"?t.clone():At(t,e),i=a.pixels[1];for(let o=0;o<i.length;o++)i[o]=r==="geographic"?(i[o]+n[o]+270)%360:(i[o]+360-n[o])%360;return e==="vector-magdir"?a:At(a,"vector-magdir")}function At(t,e,n="geographic",r=1){if(!R(t))return t;const{pixels:a,width:i,height:o}=t,f=i*o,h=a[0],s=a[1],l=t.pixelType.startsWith("f")?t.pixelType:"f32",c=_.createEmptyBand(l,f),p=_.createEmptyBand(l,f);let u=0;for(let m=0;m<o;m++)for(let x=0;x<i;x++)e==="vector-uv"?([c[u],p[u]]=Ct([h[u],s[u]],n),c[u]*=r):([c[u],p[u]]=Ft([h[u],s[u]],n),c[u]*=r,p[u]*=r),u++;const d=new _({pixelType:l,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[c,p]});return d.updateStatistics(),d}function ze(t,e,n=1){if(n===1||!R(t))return t;const r=t.clone(),{pixels:a,width:i,height:o}=r,f=a[0],h=a[1];let s=0;for(let l=0;l<o;l++)for(let c=0;c<i;c++)e==="vector-uv"?(f[s]*=n,h[s]*=n):f[s]*=n,s++;return r.updateStatistics(),r}function Je(t,e,n,r,a){if(a==null||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const i=a.xmin,o=a.ymax,f=(t.xmax-t.xmin)/e*r,h=(t.ymax-t.ymin)/n*r,s=(f+h)/2;return t.xmin=i+Math.floor((t.xmin-i)/f)*f,t.xmax=i+Math.ceil((t.xmax-i)/f)*f,t.ymin=o+Math.floor((t.ymin-o)/h)*h,t.ymax=o+Math.ceil((t.ymax-o)/h)*h,{extent:t,width:Math.round(t.width/f),height:Math.round(t.height/h),resolution:s}}const Zt=Vt(0,0,0);function Vt(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const a=r?-1:1,i=13*a,o=-7*a,f=-2*a,h=-16*a,s=21.75,[l,c]=j(0,e+i,n,s),[p,u]=j(t-5.5,e+o,n,s),[d,m]=j(t+5.5,e+o,n,s),[x,w]=j(t-1.5,e+f,n,s),[A,k]=j(t+1.5,e+f,n,s),[M,g]=j(t-1.5,e+h,n,s),[y,v]=j(t+1.5,e+h,n,s);return[l,c,p,u,x,w,A,k,d,m,M,g,y,v]}function te(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,a=n?-1:1,i=5*a,o=20*a,f=25*a,h=45,s=0,l=0,c=2,p=0,u=c*a,d=n?1:-1,m=r/2*d;let[x,w]=[s+m,l-o],[A,k]=[x+c*d,w],[M,g]=[A-p*d,k+u],[y,v]=[s-m,l-f],[b,$]=[y+p*d,v-u],T=Math.ceil(t/dt),P=Math.floor(T/10);T-=8*P;const U=[],I=[];for(let X=0;X<T/2;X++,P--){P<=0&&T%2==1&&X===(T-1)/2&&(y=s,b=y+p*d,v=(v+w)/2,$=v-u);const[H,et]=j(y,v,e,h);if(P>0){const[Q,it]=j(A,v,e,h),[st,D]=j(x,w,e,h);U.push(Q),U.push(it),U.push(H),U.push(et),U.push(st),U.push(D)}else{const[Q,it]=j(A,k,e,h),[st,D]=j(M,g,e,h),[N,ct]=j(b,$,e,h);I.push(H),I.push(et),I.push(N),I.push(ct),I.push(st),I.push(D),I.push(Q),I.push(it)}v+=i,w+=i,k+=i,g+=i,$+=i}const[C,S]=j(s+m,l+o,e,h),B=(r/2+c)*d,[F,V]=j(s+B,l+o,e,h),[E,q]=j(s+m,l-f,e,h),[L,G]=j(s+B,l-f,e,h);return{pennants:U,barbs:I,shaft:[C,S,F,V,E,q,L,G]}}function j(t,e,n,r=1){const a=Math.sqrt(t*t+e*e)/r,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[a,(2*Math.PI+i-n)%(2*Math.PI)]}const ot=[0,1,3,6,10,16,21,27,33,40,47,55,63],ee=[0,.5,1,1.5,2],ne=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(t,e,n,r){const a=mt(r||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*a)break}else if(t<=e[i]*a)break;return Math.min(i-1,e.length-2)}function ie(t,e,n,r,a){let i=0;switch(e){case"beaufort_kn":i=Y(t,ot,"knots",n);break;case"beaufort_km":i=Y(t,ot,"kilometer-per-hour",n);break;case"beaufort_ft":i=Y(t,ot,"feet-per-second",n);break;case"beaufort_m":i=Y(t,ot,"meter-per-second",n);break;case"classified_arrow":i=Y(t,a??[],r,n);break;case"ocean_current_m":i=Y(t,ee,"meter-per-second",n);break;case"ocean_current_kn":i=Y(t,ne,"knots",n)}return i}function se(t,e){const{style:n,inputUnit:r,outputUnit:a,breakValues:i}=e,o=at.fromJSON(r),f=at.fromJSON(a),h=7*6,s=15;let l=0,c=0;const{width:p,height:u,mask:d}=t,m=t.pixels[0],x=t.pixels[1],w=d!=null?d.filter(g=>g>0).length:p*u,A=new Float32Array(w*h),k=new Uint32Array(s*w),M=e.invertDirection?Vt(0,0,0,!1):Zt;for(let g=0;g<u;g++)for(let y=0;y<p;y++){const v=g*p+y;if(!d||d[g*p+y]){const b=(x[v]+360)%360/180*Math.PI,$=ie(m[v],n,o,f,i);for(let P=0;P<M.length;P+=2)A[l++]=(y+.5)/p,A[l++]=(g+.5)/u,A[l++]=M[P],A[l++]=M[P+1]+b,A[l++]=$,A[l++]=m[v];const T=7*(l/h-1);k[c++]=T,k[c++]=T+1,k[c++]=T+2,k[c++]=T+0,k[c++]=T+4,k[c++]=T+3,k[c++]=T+0,k[c++]=T+2,k[c++]=T+3,k[c++]=T+2,k[c++]=T+5,k[c++]=T+3,k[c++]=T+5,k[c++]=T+6,k[c++]=T+3}}return{vertexData:A,indexData:k}}const ut=[];function le(t,e){if(ut.length===0)for(let u=0;u<30;u++)ut.push(te(5*u,0,!e.invertDirection));const n=mt(at.fromJSON(e.inputUnit),"knots"),{width:r,height:a,mask:i}=t,o=t.pixels[0],f=t.pixels[1],h=6,s=[],l=[];let c=0,p=0;for(let u=0;u<a;u++)for(let d=0;d<r;d++){const m=u*r+d,x=o[m]*n;if((!i||i[u*r+d])&&x>=dt){const w=(f[m]+360)%360/180*Math.PI,{pennants:A,barbs:k,shaft:M}=ut[Math.min(Math.floor(x/5),29)];if(A.length+k.length===0)continue;let g=s.length/h;const y=(d+.5)/r,v=(u+.5)/a;for(let b=0;b<A.length;b+=2)s[c++]=y,s[c++]=v,s[c++]=A[b],s[c++]=A[b+1]+w,s[c++]=0,s[c++]=x;for(let b=0;b<k.length;b+=2)s[c++]=y,s[c++]=v,s[c++]=k[b],s[c++]=k[b+1]+w,s[c++]=0,s[c++]=x;for(let b=0;b<M.length;b+=2)s[c++]=y,s[c++]=v,s[c++]=M[b],s[c++]=M[b+1]+w,s[c++]=0,s[c++]=x;for(let b=0;b<A.length/6;b++)l[p++]=g,l[p++]=g+1,l[p++]=g+2,g+=3;for(let b=0;b<k.length/8;b++)l[p++]=g,l[p++]=g+1,l[p++]=g+2,l[p++]=g+1,l[p++]=g+2,l[p++]=g+3,g+=4;l[p++]=g+0,l[p++]=g+1,l[p++]=g+2,l[p++]=g+1,l[p++]=g+3,l[p++]=g+2,g+=4}}return{vertexData:new Float32Array(s),indexData:new Uint32Array(l)}}function re(t,e){let r=0,a=0;const{width:i,height:o,mask:f}=t,h=t.pixels[0],s=[],l=[],c=mt(at.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?dt:Number.MAX_VALUE;for(let u=0;u<o;u++)for(let d=0;d<i;d++){const m=h[u*i+d]*c;if((!f||f[u*i+d])&&m<p){for(let w=0;w<4;w++)s[r++]=(d+.5)/i,s[r++]=(u+.5)/o,s[r++]=w<2?-.5:.5,s[r++]=w%2==0?-.5:.5,s[r++]=0,s[r++]=m;const x=4*(r/24-1);l[a++]=x,l[a++]=x+1,l[a++]=x+2,l[a++]=x+1,l[a++]=x+2,l[a++]=x+3}}return{vertexData:new Float32Array(s),indexData:new Uint32Array(l)}}function He(t,e){return e.style==="simple_scalar"?re(t,e):e.style==="wind_speed"?le(t,e):se(t,e)}function Ke(t,e,n,r=[0,0],a=.5){const{width:i,height:o,mask:f}=t,[h,s]=t.pixels,[l,c]=r,p=Math.round((i-l)/n),u=Math.round((o-c)/n),d=p*u,m=new Float32Array(d),x=new Float32Array(d),w=new Uint8Array(d),A=e==="vector-uv";for(let M=0;M<u;M++)for(let g=0;g<p;g++){let y=0;const v=M*p+g,b=Math.max(0,M*n+c),$=Math.max(0,g*n+l),T=Math.min(o,b+n),P=Math.min(i,$+n);for(let U=b;U<T;U++)for(let I=$;I<P;I++){const C=U*i+I;if(!f||f[C]){y++;const S=A?[h[C],s[C]]:[h[C],(360+s[C])%360],[B,F]=A?S:Ft(S);m[v]+=B,x[v]+=F}}if(y>=(T-b)*(P-$)*(1-a)){w[v]=1;const[U,I]=Ct([m[v]/y,x[v]/y]);m[v]=U,x[v]=I}else w[v]=0,m[v]=0,x[v]=0}const k=new _({width:p,height:u,pixels:[m,x],mask:w});return k.updateStatistics(),k}const J=()=>Z.getLogger("esri.views.2d.engine.flow.dataUtils"),oe=10;async function Qe(t,e,n,r){const a=performance.now(),i=ae(e,n),o=performance.now(),f=ce(e,i,n.width,n.height),h=performance.now(),s=ue(f,!0),l=performance.now(),c=t==="Streamlines"?pe(s,oe):de(s),p=performance.now();return nt("esri-2d-profiler")&&(J().info("I.1","_createFlowFieldFromData (ms)",Math.round(o-a)),J().info("I.2","_getStreamlines (ms)",Math.round(h-o)),J().info("I.3","createAnimatedLinesData (ms)",Math.round(l-h)),J().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-l)),J().info("I.5","createFlowMesh (ms)",Math.round(p-a)),J().info("I.6","Mesh size (bytes)",c.vertexData.buffer.byteLength+c.indexData.buffer.byteLength)),await Promise.resolve(),Gt(r),c}function ae(t,e){const n=fe(e.data,e.width,e.height,t.smoothing);return t.interpolate?(r,a)=>{const i=Math.floor(r),o=Math.floor(a);if(i<0||i>=e.width)return[0,0];if(o<0||o>=e.height)return[0,0];const f=r-i,h=a-o,s=i,l=o,c=i<e.width-1?i+1:i,p=o<e.height-1?o+1:o,u=n[2*(l*e.width+s)],d=n[2*(l*e.width+c)],m=n[2*(p*e.width+s)],x=n[2*(p*e.width+c)],w=n[2*(l*e.width+s)+1],A=n[2*(l*e.width+c)+1];return[(u*(1-h)+m*h)*(1-f)+(d*(1-h)+x*h)*f,(w*(1-h)+n[2*(p*e.width+s)+1]*h)*(1-f)+(A*(1-h)+n[2*(p*e.width+c)+1]*h)*f]}:(r,a)=>{const i=Math.round(r),o=Math.round(a);return i<0||i>=e.width||o<0||o>=e.height?[0,0]:[n[2*(o*e.width+i)],n[2*(o*e.width+i)+1]]}}function he(t,e,n,r,a,i,o,f,h){const s=[];let l=n,c=r,p=0,[u,d]=e(l,c);u*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(u*u+d*d);let x,w;s.push({x:l,y:c,t:p,speed:m});for(let A=0;A<t.verticesPerLine;A++){let[k,M]=e(l,c);k*=t.velocityScale,M*=t.velocityScale;const g=Math.sqrt(k*k+M*M);if(g<t.minSpeedThreshold)return s;const y=k/g,v=M/g;if(l+=y*t.segmentLength,c+=v*t.segmentLength,p+=t.segmentLength/g,Math.acos(y*x+v*w)>t.maxTurnAngle)return s;if(t.collisions){const b=Math.round(l*h),$=Math.round(c*h);if(b<0||b>o-1||$<0||$>f-1)return s;const T=i[$*o+b];if(T!==-1&&T!==a)return s;i[$*o+b]=a}s.push({x:l,y:c,t:p,speed:g}),x=y,w=v}return s}function ce(t,e,n,r){const a=[],i=new Ut,o=1/Math.max(t.lineCollisionWidth,1),f=Math.round(n*o),h=Math.round(r*o),s=new Int32Array(f*h);for(let c=0;c<s.length;c++)s[c]=-1;const l=[];for(let c=0;c<r;c+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)l.push({x:p,y:c,sort:i.getFloat()});l.sort((c,p)=>c.sort-p.sort);for(const{x:c,y:p}of l)if(i.getFloat()<t.density){const u=he(t,e,c,p,a.length,s,f,h,o);if(u.length<2)continue;a.push(u)}return a}function fe(t,e,n,r){if(r===0)return t;const a=Math.round(3*r),i=new Array(2*a+1);let o=0;for(let s=-a;s<=a;s++){const l=Math.exp(-s*s/(r*r));i[s+a]=l,o+=l}for(let s=-a;s<=a;s++)i[s+a]/=o;const f=new Float32Array(t.length);for(let s=0;s<n;s++)for(let l=0;l<e;l++){let c=0,p=0;for(let u=-a;u<=a;u++){if(l+u<0||l+u>=e)continue;const d=i[u+a];c+=d*t[2*(s*e+(l+u))],p+=d*t[2*(s*e+(l+u))+1]}f[2*(s*e+l)]=c,f[2*(s*e+l)+1]=p}const h=new Float32Array(t.length);for(let s=0;s<e;s++)for(let l=0;l<n;l++){let c=0,p=0;for(let u=-a;u<=a;u++){if(l+u<0||l+u>=n)continue;const d=i[u+a];c+=d*f[2*((l+u)*e+s)],p+=d*f[2*((l+u)*e+s)+1]}h[2*(l*e+s)]=c,h[2*(l*e+s)+1]=p}return h}function ue(t,e){const n=new Ut,r=t.reduce((h,s)=>h+s.length,0),a=new Float32Array(4*r),i=new Array(t.length);let o=0,f=0;for(const h of t){const s=o;for(const l of h)a[4*o]=l.x,a[4*o+1]=l.y,a[4*o+2]=l.t,a[4*o+3]=l.speed,o++;i[f++]={startVertex:s,numberOfVertices:h.length,totalTime:h[h.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:a,lineDescriptors:i}}function pe(t,e){const{lineVertices:r,lineDescriptors:a}=t;let i=0,o=0;for(const u of a)i+=2*u.numberOfVertices,o+=6*(u.numberOfVertices-1);const f=new Float32Array(i*9),h=new Uint32Array(o);let s=0,l=0;function c(){h[l++]=s-2,h[l++]=s,h[l++]=s-1,h[l++]=s,h[l++]=s+1,h[l++]=s-1}function p(u,d,m,x,w,A,k,M){const g=s*9;let y=0;f[g+y++]=u,f[g+y++]=d,f[g+y++]=1,f[g+y++]=m,f[g+y++]=A,f[g+y++]=k,f[g+y++]=x/2,f[g+y++]=w/2,f[g+y++]=M,s++,f[g+y++]=u,f[g+y++]=d,f[g+y++]=-1,f[g+y++]=m,f[g+y++]=A,f[g+y++]=k,f[g+y++]=-x/2,f[g+y++]=-w/2,f[g+y++]=M,s++}for(const u of a){const{totalTime:d,timeSeed:m}=u;let x=null,w=null,A=null,k=null,M=null,g=null;for(let y=0;y<u.numberOfVertices;y++){const v=r[4*(u.startVertex+y)],b=r[4*(u.startVertex+y)+1],$=r[4*(u.startVertex+y)+2],T=r[4*(u.startVertex+y)+3];let P=null,U=null,I=null,C=null;if(y>0){P=v-x,U=b-w;const S=Math.sqrt(P*P+U*U);if(P/=S,U/=S,y>1){let B=P+M,F=U+g;const V=Math.sqrt(B*B+F*F);B/=V,F/=V;const E=Math.min(1/(B*P+F*U),e);B*=E,F*=E,I=-F,C=B}else I=-U,C=P;I!==null&&C!==null&&(p(x,w,A,I,C,d,m,T),c())}x=v,w=b,A=$,M=P,g=U,k=T}p(x,w,A,-g,M,d,m,k)}return{vertexData:f,indexData:h}}function de(t){const{lineVertices:a,lineDescriptors:i}=t;let o=0,f=0;for(const S of i){const B=S.numberOfVertices-1;o+=4*B*2,f+=6*B*2}const h=new Float32Array(o*16),s=new Uint32Array(f);let l,c,p,u,d,m,x,w,A,k,M,g,y,v,b=0,$=0;function T(){s[$++]=b-8,s[$++]=b-7,s[$++]=b-6,s[$++]=b-7,s[$++]=b-5,s[$++]=b-6,s[$++]=b-4,s[$++]=b-3,s[$++]=b-2,s[$++]=b-3,s[$++]=b-1,s[$++]=b-2}function P(S,B,F,V,E,q,L,G,X,H,et,Q,it,st){const D=b*16;let N=0;for(const ct of[1,2])for(const _t of[1,2,3,4])h[D+N++]=S,h[D+N++]=B,h[D+N++]=F,h[D+N++]=V,h[D+N++]=L,h[D+N++]=G,h[D+N++]=X,h[D+N++]=H,h[D+N++]=ct,h[D+N++]=_t,h[D+N++]=it,h[D+N++]=st,h[D+N++]=E/2,h[D+N++]=q/2,h[D+N++]=et/2,h[D+N++]=Q/2,b++}function U(S,B){let F=A+M,V=k+g;const E=Math.sqrt(F*F+V*V);F/=E,V/=E;const q=A*F+k*V;F/=q,V/=q;let L=M+y,G=g+v;const X=Math.sqrt(L*L+G*G);L/=X,G/=X;const H=M*L+g*G;L/=H,G/=H,P(l,c,p,u,-V,F,d,m,x,w,-G,L,S,B),T()}function I(S,B,F,V,E,q){if(A=M,k=g,M=y,g=v,A==null&&k==null&&(A=M,k=g),d!=null&&m!=null){y=S-d,v=B-m;const L=Math.sqrt(y*y+v*v);y/=L,v/=L}A!=null&&k!=null&&U(E,q),l=d,c=m,p=x,u=w,d=S,m=B,x=F,w=V}function C(S,B){A=M,k=g,M=y,g=v,A==null&&k==null&&(A=M,k=g),A!=null&&k!=null&&U(S,B)}for(const S of i){l=null,c=null,p=null,u=null,d=null,m=null,x=null,w=null,A=null,k=null,M=null,g=null,y=null,v=null;const{totalTime:B,timeSeed:F}=S;for(let V=0;V<S.numberOfVertices;V++)I(a[4*(S.startVertex+V)],a[4*(S.startVertex+V)+1],a[4*(S.startVertex+V)+2],a[4*(S.startVertex+V)+3],B,F);C(B,F)}return{vertexData:h,indexData:s}}function bt(t,e){const n=e.pixels,{width:r,height:a}=e,i=new Float32Array(r*a*2),o=e.mask||new Uint8Array(r*a*2);if(e.mask||o.fill(255),t==="vector-uv")for(let f=0;f<r*a;f++)i[2*f]=n[0][f],i[2*f+1]=-n[1][f];else if(t==="vector-magdir")for(let f=0;f<r*a;f++){const h=n[0][f],s=Ot(n[1][f]),l=Math.cos(s-Math.PI/2),c=Math.sin(s-Math.PI/2);i[2*f]=l*h,i[2*f+1]=c*h}return{data:i,mask:o,width:r,height:a}}async function Ye(t,e,n,r,a,i){const o=performance.now(),f=qt(e.spatialReference);if(!f){const M=await vt(t,e,n,r,a,i);return nt("esri-2d-profiler")&&J().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),nt("esri-2d-profiler")&&J().info("I.9","Number of parts",1),M}const[h,s]=f.valid,l=s-h,c=Math.ceil(e.width/l),p=e.width/c,u=Math.round(n/c);let d=e.xmin;const m=[],x=performance.now();for(let M=0;M<c;M++){const g=new Wt({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(vt(t,g,u,r,a,i)),d+=p}const w=await Promise.all(m);nt("esri-2d-profiler")&&J().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-x)),nt("esri-2d-profiler")&&J().info("I.9","Number of parts",w.length);const A={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let k=0;for(const M of w){for(let g=0;g<M.height;g++)for(let y=0;y<M.width;y++)k+y>=n||(A.data[2*(g*n+k+y)]=M.data[2*(g*M.width+y)],A.data[2*(g*n+k+y)+1]=M.data[2*(g*M.width+y)+1],A.mask[g*n+k+y]=M.mask[g*M.width+y]);k+=M.width}return nt("esri-2d-profiler")&&J().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),A}async function vt(t,e,n,r,a,i){var s;const o={requestProjectedLocalDirections:!0,signal:i};if(a!=null&&(o.timeExtent=a),t.type==="imagery"){await t.load({signal:i});const l=t.rasterInfo.dataType,c=await t.fetchImage(e,n,r,o);return((s=c==null?void 0:c.pixelData)==null?void 0:s.pixelBlock)==null?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:bt(l,c.pixelData.pixelBlock)}await t.load({signal:i});const f=t.serviceRasterInfo.dataType,h=await t.fetchPixels(e,n,r,o);return(h==null?void 0:h.pixelBlock)==null?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:bt(f,h.pixelBlock)}export{at as A,mt as B,ze as C,We as D,Ge as E,Ee as M,qe as R,Ke as S,je as T,He as U,Oe as W,re as _,Kt as a,Xe as b,ht as c,_e as d,Ve as e,At as f,Ye as g,Fe as h,Ce as i,Te as j,wt as k,Ie as l,Je as m,$e as n,R as o,xt as p,Be as q,Se as r,Qe as s,Re as t,_ as u,Pt as v,Ne as w,De as x,Le as y,Ct as z};
