import{D as q,U as T,_ as J,a as f,i as x}from"./request-a10d6950.js";import{c as m,s as D,a as U}from"./Error-21d1d076.js";import{h as n}from"./typedArrayUtil-2af43698.js";import{w as F,S as V,b as K,l as I,s as $}from"./promiseUtils-1d963c7c.js";import{t as p,i as P,O as E,c as z,e as B,a as S,f as G,r as Q,b as X,d as Y}from"./Connection-2d969448.js";import{n as Z}from"./assets-6fd92e57.js";import"./intl-fe039018.js";import{p as M}from"./subclass-f7409b1b.js";import{c as L}from"./locale-bde6d0f6.js";const ee={async request(r,e){var i,l;const t=r.options,s=t.responseType;t.signal=e==null?void 0:e.signal,t.responseType=s==="native"||s==="native-request-init"?"native-request-init":s&&["blob","json","text"].includes(s)&&((i=q(r.url))!=null&&i.after)?s:"array-buffer";const o=await T(r.url,t),a={data:o.data,httpStatus:o.httpStatus,ssl:o.ssl};switch((l=o.requestOptions)==null?void 0:l.responseType){case"native-request-init":return delete a.data.signal,a;case"blob":a.data=await a.data.arrayBuffer();break;case"json":a.data=new TextEncoder().encode(JSON.stringify(a.data)).buffer;break;case"text":a.data=new TextEncoder().encode(a.data).buffer}return{result:a,transferList:[a.data]}}},re={};function te(r){var t;const e={async:r.async,isDebug:r.isDebug,locale:r.locale,baseUrl:r.baseUrl,has:{...r.has},map:{...r.map},packages:((t=r.packages)==null?void 0:t.concat())||[],paths:{...r.paths}};return r.hasOwnProperty("async")||(e.async=!0),r.hasOwnProperty("isDebug")||(e.isDebug=!1),r.baseUrl||(e.baseUrl=re.baseUrl),e}class se{constructor(){const e=document.createDocumentFragment();["addEventListener","dispatchEvent","removeEventListener"].forEach(t=>{this[t]=(...s)=>e[t](...s)})}}let k=class{constructor(){this._dispatcher=new se,this._workerPostMessage({type:p.HANDSHAKE})}terminate(){}get onmessage(){return this._onmessageHandler}set onmessage(e){this._onmessageHandler&&this.removeEventListener("message",this._onmessageHandler),this._onmessageHandler=e,e&&this.addEventListener("message",e)}get onmessageerror(){return this._onmessageerrorHandler}set onmessageerror(e){this._onmessageerrorHandler&&this.removeEventListener("messageerror",this._onmessageerrorHandler),this._onmessageerrorHandler=e,e&&this.addEventListener("messageerror",e)}get onerror(){return this._onerrorHandler}set onerror(e){this._onerrorHandler&&this.removeEventListener("error",this._onerrorHandler),this._onerrorHandler=e,e&&this.addEventListener("error",e)}postMessage(e){M(()=>{this._workerMessageHandler(new MessageEvent("message",{data:e}))})}dispatchEvent(e){return this._dispatcher.dispatchEvent(e)}addEventListener(e,t,s){this._dispatcher.addEventListener(e,t,s)}removeEventListener(e,t,s){this._dispatcher.removeEventListener(e,t,s)}_workerPostMessage(e){M(()=>{this.dispatchEvent(new MessageEvent("message",{data:e}))})}async _workerMessageHandler(e){const t=P(e);if(t&&t.type===p.OPEN){const{modulePath:s,jobId:o}=t;let a=await E.loadWorker(s);a||(a=await J(()=>import(s),[],import.meta.url));const i=E.connect(a);this._workerPostMessage({type:p.OPENED,jobId:o,data:i})}}};const _=()=>D.getLogger("esri.core.workers.workerFactory"),{HANDSHAKE:oe}=p,ae='let globalId=0;const outgoing=new Map,configuration=JSON.parse("{CONFIGURATION}");self.esriConfig=configuration.esriConfig;const workerPath=self.esriConfig.workers.workerPath,HANDSHAKE=0,OPEN=1,OPENED=2,RESPONSE=3,INVOKE=4,ABORT=5;function createAbortError(){const e=new Error("Aborted");return e.name="AbortError",e}function receiveMessage(e){return e&&e.data?"string"==typeof e.data?JSON.parse(e.data):e.data:null}function invokeStaticMessage(e,o,r){const t=r&&r.signal,n=globalId++;return new Promise(((r,s)=>{if(t){if(t.aborted)return s(createAbortError());t.addEventListener("abort",(()=>{outgoing.get(n)&&(outgoing.delete(n),self.postMessage({type:ABORT,jobId:n}),s(createAbortError()))}))}outgoing.set(n,{resolve:r,reject:s}),self.postMessage({type:INVOKE,jobId:n,methodName:e,abortable:null!=t,data:o})}))}let workerRevisionChecked=!1;function checkWorkerRevision(e){if(!workerRevisionChecked&&e.kernelInfo){workerRevisionChecked=!0;const{revision:o,fullVersion:r}=configuration.kernelInfo,{revision:t,fullVersion:n,version:s}=e.kernelInfo;esriConfig.assetsPath!==esriConfig.defaultAssetsPath&&o!==t&&console.warn(`Version mismatch detected between ArcGIS Maps SDK for JavaScript modules and assets. For more information visit https://bit.ly/3QnsuSo.\\nModules version: ${r}\\nAssets version: ${n??s}\\nAssets path: ${esriConfig.assetsPath}`)}}function messageHandler(e){const o=receiveMessage(e);if(!o)return;const r=o.jobId;switch(o.type){case OPEN:let n;function t(e){const o=n.connect(e);self.postMessage({type:OPENED,jobId:r,data:o},[o])}"function"==typeof define&&define.amd?require([workerPath],(e=>{n=e.default||e,checkWorkerRevision(n),n.loadWorker(o.modulePath).then((e=>e||new Promise((e=>{require([o.modulePath],e)})))).then(t)})):"System"in self&&"function"==typeof System.import?System.import(workerPath).then((e=>(n=e.default,checkWorkerRevision(n),n.loadWorker(o.modulePath)))).then((e=>e||System.import(o.modulePath))).then(t):esriConfig.workers.useDynamicImport?import(workerPath).then((e=>{n=e.default||e,checkWorkerRevision(n),n.loadWorker(o.modulePath).then((e=>e||import(o.modulePath))).then(t)})):(self.RemoteClient||importScripts(workerPath),n=self.RemoteClient.default||self.RemoteClient,checkWorkerRevision(n),n.loadWorker(o.modulePath).then(t));break;case RESPONSE:if(outgoing.has(r)){const s=outgoing.get(r);outgoing.delete(r),o.error?s.reject(JSON.parse(o.error)):s.resolve(o.data)}}}self.dojoConfig=configuration.loaderConfig,esriConfig.workers.loaderUrl&&(self.importScripts(esriConfig.workers.loaderUrl),"function"==typeof require&&"function"==typeof require.config&&require.config(configuration.loaderConfig)),self.addEventListener("message",messageHandler),self.postMessage({type:0});';let g,b;const A="Failed to create Worker. Fallback to execute module in main thread";async function ne(){if(!n("esri-workers"))return j(new k);if(!g&&!b)try{const e=ae.split('"{CONFIGURATION}"').join(`'${ie()}'`);g=URL.createObjectURL(new Blob([e],{type:"text/javascript"}))}catch(e){b=e||{}}let r;if(g)try{r=new Worker(g,{name:"esri-worker-"+le++})}catch{_().warn(A,b),r=new k}else _().warn(A,b),r=new k;return j(r)}async function j(r){return new Promise(e=>{function t(o){const a=P(o);a&&a.type===oe&&(r.removeEventListener("message",t),r.removeEventListener("error",s),e(r))}function s(o){o.preventDefault(),r.removeEventListener("message",t),r.removeEventListener("error",s),_().warn("Failed to create Worker. Fallback to execute module in main thread",o),(r=new k).addEventListener("message",t),r.addEventListener("error",s)}r.addEventListener("message",t),r.addEventListener("error",s)})}function ie(){let r;if(m.default!=null){const o={...m};delete o.default,r=JSON.parse(JSON.stringify(o))}else r=JSON.parse(JSON.stringify(m));r.assetsPath=f(r.assetsPath),r.defaultAssetsPath=r.defaultAssetsPath?f(r.defaultAssetsPath):void 0,r.request.interceptors=[],r.log.interceptors=[],r.locale=L(),r.has={"esri-csp-restrictions":n("esri-csp-restrictions"),"esri-2d-debug":!1,"esri-2d-update-debug":n("esri-2d-update-debug"),"esri-2d-log-updating":n("esri-2d-log-updating"),"featurelayer-pbf":n("featurelayer-pbf"),"featurelayer-fast-triangulation-enabled":n("featurelayer-fast-triangulation-enabled"),"featurelayer-simplify-thresholds":n("featurelayer-simplify-thresholds"),"featurelayer-simplify-payload-size-factors":n("featurelayer-simplify-payload-size-factors"),"featurelayer-simplify-mobile-factor":n("featurelayer-simplify-mobile-factor"),"featurelayer-query-max-depth":n("featurelayer-query-max-depth"),"featurelayer-query-pausing-enabled":n("featurelayer-query-pausing-enabled"),"featurelayer-snapshot-enabled":n("featurelayer-snapshot-enabled"),"esri-atomics":n("esri-atomics"),"esri-shared-array-buffer":n("esri-shared-array-buffer"),"esri-tiles-debug":n("esri-tiles-debug"),"esri-workers-arraybuffer-transfer":n("esri-workers-arraybuffer-transfer"),"feature-polyline-generalization-factor":n("feature-polyline-generalization-factor"),"host-webworker":1},r.workers.loaderUrl&&(r.workers.loaderUrl=f(r.workers.loaderUrl)),r.workers.workerPath?r.workers.workerPath=f(r.workers.workerPath):r.workers.workerPath=f(Z("esri/core/workers/RemoteClient.js")),r.workers.useDynamicImport=!1;const e=m.workers.loaderConfig,t=te({baseUrl:e==null?void 0:e.baseUrl,locale:L(),has:{"csp-restrictions":1,"dojo-test-sniff":0,"host-webworker":1,...e==null?void 0:e.has},map:{...e==null?void 0:e.map},paths:{...e==null?void 0:e.paths},packages:(e==null?void 0:e.packages)||[]});return JSON.stringify({esriConfig:r,loaderConfig:t,kernelInfo:{buildDate:z,fullVersion:x,revision:B}})}let le=0;const{ABORT:C,INVOKE:ce,OPEN:de,OPENED:ue,RESPONSE:h}=p;class O{static async create(e){const t=await ne();return new O(t,e)}constructor(e,t){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=t,e.addEventListener("message",this._onMessage.bind(this)),e.addEventListener("error",s=>{s.preventDefault(),D.getLogger("esri.core.workers.WorkerOwner").error(s)})}terminate(){this.worker.terminate()}async open(e,t={}){const{signal:s}=t,o=Q();return new Promise((a,i)=>{const l={resolve:a,reject:i,abortHandle:F(s,()=>{this._outJobs.delete(o),this._post({type:C,jobId:o})})};this._outJobs.set(o,l),this._post({type:de,jobId:o,modulePath:e})})}_onMessage(e){const t=P(e);if(t)switch(t.type){case ue:this._onOpenedMessage(t);break;case h:this._onResponseMessage(t);break;case C:this._onAbortMessage(t);break;case ce:this._onInvokeMessage(t)}}_onAbortMessage(e){const t=this._inJobs,s=e.jobId,o=t.get(s);o&&(o.controller&&o.controller.abort(),t.delete(s))}_onInvokeMessage(e){const{methodName:t,jobId:s,data:o,abortable:a}=e,i=a?new AbortController:null,l=this._inJobs,N=ee[t];let u;try{if(typeof N!="function")throw new TypeError(`${t} is not a function`);u=N.call(null,o,{signal:i?i.signal:null})}catch(c){return void this._post({type:h,jobId:s,error:S(c)})}V(u)?(l.set(s,{controller:i,promise:u}),u.then(c=>{l.has(s)&&(l.delete(s),this._post({type:h,jobId:s},c))},c=>{l.has(s)&&(l.delete(s),c||(c={message:"Error encountered at method"+t}),K(c)||this._post({type:h,jobId:s,error:S(c||{message:`Error encountered at method ${t}`})}))})):this._post({type:h,jobId:s},u)}_onOpenedMessage(e){const{jobId:t,data:s}=e,o=this._outJobs.get(t);o&&(this._outJobs.delete(t),I(o.abortHandle),o.resolve(s))}_onResponseMessage(e){const{jobId:t,error:s,data:o}=e,a=this._outJobs.get(t);a&&(this._outJobs.delete(t),I(a.abortHandle),s?a.reject(U.fromJSON(JSON.parse(s))):a.resolve(o))}_post(e,t,s){return G(this.worker,e,t,s)}}const R=n("host-browser")?Math.min(navigator.hardwareConcurrency-1,n("workers-pool-size")):0;let d=n("esri-mobile")?Math.min(R,3):R;d||(d=n("safari")&&n("mac")?7:2);let H=0;const v=[];function Ee(){W()}async function w(r,e){const t=new X,{registryTarget:s,...o}=e;return await t.open(r,o),s&&Y(s,t),t}async function _e(r,e={}){if(typeof r!="string")throw new U("workers:undefined-module","modulePath is missing");let t=e.strategy||"distributed";if(n("host-webworker")&&!n("esri-workers")&&(t="local"),t==="local"){let s=await E.loadWorker(r);s||(s=await J(()=>import(r),[],import.meta.url)),$(e.signal);const o=e.client||s;return w([E.connect(s)],{...e,client:o})}if(await W(),$(e.signal),t==="dedicated"){const s=H++%d;return w([await v[s].open(r,e)],e)}if(e.maxNumWorkers&&e.maxNumWorkers>0){const s=Math.min(e.maxNumWorkers,d);if(s<d){const o=new Array(s);for(let a=0;a<s;++a){const i=H++%d;o[a]=v[i].open(r,e)}return w(o,e)}}return w(v.map(s=>s.open(r,e)),e)}let y=null;async function W(){if(y)return y;new AbortController;const r=[];for(let e=0;e<d;e++){const t=O.create(e).then(s=>(v[e]=s,s));r.push(t)}return y=Promise.all(r),y}export{Ee as m,_e as p};
