import{_ as d}from"./request-a10d6950.js";import{n as m}from"./date-294ce3fb.js";import{N as a}from"./SpatialReference-428523ee.js";import{A as p,U as h,c as y,y as g,a as w,z as _}from"./fieldUtils-fcb2a714.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(r){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=r}}function c(n){return new b(n)}class q{constructor(r){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=r}}function G(n){return new q(n)}const u=new Set;function S(n,r,e,f=!1){u.clear();for(const i in e){const t=n.get(i);if(!t)continue;const s=P(t,e[i]);if(u.add(t.name),t&&(f||t.editable)){const l=p(t,s);if(l)return c(h(l,t,s));r[t.name]=s}}for(const i of(n==null?void 0:n.requiredFields)??[])if(!u.has(i.name))return c(`missing required field "${i.name}"`);return null}function P(n,r){let e=r;return y(n)&&typeof r=="string"?e=parseFloat(r):g(n)&&r!=null&&typeof r!="string"?e=String(r):w(n)&&typeof r=="string"&&(e=m(r)),_(e)}let o;function T(n,r){if(!n||!a(r))return n;if("rings"in n||"paths"in n){if(o==null)throw new TypeError("geometry engine not loaded");return o.simplify(r,n)}return n}async function j(){return o==null&&(o=await d(()=>import("./geometryEngineJSON-654a74ef.js"),["./geometryEngineJSON-654a74ef.js","./geometryEngineBase-77e94ca5.js","./_commonjsHelpers-2f3e7994.js","./geometryEngineJSON-ec02ed97.js","./json-48e3ea08.js"],import.meta.url)),o}async function U(n,r){!a(n)||r!=="esriGeometryPolygon"&&r!=="esriGeometryPolyline"||await j()}export{G as d,c as f,U as j,S as p,T as y};
