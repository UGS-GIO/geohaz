import{x as I,c as d,i as h}from"./symbols-b3e075ad.js";import{c as v,a as S}from"./devEnvironmentUtils-4eab2a99.js";import{a as N}from"./Error-21d1d076.js";import{I as y,R as D}from"./request-a10d6950.js";import{Q as U}from"./Portal-cb507469.js";import{u as w}from"./persistableUrlUtils-ca6bb38d.js";import{c as A,b as P,p as j,a as O,w as E,d as M}from"./styleUtils-d9ef5ac0.js";import"./subclass-f7409b1b.js";import"./typedArrayUtil-2af43698.js";import"./promiseUtils-1d963c7c.js";import"./JSONSupport-acf2865c.js";import"./time-0817624a.js";import"./enumeration-4a4e87c4.js";import"./jsonMap-5ba4a9c2.js";import"./Extent-2b4578b8.js";import"./SpatialReference-428523ee.js";import"./assets-6fd92e57.js";import"./cast-e7a2f9aa.js";import"./fieldUtils-fcb2a714.js";import"./intl-fe039018.js";import"./date-7940da18.js";import"./locale-bde6d0f6.js";import"./datetime-7e00d9ef.js";import"./messages-2d262041.js";import"./mathUtils-19b6edfc.js";import"./geometry-31b45acd.js";import"./Polyline-013cde1f.js";import"./aaBoundingRect-aef00841.js";import"./Axis-30be7e73.js";import"./typeUtils-3056a943.js";import"./TextSymbol-53669eb2.js";import"./Color-e1a6dfab.js";import"./colorUtils-ac6863dc.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-f0a081b4.js";import"./symbolLayerUtils3D-5b91ffd6.js";import"./aaBoundingBox-7242ce3e.js";import"./Collection-aa6ef54b.js";import"./Evented-b5127116.js";import"./SimpleObservable-ae589a25.js";import"./collectionUtils-b6e30316.js";import"./Clonable-b71fa929.js";import"./reactiveUtils-e7d9f86e.js";import"./Loadable-8a1ead8b.js";import"./Promise-ec74e14b.js";import"./layerUtils-c805b05c.js";function It(t,r,o,m){const e=t.name;return e==null?Promise.reject(new N("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference")):t.styleName&&t.styleName==="Esri2DPointSymbolsStyle"?W(e,r,m):A(t,r,m).then(l=>T(l,e,r,o,M,m))}function Q(t,r){return r.items.find(o=>o.name===t)}function T(t,r,o,m,e,l){var c,g;const n=(o==null?void 0:o.portal)!=null?o.portal:U.getDefault(),f={portal:n,url:y(t.baseUrl),origin:"portal-item"},a=Q(r,t.data);if(!a){const u=`The symbol name '${r}' could not be found`;return Promise.reject(new N("symbolstyleutils:symbol-name-not-found",u,{symbolName:r}))}let p=w(e(a,m),f),s=((c=a.thumbnail)==null?void 0:c.href)??null;const b=(g=a.thumbnail)==null?void 0:g.imageData;v()&&(p=S(p)??"",s=S(s));const R={portal:n,url:y(D(p)),origin:"portal-item"};return P(p,l).then(u=>{const x=m==="cimRef"?j(u.data):u.data,i=O(x,R);if(i&&I(i)){if(s){const F=w(s,f);i.thumbnail=new d({url:F})}else b&&(i.thumbnail=new d({url:`data:image/png;base64,${b}`}));t.styleUrl?i.styleOrigin=new h({portal:o.portal,styleUrl:t.styleUrl,name:r}):t.styleName&&(i.styleOrigin=new h({portal:o.portal,styleName:t.styleName,name:r}))}return i})}function W(t,r,o){const m=E.replaceAll(/\{SymbolName\}/gi,t),e=r.portal!=null?r.portal:U.getDefault();return P(m,o).then(l=>{const n=j(l.data);return O(n,{portal:e,url:y(D(m)),origin:"portal-item"})})}export{T as fetchSymbolFromStyle,Q as getStyleItemFromStyle,It as resolveWebStyleSymbol};
