import{c as y}from"./Graphic-f1881791.js";import{s as E}from"./Error-21d1d076.js";import{r as h}from"./subclass-f7409b1b.js";import{M as S,x as w}from"./Extent-2b4578b8.js";import{$ as d}from"./Mesh-a1b58a69.js";import{f as D}from"./SpatialReference-428523ee.js";import{d as M}from"./georeference-a2be6426.js";import{o as N,i as F}from"./External-e1bc87f6.js";import{s as T}from"./infoFor3D-24efd44a.js";import{d as x}from"./FeatureSet-32e85c3a.js";import"./geometry-31b45acd.js";import"./Polyline-013cde1f.js";import"./JSONSupport-acf2865c.js";import"./typedArrayUtil-2af43698.js";import"./promiseUtils-1d963c7c.js";import"./time-0817624a.js";import"./aaBoundingRect-aef00841.js";import"./Axis-30be7e73.js";import"./mathUtils-19b6edfc.js";import"./typeUtils-3056a943.js";import"./jsonMap-5ba4a9c2.js";import"./PopupTemplate-18f22683.js";import"./Clonable-b71fa929.js";import"./Collection-aa6ef54b.js";import"./Evented-b5127116.js";import"./SimpleObservable-ae589a25.js";import"./cast-e7a2f9aa.js";import"./fieldUtils-fcb2a714.js";import"./request-a10d6950.js";import"./intl-fe039018.js";import"./date-7940da18.js";import"./locale-bde6d0f6.js";import"./datetime-7e00d9ef.js";import"./messages-2d262041.js";import"./assets-6fd92e57.js";import"./enumeration-4a4e87c4.js";import"./Color-e1a6dfab.js";import"./colorUtils-ac6863dc.js";import"./Identifiable-1430bdc2.js";import"./symbols-b3e075ad.js";import"./TextSymbol-53669eb2.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-f0a081b4.js";import"./symbolLayerUtils3D-5b91ffd6.js";import"./aaBoundingBox-7242ce3e.js";import"./persistableUrlUtils-ca6bb38d.js";import"./collectionUtils-b6e30316.js";import"./Portal-cb507469.js";import"./Loadable-8a1ead8b.js";import"./Promise-ec74e14b.js";import"./reactiveUtils-e7d9f86e.js";import"./jsonUtils-2c7f966c.js";import"./imageUtils-2745d713.js";import"./MeshLocalVertexSpace-48f1035e.js";import"./meshVertexSpaceUtils-a98cf1bd.js";import"./vec3-10e9217f.js";import"./earcut-9ee3ebef.js";import"./_commonjsHelpers-2f3e7994.js";import"./DoubleArray-d7e400b4.js";import"./Indices-968b5cdc.js";import"./deduplicate-4feec8ff.js";import"./plane-f835f029.js";import"./vec42-a95eff2d.js";import"./mat3f64-e19cdcb8.js";import"./mat4f64-9a8384aa.js";import"./quatf64-81e039e4.js";import"./vec2f64-b65bfd66.js";import"./vec4f64-430e4feb.js";import"./triangle-4b6d6bb2.js";import"./Util-5ae70216.js";import"./ObjectStack-80adc7e7.js";import"./lineSegment-9b648b01.js";import"./basicInterfaces-11f56cb3.js";import"./VertexAttribute-c2df436e.js";import"./projection-41da473c.js";import"./projectBuffer-af7b4ad9.js";import"./zscale-d7e12601.js";import"./mat3-def297a7.js";import"./mat4-a6ac6b0f.js";import"./quat-064ab1d0.js";import"./computeTranslationToOriginAndRotation-3ac32984.js";import"./BufferView-6e304e0e.js";import"./vec2-f44efd17.js";import"./Field-be948aef.js";import"./fieldType-4834e8bc.js";const l=()=>E.getLogger("esri.rest.support.meshFeatureSet");function fr(t,r,o){const e=o.features;o.features=[],delete o.geometryType;const i=x.fromJSON(o);if(i.geometryType="mesh",!o.assetMaps)return i;const n=A(r,o.assetMaps),s=t.sourceSpatialReference??D.WGS84,u=o.globalIdFieldName,{outFields:m}=t,f=m!=null&&m.length>0?I(m.includes("*")?null:new Set(m)):()=>({});for(const a of e){const p=L(a,u,s,r,n);p!=null&&i.features.push(new y({geometry:p,attributes:f(a)}))}return i}function I(t){return({attributes:r})=>{if(!r)return{};if(!t)return r;for(const o in r)t.has(o)||delete r[o];return r}}function L(t,r,o,e,i){const n=t.attributes[r],s=i.get(n);if(s==null)return l().error("mesh-feature-set:asset-not-found","Service returned a feature which was not found in the asset map",t),null;if(!t.geometry)return l().error("mesh-feature-set:no-geometry","Service returned a feature without geometry",t),null;const u=O(t,o,e),m=S.fromJSON(t.geometry);m.spatialReference=o;const f=$(t.attributes,e),a=o.isGeographic?"local":"georeferenced",p=P(s);return p?d.createWithExternalSource(u,p,{extent:m,transform:f,vertexSpace:a}):d.createIncomplete(u,{extent:m,transform:f,vertexSpace:a})}function O({attributes:t},r,{transformFieldRoles:o}){const e=t[o.originX],i=t[o.originY],n=t[o.originZ];return new w({x:e,y:i,z:n,spatialReference:r})}function $(t,{transformFieldRoles:r}){return new M({translation:[t[r.translationX],-t[r.translationZ],t[r.translationY]],rotationAxis:[t[r.rotationX],-t[r.rotationZ],t[r.rotationY]],rotationAngle:t[r.rotationDeg],scale:[t[r.scaleX],t[r.scaleZ],t[r.scaleY]]})}var c;function A(t,r){const o=new Map;for(const e of r){const i=e.parentGlobalId;if(i==null)continue;const n=e.assetName,s=e.assetType,u=e.assetHash,m=e.assetURL,f=e.conversionStatus,a=e.seqNo,p=T(s,t.supportedFormats);if(!p){l().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${s}, but it does not list it as a supported type`);continue}const g=h(o,i,()=>({files:new Map}));h(g.files,n,()=>({name:n,type:s,mimeType:p,status:b(f),parts:[]})).parts[a]={hash:u,url:m}}return o}function P(t){const r=Array.from(t.files.values()),o=new Array;for(const e of r){if(e.status!==c.COMPLETED)return null;const i=new Array;for(const n of e.parts){if(!n)return null;i.push(new N(n.url,n.hash))}o.push(new F(e.name,e.mimeType,i))}return o}function b(t){switch(t){case"COMPLETED":case"SUBMITTED":return c.COMPLETED;case"INPROGRESS":return c.PENDING;default:return c.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(c||(c={}));export{A as assetMapFromAssetMapsJSON,L as extractMesh,fr as meshFeatureSetFromJSON};
