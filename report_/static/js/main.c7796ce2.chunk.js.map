{"version":3,"sources":["images/qff-legend.jpg","images/ugs-logo.jpg","reportParts/HazardMap.js","config.js","esriModules.js","reportParts/Group.js","reportParts/Loader.js","reportParts/MapSurround.js","reportParts/Hazard.js","helpers.js","reportParts/HazardUnit.js","reportParts/References.js","services/QueryService.js","reportParts/CoverPage.js","reportParts/SummaryPage.js","reportParts/ProgressBar.js","reportParts/ErrorPage.js","App.js","index.js"],"names":["module","exports","map","view","scaleBar","baseUrl","supplementalData","mapKeys","overview","lidar","aerials","scaleMultiple","notProd","process","urls","hazardGroupingsTable","hazardGroupTextTable","hazardIntroTextTable","hazardReferenceTextTable","hazardUnitTextTable","imageAgenciesTable","otherDataTable","reportTextTable","lidarExtents","aerialImageryCenterPoints","groundshakingHazardCode","quaternaryFaultsHazardCode","queries","webMaps","hazard","a","requires","loadModules","version","css","WebMap","MapView","Polygon","Graphic","watchUtils","symbolUtils","ScaleBar","HazardMapContext","createContext","visualAssets","props","console","log","useState","setVisualAssets","mapLoading","setMapLoading","mapLoaded","setMapLoaded","useContext","ProgressContext","registerProgressItem","setProgressItemAsComplete","createMap","getModules","mapDiv","document","createElement","body","appendChild","polylineSymbol","type","color","width","polygon","aoi","polylineGraphic","geometry","symbol","portalItem","id","config","container","ui","components","extent","expand","graphics","constraints","snapToZoom","when","remainder","scale","unit","getProgressId","url","useEffect","index","queriesWithResults","length","Object","keys","forEach","key","getScreenshots","newScreenshots","hazardCode","getScreenshot","screenshot","renderer","scaleBarDom","mapImage","dataUrl","getExtraScreenshot","Provider","value","children","layers","layer","getItemAt","testUrl","loadLayer","sublayers","items","parent","layerId","visible","RegExp","toUpperCase","test","load","originalScale","goTo","whenFalseOnce","takeScreenshot","height","renderNow","cloneNode","className","title","name","dangerouslySetInnerHTML","__html","text","mapKey","scaleBarRef","useRef","current","src","alt","ref","Math","round","toLocaleString","kebabCase","group","introText","code","qffLegend","getHazardCodeFromUnitCode","unitCode","slice","hasLegend","setHasLegend","legend","mapContext","buildLegend","renderers","uniqueValueInfos","filter","info","HazardUnit","clone","renderPreviewHTML","node","assets","Description","references","reference","retryPolicy","outputFormatter","response","polly","waitAndRetry","executeForPromise","fetch","ok","Promise","reject","requestURL","json","responseJson","error","queryUnitsAsync","meta","startsWith","hazardField","parameters","geometryType","JSON","stringify","returnGeometry","outFields","f","units","features","feature","attributes","getDistinctHazardCodesFromUnits","queryTable","where","orderByFields","queryHazardUnitTableAsync","join","queryReferenceTableAsync","queryIntroTextAsync","queryGroupingAsync","queryGroupTextAsync","groups","queryReportTextTableAsync","queryOtherDataTableAsync","date","Date","aoiDescription","Introduction","Disclaimer","ugsLogo","toLocaleDateString","toLocaleTimeString","hazardUnits","values","groupToHazardMap","hazardCodes","concat","hazardToUnitMap","Top","href","HazardName","UnitName","Bottom","tasks","max","completed","percent","x","classes","classNames","parentClasses","style","role","area-valuenow","aria-valuemin","aria-valuemax","setGroupToHazardMap","setHazardToUnitMap","hazardIntroText","setHazardIntroText","hazardReferences","setHazardReferences","setQueriesWithResults","groupToTextMap","setGroupToTextMap","reportTextMap","setReportTextMap","setOtherDataMap","setTasks","pageError","setError","useCallback","itemId","previousTasks","Error","getData","relatedTablesProgressId","all","featureClassMap","then","data","allHazardInfos","hazardInfos","flatUnitCodes","Array","from","Set","reduce","previous","groupings","hazardUnitText","reportTextRows","otherDataRows","otherDataMapBuilder","row","Data","reportTextMapBuilder","Section","Text","flatGroups","HazardGroup","groupText","groupToTextMapBuilder","groupToHazardMapBuilder","hazardToUnitMapBuilder","HowToUse","push","HazardCode","warn","onClick","window","print","description","groupName","intro","Hazard","References","OtherGeologicHazardResources","init","ReactDOM","render","getElementById","localStorage","getItem","parse"],"mappings":"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","file":"static/js/main.c7796ce2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/qff-legend.3375e9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ugs-logo.46881887.jpg\";","import React, { useContext, useState, useEffect, createContext } from 'react';\r\nimport config from '../config';\r\nimport getModules from '../esriModules';\r\nimport { ProgressContext } from '../App';\r\nimport './HazardMap.scss';\r\n\r\n\r\nexport const HazardMapContext = createContext({\r\n  visualAssets: {}\r\n});\r\n\r\n// we tried moving these to useRef but the code silently failed at map.current.when()\r\nlet map;\r\nlet view;\r\nlet scaleBar;\r\n\r\nexport default props => {\r\n  console.log('HazardMap.render', props);\r\n  const [ visualAssets, setVisualAssets ] = useState({});\r\n  const [ mapLoading, setMapLoading ] = useState(false);\r\n  const [ mapLoaded, setMapLoaded ] = useState(false);\r\n  const { registerProgressItem, setProgressItemAsComplete } = useContext(ProgressContext);\r\n\r\n  const createMap = async () => {\r\n    console.log('HazardMap.createMap');\r\n\r\n    setMapLoading(true);\r\n\r\n    const { WebMap, MapView, Polygon, Graphic, ScaleBar } = await getModules();\r\n\r\n    const mapDiv = document.createElement('div');\r\n    document.body.appendChild(mapDiv);\r\n\r\n    const polylineSymbol = {\r\n      type: 'simple-line',\r\n      color: '#f012be',\r\n      width: 4\r\n    };\r\n\r\n    const polygon = new Polygon(props.aoi);\r\n\r\n    const polylineGraphic = new Graphic({\r\n      geometry: polygon,\r\n      symbol: polylineSymbol\r\n    });\r\n\r\n    map = new WebMap({\r\n      portalItem: { id: config.webMaps.hazard }\r\n    });\r\n    console.log('map created');\r\n\r\n    view = new MapView({\r\n      map,\r\n      container: mapDiv,\r\n      ui: {\r\n        components: ['attribution']\r\n      },\r\n      extent: polygon.extent.expand(3),\r\n      graphics: [ polylineGraphic ],\r\n      constraints: {\r\n        snapToZoom: false\r\n      }\r\n    });\r\n\r\n    // make map scale a multiple of 2500\r\n    await view.when();\r\n    const remainder = view.scale % config.scaleMultiple;\r\n    view.scale += config.scaleMultiple - remainder;\r\n\r\n    scaleBar = new ScaleBar({\r\n      view,\r\n      container: document.createElement('div'),\r\n      unit: 'dual'\r\n    });\r\n\r\n    setMapLoaded(true);\r\n  }\r\n\r\n  const getProgressId = url => `screenshot-${url}`;\r\n  useEffect(() => {\r\n    for (let index = 0; index < props.queriesWithResults.length; index++) {\r\n      const [url] = props.queriesWithResults[index];\r\n\r\n      registerProgressItem(getProgressId(url));\r\n    }\r\n\r\n    Object.keys(config.mapKeys).forEach(key => {\r\n      registerProgressItem(getProgressId(config.mapKeys[key]));\r\n    });\r\n  }, [props.queriesWithResults, registerProgressItem]);\r\n\r\n  useEffect(() => {\r\n    const getScreenshots = async () => {\r\n      console.log('getScreenshots', props.queriesWithResults);\r\n\r\n      const newScreenshots = {};\r\n      for (let index = 0; index < props.queriesWithResults.length; index++) {\r\n        const [url, hazardCode] = props.queriesWithResults[index];\r\n        const { screenshot, renderer, scale, scaleBarDom } = await getScreenshot(url, hazardCode);\r\n        setProgressItemAsComplete(getProgressId(url));\r\n\r\n        newScreenshots[hazardCode] = {\r\n          mapImage: screenshot.dataUrl,\r\n          renderer,\r\n          scale,\r\n          scaleBarDom\r\n        };\r\n      }\r\n\r\n      const getExtraScreenshot = async (key, url) => {\r\n        // generate overview map\r\n        const { screenshot, scale, scaleBarDom } = await getScreenshot(url);\r\n        newScreenshots[key] = { mapImage: screenshot.dataUrl, scale, scaleBarDom };\r\n        setProgressItemAsComplete(getProgressId(key));\r\n      };\r\n\r\n      await getExtraScreenshot(config.mapKeys.overview);\r\n      await getExtraScreenshot(config.mapKeys.lidar, config.urls.lidarExtents);\r\n      await getExtraScreenshot(config.mapKeys.aerials, config.urls.aerialImageryCenterPoints);\r\n\r\n      setVisualAssets(newScreenshots);\r\n    };\r\n\r\n    if (mapLoaded && props.queriesWithResults.length > 0) {\r\n      getScreenshots();\r\n    }\r\n  }, [props.queriesWithResults, mapLoaded, setProgressItemAsComplete]);\r\n\r\n  if (!mapLoading) {\r\n    createMap();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HazardMapContext.Provider value={{ visualAssets }}>\r\n        {props.children}\r\n      </HazardMapContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst getScreenshot = async function(url, hazardCode) {\r\n  console.log('HazardMap.getScreenshot', url);\r\n\r\n  let renderer;\r\n\r\n  await map.when();\r\n\r\n  for (let index = 0; index < map.layers.length; index++) {\r\n    let layer = map.layers.getItemAt(index);\r\n    let testUrl;\r\n    let loadLayer;\r\n    if (layer.type === 'map-image') {\r\n      layer = layer.sublayers.items[0];\r\n      testUrl = layer.url;\r\n      loadLayer = layer.parent;\r\n    } else {\r\n      testUrl = `${layer.url}/${layer.layerId}`;\r\n      loadLayer = layer;\r\n    }\r\n\r\n    if (url) {\r\n      layer.visible = new RegExp(`${url.toUpperCase()}$`).test(testUrl.toUpperCase());\r\n    } else {\r\n      layer.visible = false;\r\n    }\r\n\r\n    if (layer.visible) {\r\n      await loadLayer.load();\r\n\r\n      renderer = layer.renderer;\r\n\r\n      if (layer.parent) {\r\n        layer.parent.visible = layer.visible;\r\n      }\r\n    };\r\n  }\r\n\r\n  const { watchUtils } = await getModules();\r\n\r\n  let originalScale;\r\n  if (hazardCode === config.groundshakingHazardCode) {\r\n    originalScale = view.scale;\r\n\r\n    // goTo works better than setting the scale prop directly since we can await it\r\n    await view.goTo({\r\n      scale: view.scale * 2\r\n    });\r\n  }\r\n\r\n  await watchUtils.whenFalseOnce(view, 'updating');\r\n\r\n  // map width is 8.5\" - 0.78\" (default print margins for Chrome on macOS) * 300 dpi\r\n  // height is golden ratio\r\n  const screenshot = await view.takeScreenshot({width: 2316, height: 1431});\r\n  // cache scale bar dom since it could be different for different maps\r\n  scaleBar.renderNow();\r\n  const scaleBarDom = scaleBar.container.cloneNode(true);\r\n  const scale = view.scale;\r\n\r\n  if (originalScale) {\r\n    await view.goTo({\r\n      scale: originalScale\r\n    });\r\n  }\r\n\r\n  console.log('view.scale', scale, hazardCode, renderer);\r\n  return { screenshot, renderer, scale, scaleBarDom };\r\n};\r\n","const baseUrl = 'https://services.arcgis.com/ZzrwjTRez6FJiOq4/arcgis/rest/services';\r\nconst supplementalData = `${baseUrl}/Utah_Geologic_Hazards_Supplemental_Data_View/FeatureServer`;\r\nconst groundshakingHazardCode = 'EGS';\r\nconst quaternaryFaultsHazardCode = 'QFF';\r\nexport default {\r\n  mapKeys: {\r\n    overview: 'overview-map',\r\n    lidar: 'lidar-map',\r\n    aerials: 'aerials-map'\r\n  },\r\n  scaleMultiple: 2500,\r\n  notProd: process.env.REACT_APP_ENVIRONMENT !== 'production',\r\n  urls: {\r\n    baseUrl,\r\n    hazardGroupingsTable: `${baseUrl}/Report_Tables_View/FeatureServer/0`,\r\n    hazardGroupTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/1`,\r\n    hazardIntroTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/2`,\r\n    hazardReferenceTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/3`,\r\n    hazardUnitTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/4`,\r\n    imageAgenciesTable: `${baseUrl}/Report_Tables_View/FeatureServer/5`,\r\n    otherDataTable: `${baseUrl}/Report_Tables_View/FeatureServer/7`,\r\n    reportTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/8`,\r\n    lidarExtents: `${supplementalData}/2`,\r\n    aerialImageryCenterPoints: `${supplementalData}/3`\r\n  },\r\n  groundshakingHazardCode,\r\n  quaternaryFaultsHazardCode,\r\n  queries: [\r\n    ['Utah_Geologic_Hazards/FeatureServer/0', 'FLH'], // Flood Hazard\r\n    ['Utah_Geologic_Hazards/FeatureServer/1', 'SGS'], // Shallow Groundwater Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/2', 'LSS'], // Landslide Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/3', 'LSF'], // Landslides\r\n    ['Utah_Geologic_Hazards/FeatureServer/4', 'LSC'], // Legacy Landslide Compilation\r\n    ['Utah_Geologic_Hazards/FeatureServer/5', 'CAS'], // Caliche Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/6', 'CSS'], // Collapsible Soil Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/7', 'CRS'], // Corrosive Soil and Rock Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/8', 'EFH'], // Earth Fissure Hazard\r\n    ['Utah_Geologic_Hazards/FeatureServer/9', 'ERZ'], // Erosion Hazard Zones\r\n    ['Utah_Geologic_Hazards/FeatureServer/10', 'EXS'], // Expansive Soil and Rock Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/11', 'GSP'], // Ground Subsidence Potential\r\n    ['Utah_Geologic_Hazards/FeatureServer/12', 'MKF'], // Karst Features\r\n    ['Utah_Geologic_Hazards/FeatureServer/13', 'PES'], // Piping and Erosion Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/14', 'GRS'], // Radon Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/15', 'RFH'], // Rockfall Hazard\r\n    ['Utah_Geologic_Hazards/FeatureServer/16', 'SDH'], // Salt Tectonics Related Ground Deformation\r\n    ['Utah_Geologic_Hazards/FeatureServer/17', 'SBP'], // Shallow Bedrock Potential\r\n    ['Utah_Geologic_Hazards/FeatureServer/18', 'SLS'], // Soluble Soil and Rock Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/19', 'WSS'], // Wind-Blown Sand Susceptibility\r\n    ['https://webmaps.geology.utah.gov/arcgis/rest/services/Hazards/quaternary_faults/MapServer/0', quaternaryFaultsHazardCode], // Quaternary Faults\r\n    ['Utah_Earthquake_Hazards/FeatureServer/2', 'LQS'], // Liquefaction Susceptibility\r\n    ['Utah_Earthquake_Hazards/FeatureServer/3', 'SFR'], // Surface Fault Rupture Hazard Special Study Zone\r\n    ['Utah_Earthquake_Hazards/FeatureServer/5', groundshakingHazardCode] // Groundshaking Polygons\r\n  ],\r\n  webMaps: {\r\n    hazard: (process.env.REACT_APP_ENVIRONMENT === 'dev') ?\r\n      // development\r\n      'eec57827136a472dbdb75535889d74b2' :\r\n      // production & staging\r\n      'a2d16377b4b5495ab2aaca8dd14463ba'\r\n  }\r\n};\r\n","import { loadModules } from 'esri-loader';\r\n\r\n\r\nexport default async () => {\r\n  const requires = [\r\n    'esri/WebMap',\r\n    'esri/views/MapView',\r\n    'esri/geometry/Polygon',\r\n    'esri/Graphic',\r\n    'esri/core/watchUtils',\r\n    'esri/symbols/support/symbolUtils',\r\n    'esri/widgets/ScaleBar'\r\n  ];\r\n\r\n  const [\r\n    WebMap,\r\n    MapView,\r\n    Polygon,\r\n    Graphic,\r\n    watchUtils,\r\n    symbolUtils,\r\n    ScaleBar\r\n  ] = await loadModules(requires, {\r\n    version: '4.14',\r\n    css: true\r\n  });\r\n\r\n  return {\r\n    WebMap, MapView, Polygon, Graphic, watchUtils, symbolUtils, ScaleBar\r\n  };\r\n};\r\n","import React from 'react';\r\nimport config from '../config';\r\nimport './Group.scss';\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"page-break\">\r\n      <h1 className=\"group__heading\" title={config.notProd && 'HazardGroupingsTable.HazardGroup'}>{props.name} Hazard</h1>\r\n      <p dangerouslySetInnerHTML={{ __html: props.text}} title={config.notProd && 'HazardGroupTextTable.Text'}></p>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useContext, useEffect } from 'react';\r\nimport { HazardMapContext } from './HazardMap';\r\nimport './MapSurround.scss';\r\nimport Loader from './Loader';\r\n\r\n\r\nexport default ({ mapKey }) => {\r\n  const scaleBarRef = useRef();\r\n  const { visualAssets } = useContext(HazardMapContext);\r\n  const mapImage = visualAssets && visualAssets[mapKey] && visualAssets[mapKey].mapImage;\r\n  const scale = (mapImage) ? visualAssets[mapKey].scale : 0;\r\n  const scaleBarDom = (mapImage) ? visualAssets[mapKey].scaleBarDom : null;\r\n\r\n  useEffect(() => {\r\n    if (scaleBarDom) {\r\n      scaleBarRef.current.appendChild(scaleBarDom);\r\n    }\r\n  }, [ scaleBarDom ]);\r\n\r\n  if (mapImage) {\r\n    return (\r\n      <>\r\n        <img src={mapImage} alt=\"map\" className=\"map-surround__image\" />\r\n        <div className=\"map-surround__parts\">\r\n          <div ref={scaleBarRef}></div>\r\n          <div className=\"map-surround__scale-text\">Scale 1:{Math.round(scale).toLocaleString()}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (<Loader />);\r\n};\r\n","import React from 'react';\r\nimport config from '../config';\r\nimport { kebabCase } from 'lodash';\r\nimport './Hazard.scss';\r\nimport MapSurround from './MapSurround';\r\nimport qffLegend from '../images/qff-legend.jpg';\r\n\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"page-break\" id={kebabCase(props.name)}>\r\n      <h2 className=\"group__heading\" title={config.notProd && \"HazardGroupingsTable.HazardGroup (from parent)\"}>{props.group} Hazard</h2>\r\n      <h2 className=\"hazard__heading\" title={config.notProd && \"HazardUnitTextTable.HazardName (from first unit)\"}>{props.name}</h2>\r\n      <p dangerouslySetInnerHTML={{ __html: props.introText }} title={config.notProd && \"HazardIntroTextTable.Text\"}></p>\r\n      <MapSurround mapKey={props.code} />\r\n      { props.code === config.quaternaryFaultsHazardCode &&\r\n        <img src={qffLegend} alt=\"QFF static legend\" className=\"hazard__static-legend\" /> }\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","export const getHazardCodeFromUnitCode = (unitCode) => {\r\n  return unitCode.slice(-3).toUpperCase();\r\n}\r\n\r\nexport const getLidarFeatureName = (projectName, areaName) => {\r\n  if (areaName) {\r\n    return `${projectName} - ${areaName}`;\r\n  }\r\n\r\n  return projectName;\r\n}\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport getModules from '../esriModules';\r\nimport config from '../config';\r\nimport { HazardMapContext } from './HazardMap';\r\nimport { getHazardCodeFromUnitCode } from '../helpers';\r\nimport './HazardUnit.scss';\r\n\r\n\r\nexport default props => {\r\n  console.log('HazardUnit', props);\r\n  const [hasLegend, setHasLegend] = useState(false);\r\n  const legend = useRef(null);\r\n  const mapContext = useContext(HazardMapContext);\r\n\r\n  useEffect(() => {\r\n    const buildLegend = async renderer => {\r\n      console.log('buildLegend', renderer);\r\n\r\n      setHasLegend(true);\r\n\r\n      const { symbolUtils } = await getModules();\r\n      let renderers = [];\r\n\r\n      if (renderer.type === 'unique-value') {\r\n        renderers = renderer.uniqueValueInfos.filter(info => info.value === props.HazardUnit);\r\n      }\r\n\r\n      if (renderers.length !== 1) {\r\n        return;\r\n      }\r\n\r\n      const symbol = renderers[0].symbol.clone();\r\n\r\n      await symbolUtils.renderPreviewHTML(symbol, {\r\n        node: legend.current\r\n      });\r\n    };\r\n\r\n    const assets = mapContext.visualAssets[getHazardCodeFromUnitCode(props.HazardUnit)];\r\n    if (!hasLegend && assets && assets.renderer) {\r\n      buildLegend(assets.renderer);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [mapContext]);\r\n\r\n  return (\r\n    <div className=\"unit\">\r\n      <div className=\"legend-container\">\r\n        <div ref={legend} className=\"legend\"></div>\r\n        <div>\r\n          <p dangerouslySetInnerHTML={{ __html: props.Description }}\r\n            title={config.notProd && 'HazardUnitTextTable.Description'}></p>\r\n          {/* <h4>How to Use This Map</h4>\r\n          <p dangerouslySetInnerHTML={{ __html: props.HowToUse }}\r\n            title={config.notProd && 'HazardUnitTextTable.HowToUse'}></p> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport config from '../config';\r\n\r\nexport default props => {\r\n  console.log('References.render');\r\n  return (\r\n    <>\r\n      <h3>References</h3>\r\n      {(props.references && props.references.length > 0) ? props.references.map((reference, index) =>\r\n        <p key={index} dangerouslySetInnerHTML={{ __html: reference }}\r\n          title={config.notProd && 'HazardReferenceTextTable.Text'}></p>)\r\n          : <p>None</p>\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import config from '../config';\r\nimport { stringify } from 'query-string';\r\nimport { getHazardCodeFromUnitCode } from '../helpers';\r\nimport polly from 'polly-js';\r\n\r\nconst retryPolicy = (url, outputFormatter=response => response) => {\r\n  return polly().waitAndRetry(3).executeForPromise(async () => {\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      return Promise.reject({\r\n        ...response,\r\n        requestURL: url\r\n      });\r\n    }\r\n\r\n    const responseJson = await response.json();\r\n\r\n    if (responseJson.error) {\r\n      return Promise.reject({\r\n        ...responseJson,\r\n        requestURL: url\r\n      });\r\n    }\r\n\r\n    return outputFormatter(responseJson);\r\n  });\r\n}\r\n\r\nexport const queryUnitsAsync = async (meta, aoi) => {\r\n  console.log('QueryService.queryUnitsAsync');\r\n\r\n  let [url, hazard] = meta\r\n\r\n  if (!url.startsWith('https')) {\r\n    url = `${config.urls.baseUrl}/${url}`;\r\n  }\r\n\r\n  const hazardField = `${hazard}HazardUnit`;\r\n\r\n  const parameters = {\r\n    geometryType: 'esriGeometryPolygon',\r\n    geometry: JSON.stringify(aoi),\r\n    returnGeometry: false,\r\n    outFields: hazardField,\r\n    f: 'json'\r\n  };\r\n\r\n  return await retryPolicy(`${url}/query?${stringify(parameters)}`, (responseJson) => {\r\n    return {\r\n      units: responseJson.features.map(feature => feature.attributes[hazardField]),\r\n        hazard,\r\n        url\r\n    };\r\n  });\r\n};\r\n\r\nconst getDistinctHazardCodesFromUnits = units => {\r\n  return units.map(unit => getHazardCodeFromUnitCode(unit));\r\n}\r\n\r\nconst queryTable = async (url, where, outFields, orderByFields) => {\r\n  const parameters = {\r\n    where,\r\n    outFields,\r\n    f: 'json',\r\n    orderByFields\r\n  };\r\n\r\n  return await retryPolicy(`${url}/query?${stringify(parameters)}`, (responseJson) => responseJson.features.map(feature => feature.attributes));\r\n};\r\n\r\nexport const queryHazardUnitTableAsync = units => {\r\n  console.log('QueryService.queryHazardUnitTableAsync');\r\n\r\n  const where = `HazardUnit IN ('${units.join('\\',\\'')}')`;\r\n  const outFields = 'HazardName,HazardUnit,HowToUse,Description,UnitName';\r\n\r\n  return queryTable(config.urls.hazardUnitTextTable, where, outFields);\r\n};\r\n\r\nexport const queryReferenceTableAsync = units => {\r\n  console.log('QueryService.queryReferenceTableAsync');\r\n\r\n  units = getDistinctHazardCodesFromUnits(units);\r\n  const where = `Hazard IN ('${units.join('\\',\\'')}')`;\r\n  const outFields = 'Hazard,Text';\r\n\r\n  return queryTable(config.urls.hazardReferenceTextTable, where, outFields);\r\n};\r\n\r\nexport const queryIntroTextAsync = units => {\r\n  console.log('QueryService.queryIntroTextAsync');\r\n\r\n  units = getDistinctHazardCodesFromUnits(units);\r\n  const where = `Hazard IN ('${units.join('\\',\\'')}')`;\r\n  const outFields = 'Hazard,Text';\r\n\r\n  return queryTable(config.urls.hazardIntroTextTable, where, outFields);\r\n};\r\n\r\nexport const queryGroupingAsync = units => {\r\n  console.log('QueryService.queryGroupingAsync');\r\n\r\n  units = getDistinctHazardCodesFromUnits(units);\r\n  const where = `HazardCode IN ('${units.join('\\',\\'')}')`;\r\n  const outFields = 'HazardCode,HazardGroup';\r\n\r\n  return queryTable(config.urls.hazardGroupingsTable, where, outFields);\r\n};\r\n\r\nexport const queryGroupTextAsync = groups => {\r\n  console.log('QueryService.queryGroupTextAsync');\r\n\r\n  const where = `HazardGroup IN ('${groups.join('\\',\\'')}')`;\r\n  const outFields = 'HazardGroup,Text';\r\n\r\n  // Sort this data according to how you want it to show up in the report.\r\n  // This does not affect the \"OtherResources\" group which is always at the bottom.\r\n  return queryTable(config.urls.hazardGroupTextTable, where, outFields, 'Order_ ASC');\r\n};\r\n\r\nexport const queryReportTextTableAsync = () => {\r\n  console.log('QueryService.queryReportTextTableAsync');\r\n\r\n  const where = '1=1';\r\n  const outFields = 'Section,Text';\r\n\r\n  return queryTable(config.urls.reportTextTable, where, outFields);\r\n};\r\n\r\nexport const queryOtherDataTableAsync = () => {\r\n  console.log('QueryService.queryOtherDataTable');\r\n\r\n  const where = '1=1';\r\n  const outFields = 'Data,Introduction,HowToUse,References_';\r\n\r\n  return queryTable(config.urls.otherDataTable, where, outFields);\r\n};\r\n\r\nexport const queryLidarAsync = async aoi => {\r\n  const parameters = {\r\n    geometryType: 'esriGeometryPolygon',\r\n    geometry: JSON.stringify(aoi),\r\n    returnGeometry: false,\r\n    outFields: ['ProjectName', 'AreaName', 'DataAccessURL'],\r\n    f: 'json'\r\n  };\r\n\r\n  return await retryPolicy(`${config.urls.lidarExtents}/query?${stringify(parameters)}`,\r\n    (responseJson) => responseJson.features.map(feature => feature.attributes));\r\n};\r\n\r\nexport const queryAerialAsync = async aoi => {\r\n  const parameters = {\r\n    geometryType: 'esriGeometryPolygon',\r\n    geometry: JSON.stringify(aoi),\r\n    returnGeometry: false,\r\n    outFields: ['Agency', 'ProjectYear', 'ProjectCode', 'ProjectName', 'Roll', 'Frame'],\r\n    f: 'json',\r\n    orderByFields: 'Agency ASC, ProjectYear DESC, ProjectCode ASC'\r\n  };\r\n\r\n  const features = await retryPolicy(`${config.urls.aerialImageryCenterPoints}/query?${stringify(parameters)}`,\r\n    (responseJson) => responseJson.features.map(feature => feature.attributes));\r\n  const agencies = Array.from(new Set(features.map(feature => feature.Agency)));\r\n\r\n  // mix in agency descriptions from related table\r\n  const agenciesWhere = `Agency IN ('${agencies.join(',')}')`;\r\n  const tableResults = await queryTable(config.urls.imageAgenciesTable, agenciesWhere, ['Agency', 'Description']);\r\n  const descriptionsLookup = {};\r\n  tableResults.forEach(result => {\r\n    descriptionsLookup[result.attributes.Agency] = result.attributes.Description;\r\n  });\r\n\r\n  return features.map(feature => {\r\n    return {\r\n      ...feature,\r\n      Description: descriptionsLookup[feature.Agency]\r\n    }\r\n  });\r\n};\r\n","import React from 'react';\r\nimport ugsLogo from '../images/ugs-logo.jpg';\r\nimport config from '../config';\r\nimport './CoverPage.scss';\r\nimport MapSurround from './MapSurround';\r\n\r\n\r\nconst date = new Date();\r\nexport default ({ aoiDescription, aoi, Introduction, Disclaimer }) => {\r\n  return (\r\n    <div className=\"cover-page\">\r\n      <div className=\"header\">\r\n        <h1>Utah Geological Survey</h1>\r\n        <img src={ugsLogo} alt=\"dnr logo\" className=\"logo\" />\r\n        <h3>GEOLOGIC HAZARDS MAPPING AND DATA CUSTOM REPORT</h3>\r\n        {/* <h3 title={config.notProd && 'from \"description\" property of input data'}>for {aoiDescription}</h3> */}\r\n        <p dangerouslySetInnerHTML={{ __html: `Report generated on ${date.toLocaleDateString()} at ${date.toLocaleTimeString()}`}}></p>\r\n      </div>\r\n      <p dangerouslySetInnerHTML={{ __html: Introduction }}\r\n        title={config.notProd && 'ReportTextTable.Text(Introduction)'}></p>\r\n      <MapSurround mapKey={config.mapKeys.overview} />\r\n      <p dangerouslySetInnerHTML={{ __html: Disclaimer }}\r\n        title={config.notProd && 'ReportTextTable.Text(Disclaimer)'}></p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport config from '../config';\r\nimport './SummaryPage.scss';\r\nimport { kebabCase } from 'lodash';\r\n\r\n\r\nexport default props => {\r\n  console.log('SummaryPage.render', props);\r\n\r\n  let hazardUnits = [];\r\n  Object.values(props.groupToHazardMap).forEach(hazardCodes => {\r\n    hazardCodes.forEach(code => {\r\n      hazardUnits = hazardUnits.concat(props.hazardToUnitMap[code]);\r\n    })\r\n  });\r\n\r\n  return (\r\n    <div className=\"page-break summary-page\">\r\n      <div className=\"header\">\r\n        <h1>Report Summary</h1>\r\n      </div>\r\n      <p dangerouslySetInnerHTML={{ __html: props.Top }} title={config.notProd && \"ReportTextTable.Text(Top)\"}></p>\r\n      <p dangerouslySetInnerHTML={{ __html: props['Table1headingautogenerated table'] }}\r\n        title={config.notProd && \"ReportTextTable.Text(Table 1 heading...)\"}></p>\r\n      <table className=\"summary-page__table summary-page__table--bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Mapped Geologic Hazards</th>\r\n            <th>Hazard Category</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { hazardUnits.map((unit, index) =>\r\n            <tr key={index}>\r\n              <td><a href={`#${kebabCase(unit.HazardName)}`}>{unit.HazardName}</a></td>\r\n              <td>{unit.UnitName}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      {/* <p dangerouslySetInnerHTML={{ __html: props['Table2headingautogenerated table'] }}\r\n        title={config.notProd && \"ReportTextTable.Text(Table 2 heading...)\"}></p> */}\r\n      {/* <table className=\"summary-page__table summary-page__table--bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Other Available Data</th>\r\n          </tr>\r\n        </thead> */}\r\n        {/* <tbody>\r\n          { props.lidarFeatures.length > 0 &&\r\n            <tr>\r\n              <td><a href=\"#lidar\">Lidar Elevation Data (high-resolution ground topography)</a></td>\r\n            </tr>\r\n          }\r\n          { props.aerialFeatures.length > 0 &&\r\n            <tr>\r\n              <td><a href=\"#aerial-photography\">Aerial Photography and Imagery</a></td>\r\n            </tr>\r\n          }\r\n          { props.aerialFeatures.length < 1 && props.lidarFeatures.length < 1 &&\r\n            <tr>\r\n              <td>No other data</td>\r\n            </tr>\r\n          }\r\n        </tbody> */}\r\n      {/* </table> */}\r\n      <p dangerouslySetInnerHTML={{ __html: props.Bottom }} title={config.notProd && \"ReportTextTable.Text(Bottom)\"}></p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './ProgressBar.scss';\r\n\r\n\r\nexport default props => {\r\n  console.log('Progress.render');\r\n\r\n  const values = Object.values(props.tasks);\r\n  const max = values.length;\r\n\r\n  let completed = 0;\r\n  let percent = 0;\r\n  if (max > 0) {\r\n    completed = values.filter(x => x).length;\r\n    percent = ((completed / max) * 100);\r\n  }\r\n\r\n  const classes = classNames(\r\n    \"progress-bar\",\r\n    \"progress-bar--striped\",\r\n    { \"progress-bar--animated\": max > completed }\r\n  );\r\n\r\n  const parentClasses = classNames(\r\n    props.className\r\n  )\r\n\r\n  return (<div className={parentClasses}>\r\n    {completed < max ?\r\n      <div className=\"progress\">\r\n        <div className={classes}\r\n          style={{ width: `${percent}%` }}\r\n          role=\"progressbar\"\r\n          area-valuenow={percent}\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax={max}\r\n        ></div>\r\n      </div> :\r\n      props.children\r\n    }\r\n  </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './ErrorPage.scss';\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"error-page\">\r\n      <h1 className=\"error-page__heading\">There was an error generating the report</h1>\r\n      <p>We are not displaying the report because an error has occurred resulting in an incomplete assessment of your area of interest. In order to not provide incomplete results and imply false information, we are unable to provide the report functionality at this time.</p>\r\n      <p>Please contact UGS with the information provided.</p>\r\n      <pre className=\"error-page__error\">{JSON.stringify(props.error, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n","import React, { createContext, useCallback, useState, useEffect } from 'react';\r\nimport './App.scss';\r\nimport config from './config';\r\nimport HazardMap from './reportParts/HazardMap';\r\nimport Group from './reportParts/Group';\r\nimport Hazard from './reportParts/Hazard';\r\nimport HazardUnit from './reportParts/HazardUnit';\r\nimport References from './reportParts/References';\r\nimport {\r\n  queryUnitsAsync,\r\n  queryHazardUnitTableAsync,\r\n  queryReferenceTableAsync,\r\n  queryIntroTextAsync,\r\n  queryGroupingAsync,\r\n  queryGroupTextAsync,\r\n  queryReportTextTableAsync,\r\n  queryOtherDataTableAsync,\r\n  queryLidarAsync,\r\n  queryAerialAsync\r\n} from './services/QueryService';\r\nimport { getHazardCodeFromUnitCode } from './helpers';\r\nimport CoverPage from './reportParts/CoverPage';\r\nimport SummaryPage from './reportParts/SummaryPage';\r\nimport OtherDataPage from './reportParts/OtherDataPage';\r\nimport ProgressBar from './reportParts/ProgressBar';\r\n// import LidarFeature from './reportParts/LidarFeature';\r\n// import AerialFeature from './reportParts/AerialFeature';\r\nimport ErrorPage from './reportParts/ErrorPage';\r\n\r\n\r\nexport const ProgressContext = createContext();\r\nconsole.log(`using web map: ${config.webMaps.hazard}`);\r\n\r\nexport default props => {\r\n  const [groupToHazardMap, setGroupToHazardMap] = useState({});\r\n  const [hazardToUnitMap, setHazardToUnitMap] = useState({});\r\n  const [hazardIntroText, setHazardIntroText] = useState();\r\n  const [hazardReferences, setHazardReferences] = useState();\r\n  const [queriesWithResults, setQueriesWithResults] = useState([]);\r\n  const [groupToTextMap, setGroupToTextMap] = useState([]);\r\n  const [reportTextMap, setReportTextMap] = useState({});\r\n  const [otherDataMap, setOtherDataMap] = useState({});\r\n  // const [lidarFeatures, setLidarFeatures] = useState([]);\r\n  // const [aerialFeatures, setAerialFeatures] = useState([]);\r\n  const [tasks, setTasks] = useState({});\r\n  const [pageError, setError] = useState(false);\r\n\r\n  const registerProgressItem = useCallback(itemId => {\r\n    setTasks(previousTasks => {\r\n      if (previousTasks[itemId]) {\r\n        throw Error(`${itemId} is already registered as a progress task!`);\r\n      }\r\n\r\n      return {\r\n        ...previousTasks,\r\n        [itemId]: false\r\n      };\r\n    });\r\n  }, []);\r\n  const setProgressItemAsComplete = useCallback(itemId => {\r\n    setTasks(previousTasks => {\r\n      return {\r\n        ...previousTasks,\r\n        [itemId]: true\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      console.log('App.getData');\r\n\r\n      const relatedTablesProgressId = 'related tables'\r\n      registerProgressItem(relatedTablesProgressId);\r\n\r\n      const allHazardInfos = await Promise.all(config.queries.map(featureClassMap => {\r\n        registerProgressItem(featureClassMap);\r\n\r\n        return queryUnitsAsync(featureClassMap, props.polygon).then(data => {\r\n          setProgressItemAsComplete(featureClassMap);\r\n\r\n          return data;\r\n        });\r\n      }));\r\n\r\n      console.log('queried all units');\r\n\r\n      const hazardInfos = allHazardInfos.filter(({ units }) => units.length > 0);\r\n      const flatUnitCodes = Array.from(new Set(hazardInfos.reduce((previous, { units }) => previous.concat(units), [])));\r\n      setQueriesWithResults(hazardInfos.map(info => [info.url, info.hazard]));\r\n\r\n      // these queries can be done simultaneously\r\n      const [\r\n        groupings,\r\n        hazardIntroText,\r\n        hazardUnitText,\r\n        hazardReferences,\r\n        reportTextRows,\r\n        otherDataRows,\r\n        // lidarFeatures,\r\n        // aerialFeatures\r\n      ] = await Promise.all([\r\n        queryGroupingAsync(flatUnitCodes),\r\n        queryIntroTextAsync(flatUnitCodes),\r\n        queryHazardUnitTableAsync(flatUnitCodes),\r\n        queryReferenceTableAsync(flatUnitCodes),\r\n        queryReportTextTableAsync(),\r\n        queryOtherDataTableAsync(),\r\n        // queryLidarAsync(props.polygon),\r\n        // queryAerialAsync(props.polygon)\r\n      ]);\r\n      setProgressItemAsComplete(relatedTablesProgressId);\r\n\r\n      const otherDataMapBuilder = {};\r\n      otherDataRows.forEach(row => {\r\n        otherDataMapBuilder[row.Data] = row;\r\n      });\r\n      setOtherDataMap(otherDataMapBuilder);\r\n\r\n      const reportTextMapBuilder = {};\r\n      reportTextRows.forEach(({ Section, Text }) => {\r\n        reportTextMapBuilder[Section] = Text;\r\n      });\r\n      setReportTextMap(reportTextMapBuilder);\r\n\r\n      const flatGroups = Array.from(new Set(groupings.map(({ HazardGroup }) => HazardGroup)));\r\n      const groupText = await queryGroupTextAsync(flatGroups);\r\n\r\n      const groupToTextMapBuilder = {};\r\n      const groupToHazardMapBuilder = {};\r\n      groupText.forEach(({ HazardGroup, Text }) => {\r\n        groupToTextMapBuilder[HazardGroup] = Text;\r\n\r\n        // build this object here so that the order is correct for when we use it in the jsx below\r\n        groupToHazardMapBuilder[HazardGroup] = [];\r\n      });\r\n\r\n      const hazardToUnitMapBuilder = {};\r\n      hazardUnitText.forEach(({ HazardUnit, HazardName, HowToUse, Description, UnitName }) => {\r\n        const hazardCode = getHazardCodeFromUnitCode(HazardUnit);\r\n\r\n        if (!hazardToUnitMapBuilder[hazardCode]) {\r\n          hazardToUnitMapBuilder[hazardCode] = [];\r\n        }\r\n\r\n        hazardToUnitMapBuilder[hazardCode].push({ HazardName, HowToUse, Description, HazardUnit, UnitName });\r\n      });\r\n\r\n      groupings.forEach(({ HazardCode, HazardGroup }) => groupToHazardMapBuilder[HazardGroup].push(HazardCode));\r\n\r\n      setHazardToUnitMap(hazardToUnitMapBuilder);\r\n      setGroupToHazardMap(groupToHazardMapBuilder);\r\n      setHazardIntroText(hazardIntroText);\r\n      setHazardReferences(hazardReferences);\r\n      setGroupToTextMap(groupToTextMapBuilder);\r\n      // setLidarFeatures(lidarFeatures);\r\n      // setAerialFeatures(aerialFeatures);\r\n    };\r\n\r\n    if (props.polygon) {\r\n      getData().then(null, (error) => {\r\n        console.warn(error);\r\n        setError(error);\r\n      });\r\n    }\r\n  }, [props.polygon, registerProgressItem, setProgressItemAsComplete]);\r\n\r\n  return (!pageError ? <>\r\n    <ProgressContext.Provider value={{ registerProgressItem, setProgressItemAsComplete }}>\r\n      <ProgressBar className=\"print--hide\" tasks={tasks}>\r\n        <div className=\"print-button\">\r\n          <button onClick={window.print}>Print Report</button>\r\n        </div>\r\n      </ProgressBar>\r\n      <div className=\"app__container\">\r\n        <HazardMap aoi={props.polygon} queriesWithResults={queriesWithResults}>\r\n          <CoverPage aoiDescription={props.description} {...reportTextMap} />\r\n          <SummaryPage {...reportTextMap}\r\n            hazardToUnitMap={hazardToUnitMap}\r\n            // aerialFeatures={aerialFeatures}\r\n            // lidarFeatures={lidarFeatures}\r\n            groupToHazardMap={groupToHazardMap} />\r\n          {Object.keys(groupToHazardMap).map(groupName => (\r\n            <Group key={groupName} name={groupName} text={groupToTextMap[groupName]}>\r\n              {hazardIntroText && hazardReferences && hazardToUnitMap && groupToHazardMap[groupName].map(hazardCode => {\r\n                const intro = hazardIntroText.filter(x => x.Hazard === hazardCode)[0];\r\n                const introText = (intro) ? intro.Text : null;\r\n                const references = hazardReferences.filter(x => x.Hazard === hazardCode);\r\n                const units = hazardToUnitMap[hazardCode];\r\n                    return (\r\n                      <Hazard name={units[0].HazardName} group={groupName} introText={introText} key={hazardCode} code={hazardCode}>\r\n                        { units.map((unit, index) => <HazardUnit key={index} {...unit}/>) }\r\n                        <References references={references.map(({ Text }) => Text)}></References>\r\n                      </Hazard>\r\n                    )\r\n                  })}\r\n            </Group>\r\n          ))}\r\n          {/* <OtherDataPage {...otherDataMap['Lidar Elevation Data']} mapKey={config.mapKeys.lidar} id=\"lidar\">\r\n            {lidarFeatures.map((feature, index) => <LidarFeature key={index} {...feature} />)}\r\n          </OtherDataPage>\r\n          <OtherDataPage {...otherDataMap['Aerial Photography and Imagery']} mapKey={config.mapKeys.aerials} id=\"aerial-photography\">\r\n            {aerialFeatures.map((feature, index) => <AerialFeature key={index} {...feature} />)}\r\n          </OtherDataPage> */}\r\n        </HazardMap>\r\n        <div className=\"header page-break\">\r\n          <h1>OTHER GEOLOGIC HAZARD RESOURCES</h1>\r\n          <p dangerouslySetInnerHTML={{__html: reportTextMap.OtherGeologicHazardResources}}\r\n            title={config.notProd && 'ReportTextTable.Text(OtherGeologicHazardResources)'}></p>\r\n        </div>\r\n      </div>\r\n      </ProgressContext.Provider>\r\n  </> : <ErrorPage error={pageError} />);\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\n\r\nconsole.log(`app version: ${process.env.REACT_APP_VERSION || 'dev'}`);\r\nconsole.log(`environment: ${process.env.REACT_APP_ENVIRONMENT}`);\r\n\r\nconst init = (aoi) => {\r\n  console.log('aoi', aoi);\r\n\r\n  ReactDOM.render(<App {...aoi} />, document.getElementById('root'));\r\n};\r\n\r\nlet aoi = localStorage.getItem('aoi');\r\nif (!aoi) {\r\n  import('./testData.json').then(aoi => init(aoi));\r\n} else {\r\n  init(JSON.parse(aoi));\r\n}\r\n"],"sourceRoot":""}